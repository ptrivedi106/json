{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PlanetFitnessDF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Load_Source_RCM_Soft_Collection_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RCM_SOFT_COLLECT_LOCATION_COMMUNICATION_PREFER_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RCM_SOFT_COLLECT_LOCATION_COMMUNICATION_PREFER_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate1').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate1').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgRCM"
									},
									"StgTable": {
										"type": "String",
										"value": "SOFT_COLLECTION_LOCATION_COMMUNICATION_PREFERENCE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgRCM"
									},
									"StgTable": {
										"type": "String",
										"value": "SOFT_COLLECTION_PAYOR_COMMUNICATION_PREFERENCE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "RCM_SOFT_COLLECTION_PAYOR_COMMUNICATION_PREFER_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RCM_SOFT_COLLECTION_PAYOR_COMMUNICATION_PREFER_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate2').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate2').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-21T13:54:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Source_RCM_Taxation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetRangeDate1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgRCM"
									},
									"StgTable": {
										"type": "String",
										"value": "TAXATION_TAX_LOCATION"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "RCM_TAXATION_TAX_LOCATION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RCM_TAXATION_Tax_Location",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate1').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate1').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:41:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Source_RCM_Taxation_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RCM_Taxation_Tax_Item_Jurisdiction_Document_Merge",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RCM_TAXATION_Tax_Item_Jurisdiction_Document_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate1').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate1').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgRCM"
									},
									"StgTable": {
										"type": "String",
										"value": "Taxation_Tax_Item_Jurisdiction_Document"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgRCM"
									},
									"StgTable": {
										"type": "String",
										"value": "Taxation_Tax_Location"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "RCM_Taxation_Tax_Location",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RCM_TAXATION_Tax_location_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate2').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate2').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgRCM"
									},
									"StgTable": {
										"type": "String",
										"value": "Taxation_Tax_Transaction_Document"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "RCM_Taxation_Tax_Transaction_Document",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RCM_TAXATION_Tax_Transaction_Document_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate3').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate3').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgRCM"
									},
									"StgTable": {
										"type": "String",
										"value": "Taxation_Tax_Transaction_Item_Document"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "RCM_Taxation_Tax_Transaction_Item_Document",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RCM_TAXATION_Tax_Transaction_Document_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate4').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate4').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-18T18:24:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PF_PROJECTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get cddte value",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select FORMAT(DATEADD(day,16,t1.DateMonthStart),'yyMMdd') as cddte\n\t\tfrom dbo.dim_Date t1\n\t\twhere CalendarDate = cast (getdate() as date)\n\t\tand (DayOfMonth between 1 and 17)\n\t\tUNION \nselect  FORMAT(DATEADD(day,17,t1.DateMonthEnd),'yyMMdd') as cddte\n\t\tfrom dbo.dim_Date t1\n\t\twhere CalendarDate = cast (getdate() as date)\n\t\tand (DayOfMonth between 18 and 31 )",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "PF_PROJECTION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get cddte value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PF_PROJECTION_ISERIES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"cddte_value": {
									"value": "@activity('Get cddte value').output.firstRow.cddte",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "check Oracle Job",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select JOB_NAME,START_TIME,FINISH_TIME,STATUS, 'PF_PROJECTION' as FBI_JOB_NAME \nfrom dw.job_monitoring_vw \nwhere job_name like '%PF_SNAPSHOT_ETL%' \nand status = 'SUCCESS' \nand to_date(finish_time,'YYYY/MM/DD HH24:MI:SS') > trunc(sysdate)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "OracleTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Iseries_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reload BPDPMT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetRangeDate12",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPDPMT"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPDPMT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate12",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPDPMT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate12').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate12').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:41:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_cifil_cwfil')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetRangeDate5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CIFIL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CIFIL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CIFIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate5').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate5').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ABC400FIL_CWFIL",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CWFIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:41:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DW_TEST_DW_PF_GENDER_SMRY_VW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Start Date_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_TEST_DW_PF_GENDER_SMRY_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('Get Start Date_3').output.firstRow.windowStart",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get Start Date_3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select ISNULL(max(ETL_DATE_KEY),20230101) as WindowStart\nfrom [DW].[PF_GENDER_SMRY] t1\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DW_TEST_DW_PF_ANNUAL_PROJECTION_SMRY_VW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Start Date_6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_TEST_DW_PF_ANNUAL_PROJECTION_SMRY_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('Get Start Date_6').output.firstRow.windowStart",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get Start Date_6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select ISNULL(max(ETL_DATE_KEY),20230101) as WindowStart\nfrom [DW].[PF_ANNUAL_PROJECTION_SMRY] t1\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reload_Ctfilcctr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FactCollectionByAgeUpdateADF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ABC400FIL_CTFILCCTR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DimFact].[FactCollectionByAgeUpdateADF]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ABC400FIL_CTFILCCTR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate14",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CTFILCCTR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate14').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate14').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate14",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CTFILCCTR"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:41:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reload_Ctfilcctr_ANYTIME')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetRangeDate14",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CTFILCCTR"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CTFILCCTR_ANYTIME",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate14",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CTFILCCTR_ANYTIME",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate14').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate14').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:41:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Checkins_IsDeleted_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CheckIns_IsDelete_SQLPOOL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-06-04T14:00:00",
						"timeZone": "Central Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ClubFitnessHolding_DRDR_test')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ClubFitnessHolding_DRDR_load",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2022-01-31T18:57:00",
						"timeZone": "Central Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mass_Update')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Mass_update_Table",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-05-25T12:30:00",
						"timeZone": "Central Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PFMemberAgreementUDF')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PF_Agreement_UDF",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PF_Member_UDF",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 12,
						"startTime": "2021-11-19T20:06:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PF_Alternate_Billing')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PF_Aternate_Billing",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-06-03T03:30:00",
						"timeZone": "Pacific Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/POSSuspendedItem_Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Possuspendeditems",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-02-10T21:00:00",
						"timeZone": "Central Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_5sa')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "club_copy",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 6,
						"startTime": "2021-07-09T18:40:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "HostBoundTrans",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 6,
						"startTime": "2022-11-04T03:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ServiceProviderLocations_SQLPOOL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 5,
						"startTime": "2022-12-07T18:19:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Source_Iseries')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Group 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Stage Club ISeries",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Load_Source_Iseries_Group1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Group 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Stage Club ISeries",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Load_Source_Iseries_Group2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load NoDate",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Stage Club ISeries",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Load_Source_Iseries_GroupNoDate",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Stage Club ISeries",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DW].[Stage_Club_Iseries_Load]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FactCollectionByAgeUpdateADF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load Group 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DimFact].[FactCollectionByAgeUpdateADF]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:41:03Z"
			},
			"dependsOn": []
		}
	]
}