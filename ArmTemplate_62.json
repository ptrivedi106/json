{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PlanetFitnessDF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Accessschemes_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ACCESSSCHEMES",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select /*+INDEX(t,PK_ACCESSSCHEMES)*/ *  from BETADATA.ACCESSSCHEMES t\nwhere ASCH_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND ASCH_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "ASCH_ID",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "ASCH_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ASCH_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "ASCH_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ASCH_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_NAME",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_DESCRIPTION",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_SHORT_NAME",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_SHORT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_SUNDAY",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_SUNDAY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_MONDAY",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_MONDAY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_TUESDAY",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_TUESDAY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_WEDNESDAY",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_WEDNESDAY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_THURSDAY",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_THURSDAY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_FRIDAY",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_FRIDAY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_SATURDAY",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_SATURDAY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_COLOR",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_COLOR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ASCH_ABC_CODE",
														"type": "String"
													},
													"sink": {
														"name": "ASCH_ABC_CODE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_ACCESSSCHEMES",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_ACCESSSCHEMES_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.STG_ACCESSSCHEMES_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[Stg_AccessSchemes_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group1"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Accounting_Pull')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "DECLARE @BEGINDATE date = CONVERT(datetime,'@{formatDateTime(pipeline().parameters.begindate, 'yyyy-MM-dd HH:mm' )}')\nDECLARE @ENDDATE date = CONVERT(datetime,'@{formatDateTime(pipeline().parameters.enddate, 'yyyy-MM-dd HH:mm' )}')\n\nSELECT \na2.JournalKey\n,a2.CompanyReferenceIDType\n,a2.CompanyReferenceID\n,a2.Currency\n,a2.LineCurrency\n,a2.LedgerType\n,a2.AccountingDate\n,a2.JournalEntryMemo\n,a2.LineOrder\n,a2.LedgerAccountReferenceID_ParentIDType\n,a2.LedgerAccountReferenceID_ParentID\n,a2.LedgerAccountReferenceIDType\n,a2.LedgerAccountReferenceID\n,a2.DebitAmount\n,a2.CreditAmount\n,a2.LedgerDebitAmount\n,a2.LedgerCreditAmount\n,a2.LineMemo\n,a2.Worktag_Cost_Center_Reference_ID\n,a2.Worktag_Customer_Reference_ID\n,a2.Worktag_Custom_Organization_Reference_ID\n,a2.Worktag_Revenue_Category_ID \n,a2.Worktag_Spend_Category_ID\n,a2.CurrencyRateType\n\nfrom (\nselect\na1.transaction_key\n,a1.JournalKey\n,isnull(a1.CompanyReferenceIDType, '') as CompanyReferenceIDType\n,isnull(a1.CompanyReferenceID, '') as CompanyReferenceID\n,isnull(a1.Currency, '') as Currency\n,isnull(a1.LineCurrency, '') as LineCurrency\n,isnull(a1.LedgerType, '') as LedgerType\n,CONVERT(char(10), @EndDate,126) as AccountingDate\n,isnull(a1.JournalEntryMemo, '') as JournalEntryMemo\n,isnull(a1.LineOrder, '') as LineOrder\n,isnull(a1.LedgerAccountReferenceID_ParentIDType, '') as LedgerAccountReferenceID_ParentIDType\n,isnull(a1.LedgerAccountReferenceID_ParentID, '') as LedgerAccountReferenceID_ParentID\n,isnull(a1.LedgerAccountReferenceIDType, '') as LedgerAccountReferenceIDType\n,isnull(B.CREDIT_LedgerAccountReferenceID, '') as LedgerAccountReferenceID\n,DebitAmount = ''\n,cast(cast(a1.creditamount as money) as nvarchar) as CreditAmount\n,isnull(a1.LedgerDebitAmount, '') as LedgerDebitAmount\n,isnull(a1.LedgerCreditAmount, '') as LedgerCreditAmount\n,isnull(a1.LineMemo, '') as LineMemo\n,isnull(a1.Worktag_Cost_Center_Reference_ID, '') as Worktag_Cost_Center_Reference_ID\n,isnull(right('00000'+a1.Worktag_Customer_Reference_ID,5), '') as Worktag_Customer_Reference_ID\n,isnull(right('00000'+a1.Worktag_Custom_Organization_Reference_ID,5), '') as Worktag_Custom_Organization_Reference_ID\n,isnull(B.Revenue_cat_credit, '') as Worktag_Revenue_Category_ID\n,isnull(B.Spend_Cat_credit, '') as Worktag_Spend_Category_ID\n,isnull(a1.CurrencyRateType, '') as CurrencyRateType\nfrom (\nselect [transaction_key] as [transaction_key]\n,JournalKey = concat('COMM','-',@EndDate)\n,CompanyReferenceIDType = 'Company_Reference_ID'\n,CompanyReferenceID = 'LE005'\n,Currency = 'USD'\n,LineCurrency = 'USD'\n,LedgerType = 'Actuals'\n,max(cae_posting_date) as AccountingDate\n,JournalEntryMemo = cast(getdate() as date)\n,LineOrder = 1\n,LedgerAccountReferenceID_ParentIDType = 'Account_Set_ID'\n,LedgerAccountReferenceID_ParentID = 'ABC Financial Child'\n,LedgerAccountReferenceIDType = 'Ledger_Account_ID'\n,sum([transaction_amount]) As DebitAmount\n,sum([transaction_amount]) As CreditAmount\n,LedgerDebitAmount = null\n,LedgerCreditAmount = null\n,LineMemo = concat([transaction_key],'-',@BEGINDATE,'-',@EndDate)\n,Worktag_Cost_Center_Reference_ID = 'CC001'\n-- ,Worktag_Cost_Center_Reference_ID = 'CC000'\n,[loc_number] as Worktag_Custom_Organization_Reference_ID\n,[loc_number] as Worktag_Customer_Reference_ID\n,CurrencyRateType = 'AVERAGE'\nFROM (\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[transaction_amount]\n,[transaction_action] as trans_type\n,SRC = 'Payment'\nFROM [Accounting].[PAYMENT_TRANSACTION] where [transaction_type] <> 'Deposit'\n\nUnion all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[posting_date] as [Settlement_Date]\n,[transaction_amount]\n,[transaction_action] as trans_type\n,SRC = 'Deposit'\nFROM [Accounting].[PAYMENT_TRANSACTION] where [transaction_type] = 'Deposit'\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[transaction_amount]\n,[transaction_action] as trans_type\n,SRC = 'Club Account Payments'\nFROM [Accounting].[UNMANAGED_PAYMENT_REFUND] \nWHERE transaction_type = 'UNMANAGED_PAYMENT'\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[amount] as [transaction_amount]\n,[type] as trans_type\n,SRC = 'Club Account Returns'\nFROM [Accounting].[UNMANAGED_ACH_RETURN_TRANSACTION]\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[bae_amount] as [transaction_amount]\n,[bae_type] as trans_type\n,SRC = 'Club Account Chargebacks'\nFROM [Accounting].[UNMANAGED_CHARGEBACKS]\nWHERE bae_transaction_type = 'UNMANAGED_CHARGEBACK'\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[bae_amount] as [transaction_amount]\n,[bae_type] as trans_type\n,SRC = 'Club Account Chargeback Repost'\nFROM [Accounting].[UNMANAGED_CHARGEBACKS]\nWHERE bae_transaction_type = 'UNMANAGED_CHARGEBACK_REPOST'\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[transaction_amount]\n,[transaction_action] as trans_type\n,SRC = 'Club Account Refunds'\nFROM [Accounting].[UNMANAGED_PAYMENT_REFUND] \nWHERE transaction_type <> 'UNMANAGED_PAYMENT'\n\nUnion all\n\nSELECT [transaction_key],\n[loc_number]\n,[cae_posting_date] as [posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[bae_amount] as [transaction_amount]\n,[bae_type] as Trans_Type\n,src = 'CHARGEBACK_TRANSACTION'\nFROM [Accounting].[CHARGEBACK_TRANSACTION]\nUNION all\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date] as [posting_date]\n,[settlement_date] as [settlement_date]\n,[cae_amount] as [transaction_amount]\n,[cae_type] as trans_type\n,src = 'CLIENT_SCHEDULED_FEE'\nFROM [Accounting].[CLIENT_SCHEDULED_FEE]\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date] as [posting_date]\n,[settlement_date] as [settlement_date]\n,[cae_amount] as [transaction_amount]\n,[cae_type] as trans_type\n,src = 'CLIENT_TRANSACTION_FEE'\nFROM [Accounting].[CLIENT_TRANSACTION_FEE]\n\nUNION all\nSELECT [transaction_key]\n,[loc_number]\n,[pay_posting_date] as [posting_date]\n,[client_settlement_date] as [settlement_date]\n,[cae_amount] as [transaction_amount]\n,[cae_type] as trans_type\n,src = 'Member_transaction_fee'\nFROM [Accounting].[MEMBER_TRANSACTION_FEE] where cae_type <> 'none'\n\nUNION all\n\nSELECT [transaction_key],\n[loc_number]\n,[cae_posting_date] as [posting_date]\n,[client_settlement_date] as [settlement_date]\n,[return_amount] as [transaction_amount]\n,[return_payment_action] as trans_type\n,src = 'RETURN_TRANSACTION'\nFROM [Accounting].[RETURN_TRANSACTION] \n\nUNION ALL\n------------Bundled Payments\nSELECT [transaction_key]\n      ,[loc_number] \n      ,[cae_posting_date] as [PostingDate]\n\t  ,[client_settlement_date] as [settlement_date]\n      ,transaction_amount\n\t  ,transaction_action  AS trans_type\n\t  ,src= 'Bundled Payments' \n\nFROM [Accounting].[BUNDLED_PAYMENT]\n\nUNION ALL \n---------------Bundled Returns\nSELECT [transaction_key]\n\t  ,[loc_number] \n      ,[cae_posting_date] as [PostingDate]\n\t  ,[client_settlement_date] as [settlement_date]\n      ,transaction_amount =  amount\n\t  ,[type]  AS trans_type\n\t  ,src= 'Bundled Returns' \n\t\nFROM [Accounting].[BUNDLED_ACH_RETURN] \n\nUNION ALL\n----------------------Bundled Chargebacks & Repost\n\nSELECT [transaction_key]\n      ,[loc_number] \n      ,[cae_posting_date] as [PostingDate]\n\t  ,[client_settlement_date] as [settlement_date]\n      ,transaction_amount =  bae_amount\n\t  ,bae_transaction_type  AS trans_type\n\t  ,Src = CASE WHEN bae_transaction_type = 'BUNDLED_CHARGEBACK' THEN 'Bundled Chargebacks' ELSE 'Bundled Chargebakcs / Repost' END\n\t  \nFROM [Accounting].[BUNDLED_CHARGEBACK]\n\n) as A \nWhere cae_posting_date between @BEGINDATE and @EndDate \n--and transaction_key = 'DEPOSIT.DEBIT.BANK_ACCOUNT.WIRE'\ngroup by [transaction_key] ,[loc_number]\n\n) as A1 left join accounting.TRANSACTION_TYPE_MAPPINGS B on b.Transaction_Type=a1.transaction_key\n\nUnion ALL\n\nselect\na1.transaction_key,\na1.JournalKey\n,isnull(a1.CompanyReferenceIDType, '') as CompanyReferenceIDType\n,isnull(a1.CompanyReferenceID, '') as CompanyReferenceID\n,isnull(a1.Currency, '') as Currency\n,isnull(a1.LineCurrency, '') as LineCurrency\n,isnull(a1.LedgerType, '') as LedgerType\n,CONVERT(char(10), @EndDate,126) as AccountingDate\n,isnull(a1.JournalEntryMemo, '') as JournalEntryMemo\n,isnull(a1.LineOrder, '') as LineOrder\n,isnull(a1.LedgerAccountReferenceID_ParentIDType, '') as LedgerAccountReferenceID_ParentIDType\n,isnull(a1.LedgerAccountReferenceID_ParentID, '') as LedgerAccountReferenceID_ParentID\n,isnull(a1.LedgerAccountReferenceIDType, '') as LedgerAccountReferenceIDType\n,isnull(B.DEBIT_LedgerAccountReferenceID, '') as LedgerAccountReferenceID\n,cast(cast(a1.debitamount as money) as nvarchar) as DebitAmount\n, '' as CreditAmount\n,isnull(a1.LedgerDebitAmount, '') as LedgerDebitAmount\n,isnull(a1.LedgerCreditAmount, '') as LedgerCreditAmount\n,isnull(a1.LineMemo, '') as LineMemo\n,isnull(a1.Worktag_Cost_Center_Reference_ID, '') as Worktag_Cost_Center_Reference_ID\n,isnull(right('00000'+a1.Worktag_Customer_Reference_ID,5), '') as Worktag_Customer_Reference_ID\n,isnull(right('00000'+a1.Worktag_Custom_Organization_Reference_ID,5), '') as Worktag_Custom_Organization_Reference_ID\n,isnull(B.Revenue_Cat_Debit, '') as Worktag_Revenue_Category_ID\n,isnull(B.Spend_Cat_Debit, '') as Worktag_Spend_Category_ID\n,isnull(a1.CurrencyRateType, '') as CurrencyRateType\nfrom (\nselect [transaction_key] as [transaction_key]\n,JournalKey = concat('COMM','-',@EndDate)\n,CompanyReferenceIDType = 'Company_Reference_ID'\n,CompanyReferenceID = 'LE005'\n,Currency = 'USD'\n,LineCurrency = 'USD'\n,LedgerType = 'Actuals'\n,max(cae_posting_date) as AccountingDate\n,JournalEntryMemo = cast(getdate() as date)\n,LineOrder = 1\n,LedgerAccountReferenceID_ParentIDType = 'Account_Set_ID'\n,LedgerAccountReferenceID_ParentID = 'ABC Financial Child'\n,LedgerAccountReferenceIDType = 'Ledger_Account_ID'\n,sum([transaction_amount]) As DebitAmount\n,sum([transaction_amount]) As CreditAmount\n,LedgerDebitAmount = null\n,LedgerCreditAmount = null\n,LineMemo = concat([transaction_key],'-',@BEGINDATE,'-',@EndDate)\n,Worktag_Cost_Center_Reference_ID = 'CC001'\n--,Worktag_Cost_Center_Reference_ID = 'CC000'\n,[loc_number] as Worktag_Custom_Organization_Reference_ID\n,[loc_number] as Worktag_Customer_Reference_ID\n,CurrencyRateType = 'AVERAGE'\nfrom (\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[transaction_amount]\n,[transaction_action] as trans_type\n,SRC = 'Payment'\nFROM [Accounting].[PAYMENT_TRANSACTION] where [transaction_type] <> 'Deposit'\n\nUnion all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[posting_date] as [Settlement_Date]\n,[transaction_amount]\n,[transaction_action] as trans_type\n,SRC = 'Deposit'\nFROM [Accounting].[PAYMENT_TRANSACTION] where [transaction_type] = 'Deposit'\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[transaction_amount]\n,[transaction_action] as trans_type\n,SRC = 'Club Account Payments'\nFROM [Accounting].[UNMANAGED_PAYMENT_REFUND] \nWHERE transaction_type = 'UNMANAGED_PAYMENT'\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[transaction_amount]\n,[transaction_action] as trans_type\n,SRC = 'Club Account Refunds'\nFROM [Accounting].[UNMANAGED_PAYMENT_REFUND] \nWHERE transaction_type <> 'UNMANAGED_PAYMENT'\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[amount] as [transaction_amount]\n,[type] as trans_type\n,SRC = 'Club Account Returns'\nFROM [Accounting].[UNMANAGED_ACH_RETURN_TRANSACTION]\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[bae_amount] as [transaction_amount]\n,[bae_type] as trans_type\n,SRC = 'Club Account Chargebacks'\nFROM [Accounting].[UNMANAGED_CHARGEBACKS]\nWHERE bae_transaction_type = 'UNMANAGED_CHARGEBACK'\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[bae_amount] as [transaction_amount]\n,[bae_type] as trans_type\n,SRC = 'Club Account Chargeback Repost'\nFROM [Accounting].[UNMANAGED_CHARGEBACKS]\nWHERE bae_transaction_type = 'UNMANAGED_CHARGEBACK_REPOST'\n\nUnion all\n\nSELECT [transaction_key],\n[loc_number]\n,[cae_posting_date] as [posting_date]\n,[client_settlement_date] as [Settlement_Date]\n,[bae_amount] as [transaction_amount]\n,[bae_type] as Trans_Type\n,src = 'CHARGEBACK_TRANSACTION'\nFROM [Accounting].[CHARGEBACK_TRANSACTION]\nUNION all\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date] as [posting_date]\n,[settlement_date] as [settlement_date]\n,[cae_amount] as [transaction_amount]\n,[cae_type] as trans_type\n,src = 'CLIENT_SCHEDULED_FEE'\nFROM [Accounting].[CLIENT_SCHEDULED_FEE]\n\nUNION all\n\nSELECT [transaction_key]\n,[loc_number]\n,[cae_posting_date] as [posting_date]\n,[settlement_date] as [settlement_date]\n,[cae_amount] as [transaction_amount]\n,[cae_type] as trans_type\n,src = 'CLIENT_TRANSACTION_FEE'\nFROM [Accounting].[CLIENT_TRANSACTION_FEE]\n\nUNION all\nSELECT [transaction_key]\n,[loc_number]\n,[pay_posting_date] as [posting_date]\n,[client_settlement_date] as [settlement_date]\n,[cae_amount] as [transaction_amount]\n,[cae_type] as trans_type\n,src = 'Member_transaction_fee'\nFROM [Accounting].[MEMBER_TRANSACTION_FEE] where cae_type <> 'none'\n\nUNION all\nSELECT [transaction_key],\n[loc_number]\n,[cae_posting_date] as [posting_date]\n,[client_settlement_date] as [settlement_date]\n,[return_amount] as [transaction_amount]\n,[return_payment_action] as trans_type\n,src = 'RETURN_TRANSACTION'\nFROM [Accounting].[RETURN_TRANSACTION] \n\nUNION ALL\n\n------------Bundled Payments\nSELECT [transaction_key]\n      ,[loc_number] \n      ,[cae_posting_date] as [PostingDate]\n\t  ,[client_settlement_date] as [settlement_date]\n      ,transaction_amount\n\t  ,transaction_action  AS trans_type\n\t  ,src= 'Bundled Payments' \n\nFROM [Accounting].[BUNDLED_PAYMENT]\n\nUNION ALL \n---------------Bundled Returns\nSELECT [transaction_key]\n\t  ,[loc_number] \n      ,[cae_posting_date] as [PostingDate]\n\t  ,[client_settlement_date] as [settlement_date]\n      ,transaction_amount =  amount\n\t  ,[type]  AS trans_type\n\t  ,src= 'Bundled Returns' \n\t\nFROM [Accounting].[BUNDLED_ACH_RETURN] \n\nUNION ALL\n----------------------Bundled Chargebacks & Repost\n\nSELECT [transaction_key]\n      ,[loc_number] \n      ,[cae_posting_date] as [PostingDate]\n\t  ,[client_settlement_date] as [settlement_date]\n      ,transaction_amount =  bae_amount\n\t  ,bae_transaction_type  AS trans_type\n\t  ,Src = CASE WHEN bae_transaction_type = 'BUNDLED_CHARGEBACK' THEN 'Bundled Chargebacks' ELSE 'Bundled Chargebakcs / Repost' END\n\t  \nFROM [Accounting].[BUNDLED_CHARGEBACK]\n\n) as A \nWhere cae_posting_date between @BEGINDATE and @EndDate\n--and transaction_key = 'DEPOSIT.DEBIT.BANK_ACCOUNT.WIRE'\ngroup by [transaction_key] ,[loc_number]\n\n) as A1 left join accounting.TRANSACTION_TYPE_MAPPINGS b on b.Transaction_Type=a1.transaction_key\n\n) as a2\nWHERE   LedgerAccountReferenceID <> 0\nAND a2.Worktag_Customer_Reference_ID <> 'BCTS1'\nAND (ISNULL(TRY_CAST(a2.DebitAmount AS MONEY),0) <> 0\n\tOR ISNULL( TRY_CAST(a2.CreditAmount  AS MONEY),0) <>  0)\n--AND CreditAmount <> '777.30'\n--AND  DebitAmount  <> '777.30'\nOrder by LineMemo DESC\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "SftpWriteSettings",
									"operationTimeout": "01:00:00",
									"useTempFileRename": true
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"begindate": {
						"type": "string"
					},
					"enddate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivityTypeLookup_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ACTIVITYTYPELOOKUP",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select t.* from BETADATA.ACTIVITYTYPELOOKUP t\nwhere ATL_MODIFIED>= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND ATL_MODIFIED< TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											},
											"disableMetricsCollection": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "ATL_ID",
														"type": "String"
													},
													"sink": {
														"name": "ATL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "ATL_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ATL_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "ATL_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ATL_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "ATL_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_NAME",
														"type": "String"
													},
													"sink": {
														"name": "ATL_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_DESCRIPTION",
														"type": "String"
													},
													"sink": {
														"name": "ATL_DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ISLEADTRACKER",
														"type": "String"
													},
													"sink": {
														"name": "ISLEADTRACKER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LT_GENDER_FLAG",
														"type": "String"
													},
													"sink": {
														"name": "LT_GENDER_FLAG",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LT_EMPLOYEE_FLAG",
														"type": "String"
													},
													"sink": {
														"name": "LT_EMPLOYEE_FLAG",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LT_DATE_FLAG",
														"type": "String"
													},
													"sink": {
														"name": "LT_DATE_FLAG",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LT_CAMPAIGN_FLAG",
														"type": "String"
													},
													"sink": {
														"name": "LT_CAMPAIGN_FLAG",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LT_NOTE_FLAG",
														"type": "String"
													},
													"sink": {
														"name": "LT_NOTE_FLAG",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_ACTIVITYTYPELOOKUP_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.STG_ACTIVITYTYPELOOKUP_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_ACTIVITYTYPELOOKUP_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group5"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AgreementFees_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AgreementFees",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select  /*+INDEX(t,AF_MODIFIED ASC)*/ * from BETADATA.AGREEMENTFEES t\nwhere AF_MODIFIED>= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND AF_MODIFIED< TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AF_ID",
														"type": "String"
													},
													"sink": {
														"name": "AF_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AF_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "AF_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AF_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "AF_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AF_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "AF_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AF_NAME",
														"type": "String"
													},
													"sink": {
														"name": "AF_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AF_START_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "AF_START_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AF_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "AF_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AF_RECURRING",
														"type": "String"
													},
													"sink": {
														"name": "AF_RECURRING",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AF_APPLY",
														"type": "String"
													},
													"sink": {
														"name": "AF_APPLY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_ID",
														"type": "String"
													},
													"sink": {
														"name": "A_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "HPC_ID",
														"type": "String"
													},
													"sink": {
														"name": "HPC_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AF_DAYS_FROM_AGREEMENT_DATE",
														"type": "Decimal"
													},
													"sink": {
														"name": "AF_DAYS_FROM_AGREEMENT_DATE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AF_INVOICE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "AF_INVOICE_DATE",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_AGREEMENTFEES_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.STG_AGREEMENTFEES_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[Stg_AgreementFees_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group5"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AgreementPaymentPlanValues_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTPAYMENTPLANVALUES_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AGREEMENTPAYMENTPLANVALUES_SQLPOOL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select *\nfrom BETADATA.AGREEMENTPAYMENTPLANVALUES t\nwhere APPV_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND APPV_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPV_ID",
														"type": "String"
													},
													"sink": {
														"name": "APPV_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APPV_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "APPV_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "APPV_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "APPV_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "APPV_MIN",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPV_MIN",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPV_DEFAULT",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPV_DEFAULT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPV_MAX",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPV_MAX",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPV_SORT_ORDER",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPV_SORT_ORDER",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APP_ID",
														"type": "String"
													},
													"sink": {
														"name": "APP_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CGI_ID",
														"type": "String"
													},
													"sink": {
														"name": "CGI_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PF_ID",
														"type": "String"
													},
													"sink": {
														"name": "PF_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FVT_ID",
														"type": "String"
													},
													"sink": {
														"name": "FVT_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APPV_CALCULATION",
														"type": "String"
													},
													"sink": {
														"name": "APPV_CALCULATION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APPV_ADJUSTMENT_OPERATOR",
														"type": "String"
													},
													"sink": {
														"name": "APPV_ADJUSTMENT_OPERATOR",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APPV_ADJUSTMENT_VALUE",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPV_ADJUSTMENT_VALUE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPV_MAX_SCHEDULE_PERCENT",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPV_MAX_SCHEDULE_PERCENT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "SDT_ID",
														"type": "String"
													},
													"sink": {
														"name": "SDT_ID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_AGREEMENTPAYMENTPLANVALUES_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "TRUNCATE INCR TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "TRUNCATE INCR TABLE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "TRUNCATE TABLE StgDatatrak.STG_AGREEMENTPAYMENTPLANVALUES_INCR;\nSELECT 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group5"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AgreementTemplateLocationRef_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTTEMPLATELOCATIONREF_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AGREEMENTTEMPLATELOCATIONREF_SQLPOOL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select *\nfrom BETADATA.AGREEMENTTEMPLATELOCATIONREF t\nWHERE VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											},
											"disableMetricsCollection": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "ATMP_ID",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SPL_ID",
														"type": "String"
													},
													"sink": {
														"name": "SPL_ID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_AGREEMENTTEMPLATELOCATIONREF_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "TRUNCATE INCR TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "TRUNCATE INCR TABLE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "TRUNCATE TABLE StgDatatrak.STG_AGREEMENTTEMPLATELOCATIONREF_INCR;\nSELECT 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AgreementTemplates_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTTEMPLATES_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AGREEMENTTEMPLATES_SQLPOOL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select *\nfrom BETADATA.AGREEMENTTEMPLATES t\nwhere ATMP_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND ATMP_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "ATMP_ID",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "ATMP_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ATMP_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "ATMP_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ATMP_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_ABC_CODE",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_ABC_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_NAME",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_PDF_FILE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_PDF_FILE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_UPLOAD_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "ATMP_UPLOAD_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ATMP_RENEWAL_STATEMENT_PROGRAM",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_RENEWAL_STATEMENT_PROGRAM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_AUTO_RENEW_TO_OPEN",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_AUTO_RENEW_TO_OPEN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_AUTO_RENEW_TO_TERM",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_AUTO_RENEW_TO_TERM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_NON_RENEWAL",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_NON_RENEWAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_ADD_SCHEDULES_ALLOWED",
														"type": "Decimal"
													},
													"sink": {
														"name": "ATMP_ADD_SCHEDULES_ALLOWED",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "ATMP_ADD_MEMBERS_ALLOWED",
														"type": "Decimal"
													},
													"sink": {
														"name": "ATMP_ADD_MEMBERS_ALLOWED",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "ATMP_BUYER_INFO_COLLECTED",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_BUYER_INFO_COLLECTED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DOCT_ID",
														"type": "String"
													},
													"sink": {
														"name": "DOCT_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_WEB_NOTE",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_WEB_NOTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_DOCT_ID_WEB_TERMS",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_DOCT_ID_WEB_TERMS",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_AGREEMENTTEMPLATES_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "TRUNCATE INCR TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "TRUNCATE INCR TABLE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "TRUNCATE TABLE StgDatatrak.STG_AGREEMENTTEMPLATES_INCR;\nSELECT 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group5"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Agreementcorporations_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "agreementcorporations",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select  * from BETADATA.agreementcorporations\nwhere AC_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND AC_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AC_ID",
											"type": "String"
										},
										"sink": {
											"name": "AC_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AC_CREATED",
											"type": "DateTime"
										},
										"sink": {
											"name": "AC_CREATED",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "AC_MODIFIED",
											"type": "DateTime"
										},
										"sink": {
											"name": "AC_MODIFIED",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "AC_CORPORATION_NAME",
											"type": "String"
										},
										"sink": {
											"name": "AC_CORPORATION_NAME",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SRC_BETADATA_AGREEMENTCORPORATIONS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_DT_STG_AGREEMENTCORPORATIONS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_agreementcorporations_incr;\nSELECT 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "agreementcorporations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTCORPORATIONS_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group4"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Agreemententryqueues_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Agreemententryqueues",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Agreemententryqueues01",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "betadata.stg_members"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.AGREEMENTENTRYQUEUES\nwhere AEQ_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND AEQ_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AEQ_ID",
														"type": "String"
													},
													"sink": {
														"name": "AEQ_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AEQ_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "AEQ_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AEQ_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "AEQ_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AEQ_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "AEQ_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AEQ_NAME",
														"type": "String"
													},
													"sink": {
														"name": "AEQ_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AEQ_ABC_CODE",
														"type": "String"
													},
													"sink": {
														"name": "AEQ_ABC_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AEQ_MEMBER_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "AEQ_MEMBER_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AEQ_SHOW_IN_ALL",
														"type": "String"
													},
													"sink": {
														"name": "AEQ_SHOW_IN_ALL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AEQ_ALLOW_CHANGE_CLUB",
														"type": "String"
													},
													"sink": {
														"name": "AEQ_ALLOW_CHANGE_CLUB",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_AGREEMENTENTRYQUEUES",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_AGREEMENTENTRYQUEUES_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_agreemententryqueues_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Agreemententryqueues",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[Stg_AgreementEntryQueues_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group1"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Agreementpaymentplanrenewals_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AGREEMENTPAYMENTPLANRENEWALS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select   * from BETADATA.agreementpaymentplanrenewals\n t\nwhere APPR_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND APPR_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_AGREEMENTPAYMENTPLANRENEWALS_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.STG_AGREEMENTPAYMENTPLANRENEWALS_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTPAYMENTPLANRENEWALS_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group5"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Agreements_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Agreements",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "ABCPI.STG_AGREEMENTS"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select  /*+INDEX(t,A_MODIFIED ASC)*/ * from BETADATA.AGREEMENTS t\nwhere A_MODIFIED>= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND A_MODIFIED< TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_ID",
														"type": "String"
													},
													"sink": {
														"name": "A_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "A_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_DEAD_COLUMN_1",
														"type": "String"
													},
													"sink": {
														"name": "A_DEAD_COLUMN_1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_DATE_JOINED",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_DATE_JOINED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_DATE_SIGNED",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_DATE_SIGNED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_EFFECTIVITY_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_EFFECTIVITY_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_EXPIRE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_EXPIRE_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_DOWN_PAYMENT",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_DOWN_PAYMENT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_SALE_PRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_SALE_PRICE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_RENEWAL_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "A_RENEWAL_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_RENEWAL_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_RENEWAL_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_RENEWAL_TERM",
														"type": "String"
													},
													"sink": {
														"name": "A_RENEWAL_TERM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_RENEWAL_NUM_PAYMENTS",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_RENEWAL_NUM_PAYMENTS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_RENEWAL_CASH_PRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_RENEWAL_CASH_PRICE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_RENEWAL_COUPON_PRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_RENEWAL_COUPON_PRICE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_RENEWAL_EFT_PRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_RENEWAL_EFT_PRICE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_PATRON_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "A_PATRON_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_AS400_SYNCED",
														"type": "String"
													},
													"sink": {
														"name": "A_AS400_SYNCED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_LAST_SYNC_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_LAST_SYNC_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_STATUS_EFFECTIVE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_STATUS_EFFECTIVE_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_MISC_1",
														"type": "String"
													},
													"sink": {
														"name": "A_MISC_1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_MISC_2",
														"type": "String"
													},
													"sink": {
														"name": "A_MISC_2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_MISC_3",
														"type": "String"
													},
													"sink": {
														"name": "A_MISC_3",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_OVERPAYMENT",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_OVERPAYMENT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_REMAINING_BALANCE",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_REMAINING_BALANCE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_FIRST_DUE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_FIRST_DUE_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_OLDEST_NEXT_DUE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_OLDEST_NEXT_DUE_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_OLDEST_NEXT_DUE_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_OLDEST_NEXT_DUE_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_NEXT_DUE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_NEXT_DUE_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_NEXT_DUE_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_NEXT_DUE_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_LAST_SCHEDULED_DUE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_LAST_SCHEDULED_DUE_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_LAST_PAYMENT_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_LAST_PAYMENT_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_LAST_PAYMENT_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_LAST_PAYMENT_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_LAST_PAYMENT_CODE",
														"type": "String"
													},
													"sink": {
														"name": "A_LAST_PAYMENT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_LAST_PAYMENT_DESCRIPTION",
														"type": "String"
													},
													"sink": {
														"name": "A_LAST_PAYMENT_DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_LAST_REWRITE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_LAST_REWRITE_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_LAST_RENEWAL_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_LAST_RENEWAL_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_VISITS_ALLOWED",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_VISITS_ALLOWED",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_VISITS_USED",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_VISITS_USED",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_ISSUED_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_ISSUED_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_FIRST_VISIT_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_FIRST_VISIT_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_CONVERSION_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_CONVERSION_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_TOUR_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_TOUR_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_POSTED",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_POSTED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AB_ID",
														"type": "String"
													},
													"sink": {
														"name": "AB_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APM_ID",
														"type": "String"
													},
													"sink": {
														"name": "APM_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_ID",
														"type": "String"
													},
													"sink": {
														"name": "APP_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AT_ID",
														"type": "String"
													},
													"sink": {
														"name": "AT_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "E_ID",
														"type": "String"
													},
													"sink": {
														"name": "E_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "M_ID",
														"type": "String"
													},
													"sink": {
														"name": "M_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MC_ID",
														"type": "String"
													},
													"sink": {
														"name": "MC_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LPL_ID",
														"type": "String"
													},
													"sink": {
														"name": "LPL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "M_ID_REFERRED",
														"type": "String"
													},
													"sink": {
														"name": "M_ID_REFERRED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PSF_ID",
														"type": "String"
													},
													"sink": {
														"name": "PSF_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SPL_ID",
														"type": "String"
													},
													"sink": {
														"name": "SPL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_ID_MASTER",
														"type": "String"
													},
													"sink": {
														"name": "A_ID_MASTER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DOC_ID",
														"type": "String"
													},
													"sink": {
														"name": "DOC_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_THIRTY_DAYS",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_THIRTY_DAYS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_SIXTY_DAYS",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_SIXTY_DAYS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_NINETY_DAYS",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_NINETY_DAYS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_OVER_NINETY_DAYS",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_OVER_NINETY_DAYS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_LATE_FEE_TOTAL",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_LATE_FEE_TOTAL",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_LATE_FEE_OLDEST_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_LATE_FEE_OLDEST_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_SERVICE_FEE_TOTAL",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_SERVICE_FEE_TOTAL",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_SERVICE_FEE_OLDEST_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_SERVICE_FEE_OLDEST_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_RENEWAL_MAX_PAYMENT",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_RENEWAL_MAX_PAYMENT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "PSF_ID_RENEWAL",
														"type": "String"
													},
													"sink": {
														"name": "PSF_ID_RENEWAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_AGREEMENT_NUMBER",
														"type": "String"
													},
													"sink": {
														"name": "A_AGREEMENT_NUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_MISC_4",
														"type": "String"
													},
													"sink": {
														"name": "A_MISC_4",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "UDFTAB_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "UDFTAB_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "UDFV_ID",
														"type": "String"
													},
													"sink": {
														"name": "UDFV_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AES_ID",
														"type": "String"
													},
													"sink": {
														"name": "AES_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AI_ID_CCI",
														"type": "String"
													},
													"sink": {
														"name": "AI_ID_CCI",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AI_ID_EFTI",
														"type": "String"
													},
													"sink": {
														"name": "AI_ID_EFTI",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_FREE_MONTHS",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_FREE_MONTHS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "SLOC_ID",
														"type": "String"
													},
													"sink": {
														"name": "SLOC_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SPL_ID_QUEUE",
														"type": "String"
													},
													"sink": {
														"name": "SPL_ID_QUEUE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_DEAD_COLUMN_2",
														"type": "String"
													},
													"sink": {
														"name": "A_DEAD_COLUMN_2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_MULTI_PAY",
														"type": "String"
													},
													"sink": {
														"name": "A_MULTI_PAY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_MODIFIED_DW",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_MODIFIED_DW",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_HOLD_FREE_RECURRING",
														"type": "String"
													},
													"sink": {
														"name": "A_HOLD_FREE_RECURRING",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_ACCOUNT_INFO_SYNC",
														"type": "String"
													},
													"sink": {
														"name": "A_ACCOUNT_INFO_SYNC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_SWITCHED_BILLING_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_SWITCHED_BILLING_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_CANCEL_BY_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_CANCEL_BY_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_INVOICE_TOTAL_CALC",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_INVOICE_TOTAL_CALC",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_INVOICE_MONTHLY_CALC",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_INVOICE_MONTHLY_CALC",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_FEE_TOTAL_CALC",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_FEE_TOTAL_CALC",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_DOWN_PAYMENT_CALC",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_DOWN_PAYMENT_CALC",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "POSST_ID",
														"type": "String"
													},
													"sink": {
														"name": "POSST_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AET_ID",
														"type": "String"
													},
													"sink": {
														"name": "AET_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_NON_MEMBER",
														"type": "String"
													},
													"sink": {
														"name": "A_NON_MEMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_DOWN_PAYMENT_FIRST_DUE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_DOWN_PAYMENT_FIRST_DUE_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_DOWN_PAYMENT_NUM_OF_PAYMENTS",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_DOWN_PAYMENT_NUM_OF_PAYMENTS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "PFREQ_ID_DOWN_PAYMENT",
														"type": "String"
													},
													"sink": {
														"name": "PFREQ_ID_DOWN_PAYMENT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_DOWN_PAYMENT_MAX_DAYS",
														"type": "Decimal"
													},
													"sink": {
														"name": "A_DOWN_PAYMENT_MAX_DAYS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_DOWN_PAYMENT_SCHEDULE",
														"type": "String"
													},
													"sink": {
														"name": "A_DOWN_PAYMENT_SCHEDULE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_SILVER_SNEAKER_ID",
														"type": "String"
													},
													"sink": {
														"name": "A_SILVER_SNEAKER_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APM_ID_LAST_BILLABLE",
														"type": "String"
													},
													"sink": {
														"name": "APM_ID_LAST_BILLABLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AI_ID_ALT_PAY",
														"type": "String"
													},
													"sink": {
														"name": "AI_ID_ALT_PAY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_ALT_PAY_OFFERED",
														"type": "String"
													},
													"sink": {
														"name": "A_ALT_PAY_OFFERED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_ALT_PAY_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "A_ALT_PAY_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_MODIFIED_API",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_MODIFIED_API",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "A_OLD_PROSPECT_EXPIRE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "A_OLD_PROSPECT_EXPIRE_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AC_ID",
														"type": "String"
													},
													"sink": {
														"name": "AC_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AES_ID_ORIGINAL",
														"type": "String"
													},
													"sink": {
														"name": "AES_ID_ORIGINAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FIRC_ID",
														"type": "String"
													},
													"sink": {
														"name": "FIRC_ID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_AGREEMENTS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_AGREEMENTS_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_agreements_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[Stg_Agreements_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group1"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Alertattributes_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ALERTATTRIBUTES",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Destination",
											"value": "StgDatatrak.STG_ALERTATTRIBUTES_INCR"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.ALERTATTRIBUTES\nwhere AA_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND AA_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AA_ID",
														"type": "String"
													},
													"sink": {
														"name": "AA_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "AA_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AA_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "AA_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AA_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "AA_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_EDITABLE",
														"type": "String"
													},
													"sink": {
														"name": "AA_EDITABLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_TYPE",
														"type": "String"
													},
													"sink": {
														"name": "AA_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_MESSAGE",
														"type": "String"
													},
													"sink": {
														"name": "AA_MESSAGE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_MESSAGE_SUFFIX",
														"type": "String"
													},
													"sink": {
														"name": "AA_MESSAGE_SUFFIX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_DISPLAY_ORDER",
														"type": "Decimal"
													},
													"sink": {
														"name": "AA_DISPLAY_ORDER",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AA_GRACE_PERIOD",
														"type": "Decimal"
													},
													"sink": {
														"name": "AA_GRACE_PERIOD",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AA_GRACE_PERIOD_LABEL",
														"type": "String"
													},
													"sink": {
														"name": "AA_GRACE_PERIOD_LABEL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_COLOR_HEX",
														"type": "String"
													},
													"sink": {
														"name": "AA_COLOR_HEX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_MUST_ACK",
														"type": "String"
													},
													"sink": {
														"name": "AA_MUST_ACK",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_LEVEL",
														"type": "Decimal"
													},
													"sink": {
														"name": "AA_LEVEL",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AA_AGREEMENT_LEVEL_EDITABLE",
														"type": "String"
													},
													"sink": {
														"name": "AA_AGREEMENT_LEVEL_EDITABLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_AGREEMENT_LEVEL",
														"type": "String"
													},
													"sink": {
														"name": "AA_AGREEMENT_LEVEL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_RECORD_ALERT",
														"type": "String"
													},
													"sink": {
														"name": "AA_RECORD_ALERT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_FIXED",
														"type": "String"
													},
													"sink": {
														"name": "AA_FIXED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SPL_ID",
														"type": "String"
													},
													"sink": {
														"name": "SPL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_ALLOW_DOOR_ACCESS",
														"type": "String"
													},
													"sink": {
														"name": "AA_ALLOW_DOOR_ACCESS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SF_ID",
														"type": "String"
													},
													"sink": {
														"name": "SF_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AA_DOOR_ACCESS_GRACE_PERIOD",
														"type": "Decimal"
													},
													"sink": {
														"name": "AA_DOOR_ACCESS_GRACE_PERIOD",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AA_DRAFT_PENDING",
														"type": "String"
													},
													"sink": {
														"name": "AA_DRAFT_PENDING",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_ALERTATTRIBUTES",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_ALERTATTRIBUTES_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.STG_ALERTATTRIBUTES_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_ALERTATTRIBUTES_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group4"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Alerthistory_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Alerthistory",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Alerthistory01",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "betadata.stg_agreements"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select  ah.* \nfrom BETADATA.ALERTHISTORY ah\nwhere   upper(ah_color_hex) in ('RED','#FF0000') AND\nAH_CREATED>= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND AH_CREATED< TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND ah.VPD_ID in @{item().vpd_list}\n",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AH_ID",
														"type": "String"
													},
													"sink": {
														"name": "AH_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AH_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "AH_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AH_LEVEL",
														"type": "Decimal"
													},
													"sink": {
														"name": "AH_LEVEL",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AH_MESSAGE",
														"type": "String"
													},
													"sink": {
														"name": "AH_MESSAGE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AH_COLOR_HEX",
														"type": "String"
													},
													"sink": {
														"name": "AH_COLOR_HEX",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AH_NOTE",
														"type": "String"
													},
													"sink": {
														"name": "AH_NOTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AH_DISPLAY_ORDER",
														"type": "Decimal"
													},
													"sink": {
														"name": "AH_DISPLAY_ORDER",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AA_ID",
														"type": "String"
													},
													"sink": {
														"name": "AA_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CIL_ID",
														"type": "String"
													},
													"sink": {
														"name": "CIL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MAL_ID",
														"type": "String"
													},
													"sink": {
														"name": "MAL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AH_RECORD_ALERT",
														"type": "String"
													},
													"sink": {
														"name": "AH_RECORD_ALERT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_ID",
														"type": "String"
													},
													"sink": {
														"name": "A_ID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_ALERTHISTORY",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_ALERTHISTORY_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_alerthistory_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Alerthistory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[Stg_AlertHistory_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group1"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssessableFeePaymentPlanRef_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.STG_ASSESSABLEFEEPAYMENTPLANREF_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_ASSESSABLEFEEPAYMENTPLANREF_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AssessableFeePaymentPlanRef",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select  * from BETADATA.AssessableFeePaymentPlanRef t\nWHERE VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APP_ID",
														"type": "String"
													},
													"sink": {
														"name": "APP_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AFE_ID",
														"type": "String"
													},
													"sink": {
														"name": "AFE_ID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_ASSESSABLEFEEPAYMENTPLANREF_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assessablefees_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ASSESSABLEFEES",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select   * from BETADATA.assessablefees\n t\nwhere AFE_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND AFE_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AFE_ID",
														"type": "String"
													},
													"sink": {
														"name": "AFE_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AFE_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "AFE_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AFE_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "AFE_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AFE_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "AFE_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AFE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "AFE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AFE_START_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "AFE_START_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AFE_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "AFE_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "HPC_ID",
														"type": "String"
													},
													"sink": {
														"name": "HPC_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AFE_RECURRING",
														"type": "String"
													},
													"sink": {
														"name": "AFE_RECURRING",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AFE_DAYS_FROM_AGREEMENT_DATE",
														"type": "Decimal"
													},
													"sink": {
														"name": "AFE_DAYS_FROM_AGREEMENT_DATE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AFE_INVOICE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "AFE_INVOICE_DATE",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_ASSESSABLEFEES_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.STG_ASSESSABLEFEES_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_ASSESSABLEFEES_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group5"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AttendanceStatusCode_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "AttendanceStatusCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[Stg_AttendanceStatusDeCode_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "AttendanceStatusCode",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "ABCPI.STG_CATALOGS_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select * from BETADATA.ATTENDANCESTATUSDECODE",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table StgDatatrak.STG_ATTENDANCESTATUSDECODE_INCR",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ESS_ID",
											"type": "String"
										},
										"sink": {
											"name": "ESS_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ATTEND_ID",
											"type": "String"
										},
										"sink": {
											"name": "ATTEND_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ASD_NAME",
											"type": "String"
										},
										"sink": {
											"name": "ASD_NAME",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SRC_BETADATA_AttendanceStatusDECode",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_DT_SNK_STGDATATRAK_STG_ATTENDANCESTATUSDECODE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CATALOGITEMTAXREF_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CATALOGITEMTAXREF_SQLPOOL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.CATALOGITEMTAXREF\nwhere VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "CGI_ID",
														"type": "String"
													},
													"sink": {
														"name": "CGI_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "STR_ID",
														"type": "String"
													},
													"sink": {
														"name": "STR_ID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_CATALOGITEMTAXREF",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_CATALOGITEMTAXREF_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate INCR table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate INCR table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "Truncate table StgDatatrak.stg_CATALOGITEMTAXREF_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_CATALOGITEMTAXREF_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Campaignsourceref_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Campaignsourceref",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Campaignsourceref_SQLPOOL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM BETADATA.CAMPAIGNSOURCEREF\nWHERE VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "MC_ID",
														"type": "String"
													},
													"sink": {
														"name": "MC_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CSRC_ID",
														"type": "String"
													},
													"sink": {
														"name": "CSRC_ID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_CAMPAIGNSOURCEREF",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_CAMPAIGNSOURCEREF_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_campaignsourceref_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Campaignsourceref",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_CAMPAIGNSOURCEREF_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CancelCodeLK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBehavior": "Upsert",
								"upsertSettings": {
									"keys": [
										"CODE"
									],
									"interimSchemaName": ""
								},
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CODE",
											"type": "String"
										},
										"sink": {
											"name": "CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MAPPED_CODE",
											"type": "String"
										},
										"sink": {
											"name": "MAPPED_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OracleTable9",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTable45",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "EDW_DW_SQL_POOL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cancelreasoncodes_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cancelreasoncodes",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Cancelreasoncodes01",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "betadata.stg_agreements"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.CANCELREASONCODES\nwhere CRO_MODIFIED>= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND CRO_MODIFIED< TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "CRO_ID",
														"type": "String"
													},
													"sink": {
														"name": "CRO_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CRO_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "CRO_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CRO_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "CRO_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "CRO_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "CRO_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CRO_NAME",
														"type": "String"
													},
													"sink": {
														"name": "CRO_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CRO_ABC_CODE",
														"type": "String"
													},
													"sink": {
														"name": "CRO_ABC_CODE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_CANCELREASONCODES",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_CANCELREASONCODES_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_cancelreasoncodes_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cancelreasoncodes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "stgdatatrak.STG_CANCELREASONCODES_MERGE"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group1"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:32Z"
			},
			"dependsOn": []
		}
	]
}