{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PlanetFitnessDF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Organization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_ORGANIZATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_Organization_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_ORGANIZATION_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_ORGANIZATION_ORGANIZATION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_ORGANIZATION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "`organization`"
							},
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_ORGANIZATION_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\t\n    LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(org_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 21)\n\t\t\t)) AS org_id\n\t,org_created\n\t,org_modified\n\t,org_number\n\t,org_name\n\t,org_phone_number\n\t,org_phone_extension\n\t,org_email\n\t,org_signin_link\n\t,org_website_url\n\t,LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(adr_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 21)\n\t\t\t)) AS adr_id\n\t,LOWER(CONCAT (\nSUBSTR(HEX(adr_mailing_id), 1, 8)\n,'-'\n,SUBSTR(HEX(adr_mailing_id), 9, 4)\n,'-'\n,SUBSTR(HEX(adr_mailing_id), 13, 4)\n,'-'\n,SUBSTR(HEX(adr_mailing_id), 17, 4)\n,'-'\n,SUBSTR(HEX(adr_mailing_id), 21)\n)) AS adr_mailing_id\n\t,tzl_id\n\t,org_is_email_identity_verification_failed\n\t,org_is_email_identity_verified\n\t,STR_TO_DATE(coalesce(org_verification_request_date,'1/1/1900'), '%Y-%m-%d %H:%i') AS org_verification_request_date\n    ,org_language\n    ,org_region\n    ,org_variant\n\t,org_reporting_url\n\t,org_sub_domain_alias\n\t,org_is_allow_secondary_members\n\t,org_phone_country_code\n\t,org_status\n\t,org_is_tax_included\nFROM organization.organization\nWHERE org_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND org_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "org_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "org_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "org_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "org_number",
											"type": "String"
										},
										"sink": {
											"name": "org_number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_name",
											"type": "String"
										},
										"sink": {
											"name": "org_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_phone_number",
											"type": "String"
										},
										"sink": {
											"name": "org_phone_number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_phone_extension",
											"type": "String"
										},
										"sink": {
											"name": "org_phone_extension",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_email",
											"type": "String"
										},
										"sink": {
											"name": "org_email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_signin_link",
											"type": "String"
										},
										"sink": {
											"name": "org_signin_link",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_website_url",
											"type": "String"
										},
										"sink": {
											"name": "org_website_url",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "adr_id",
											"type": "String"
										},
										"sink": {
											"name": "adr_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "adr_mailing_id",
											"type": "Byte[]"
										},
										"sink": {
											"name": "adr_mailing_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tzl_id",
											"type": "String"
										},
										"sink": {
											"name": "tzl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_is_email_identity_verification_failed",
											"type": "Boolean"
										},
										"sink": {
											"name": "org_is_email_identity_verification_failed",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "org_is_email_identity_verified",
											"type": "Boolean"
										},
										"sink": {
											"name": "org_is_email_identity_verified",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "org_verification_request_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "org_verification_request_date",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "org_language",
											"type": "String"
										},
										"sink": {
											"name": "org_language",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_region",
											"type": "String"
										},
										"sink": {
											"name": "org_region",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_variant",
											"type": "String"
										},
										"sink": {
											"name": "org_variant",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_reporting_url",
											"type": "String"
										},
										"sink": {
											"name": "org_reporting_url",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_sub_domain_alias",
											"type": "String"
										},
										"sink": {
											"name": "org_sub_domain_alias",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_is_allow_secondary_members",
											"type": "Boolean"
										},
										"sink": {
											"name": "org_is_allow_secondary_members",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "org_phone_country_code",
											"type": "String"
										},
										"sink": {
											"name": "org_phone_country_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_status",
											"type": "String"
										},
										"sink": {
											"name": "org_status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_is_tax_included",
											"type": "Boolean"
										},
										"sink": {
											"name": "org_is_tax_included",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_ORGANIZATION_ORGANIZATION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Organization_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_ORGANIZATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_Organization_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_ORGANIZATION_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_ORGANIZATION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_ORGANIZATION_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\t\n    LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(org_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 21)\n\t\t\t)) AS org_id\n\t,org_created\n\t,org_modified\n\t,org_number\n\t,org_name\n\t,org_phone_number\n\t,org_phone_extension\n\t,org_email\n\t,org_signin_link\n\t,org_website_url\n\t,LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(adr_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 21)\n\t\t\t)) AS adr_id\n\t,LOWER(CONCAT (\nSUBSTR(HEX(adr_mailing_id), 1, 8)\n,'-'\n,SUBSTR(HEX(adr_mailing_id), 9, 4)\n,'-'\n,SUBSTR(HEX(adr_mailing_id), 13, 4)\n,'-'\n,SUBSTR(HEX(adr_mailing_id), 17, 4)\n,'-'\n,SUBSTR(HEX(adr_mailing_id), 21)\n)) AS adr_mailing_id\n\t,tzl_id\n\t,org_is_email_identity_verification_failed\n\t,org_is_email_identity_verified\n\t,STR_TO_DATE(coalesce(org_verification_request_date,'1/1/1900'), '%Y-%m-%d %H:%i') AS org_verification_request_date\n    ,org_language\n    ,org_region\n    ,org_variant\n\t,org_reporting_url\n\t,org_sub_domain_alias\n\t,org_is_allow_secondary_members\n\t,org_phone_country_code\n\t,org_status\n\t,org_is_tax_included\nFROM organization.organization\nWHERE org_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND org_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "org_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "org_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "org_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "org_number",
											"type": "String"
										},
										"sink": {
											"name": "org_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_name",
											"type": "String"
										},
										"sink": {
											"name": "org_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_phone_number",
											"type": "String"
										},
										"sink": {
											"name": "org_phone_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_phone_extension",
											"type": "String"
										},
										"sink": {
											"name": "org_phone_extension",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_email",
											"type": "String"
										},
										"sink": {
											"name": "org_email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_signin_link",
											"type": "String"
										},
										"sink": {
											"name": "org_signin_link",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_website_url",
											"type": "String"
										},
										"sink": {
											"name": "org_website_url",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "adr_id",
											"type": "String"
										},
										"sink": {
											"name": "adr_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "adr_mailing_id",
											"type": "String"
										},
										"sink": {
											"name": "adr_mailing_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tzl_id",
											"type": "String"
										},
										"sink": {
											"name": "tzl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_is_email_identity_verification_failed",
											"type": "Boolean"
										},
										"sink": {
											"name": "org_is_email_identity_verification_failed",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "org_is_email_identity_verified",
											"type": "Boolean"
										},
										"sink": {
											"name": "org_is_email_identity_verified",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "org_verification_request_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "org_verification_request_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "org_language",
											"type": "String"
										},
										"sink": {
											"name": "org_language",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_region",
											"type": "String"
										},
										"sink": {
											"name": "org_region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_variant",
											"type": "String"
										},
										"sink": {
											"name": "org_variant",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_reporting_url",
											"type": "String"
										},
										"sink": {
											"name": "org_reporting_url",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_sub_domain_alias",
											"type": "String"
										},
										"sink": {
											"name": "org_sub_domain_alias",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_is_allow_secondary_members",
											"type": "Boolean"
										},
										"sink": {
											"name": "org_is_allow_secondary_members",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "org_phone_country_code",
											"type": "String"
										},
										"sink": {
											"name": "org_phone_country_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_status",
											"type": "String"
										},
										"sink": {
											"name": "org_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_is_tax_included",
											"type": "Boolean"
										},
										"sink": {
											"name": "org_is_tax_included",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ORGANIZATION_ORGANIZATION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Province_Lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_Province_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_Province_Lookup_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_PROVINCE_LOOKUP_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_ORGANIZATION_PROVINCE_LOOKUP_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_Province_Lookup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_PROVINCE_LOOKUP_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \n\tctl_id,\n\tprl_id,\n\tprl_created,\n\tprl_modified,\n\tprl_abbreviation,\n\tprl_code\nFROM organization.province_lookup\nWHERE prl_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND prl_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ctl_id",
											"type": "String"
										},
										"sink": {
											"name": "ctl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "prl_id",
											"type": "String"
										},
										"sink": {
											"name": "prl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "prl_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "prl_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "prl_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "prl_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "prl_abbreviation",
											"type": "String"
										},
										"sink": {
											"name": "prl_abbreviation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "prl_code",
											"type": "String"
										},
										"sink": {
											"name": "prl_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_ORGANIZATION_PROVINCE_LOOKUP_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Province_Lookup_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_Province_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_Province_Lookup_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_PROVINCE_LOOKUP_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_Province_Lookup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_PROVINCE_LOOKUP_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \n\tctl_id,\n\tprl_id,\n\tprl_created,\n\tprl_modified,\n\tprl_abbreviation,\n\tprl_code\nFROM organization.province_lookup\nWHERE prl_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND prl_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ctl_id",
											"type": "String"
										},
										"sink": {
											"name": "ctl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "prl_id",
											"type": "String"
										},
										"sink": {
											"name": "prl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "prl_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "prl_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "prl_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "prl_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "prl_abbreviation",
											"type": "String"
										},
										"sink": {
											"name": "prl_abbreviation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "prl_code",
											"type": "String"
										},
										"sink": {
											"name": "prl_code",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ORGANIZATION_PROVINCE_LOOKUP_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Province_Name')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_Province_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_Province_Name_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_PROVINCE_NAME_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_ORGANIZATION_PROVINCE_NAME_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_Province_Name",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_PROVINCE_NAME_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \nLOWER(CONCAT (SUBSTR(HEX(pn_id), 1, 8),'-',SUBSTR(HEX(pn_id), 9, 4),'-',SUBSTR(HEX(pn_id), 13, 4),'-',SUBSTR(HEX(pn_id), 17, 4),'-',SUBSTR(HEX(pn_id), 21))) as pn_id,\n\tctl_id,\n\tprl_id,\n\tpn_language,\n\tpn_region,\n\tpn_variant,\n\tpn_name,\n\tpn_created,\n\tpn_modified\nFROM organization.province_name\nWHERE pn_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND pn_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "pn_id",
											"type": "String"
										},
										"sink": {
											"name": "pn_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ctl_id",
											"type": "String"
										},
										"sink": {
											"name": "ctl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "prl_id",
											"type": "String"
										},
										"sink": {
											"name": "prl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "pn_language",
											"type": "String"
										},
										"sink": {
											"name": "pn_language",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "pn_region",
											"type": "String"
										},
										"sink": {
											"name": "pn_region",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "pn_variant",
											"type": "String"
										},
										"sink": {
											"name": "pn_variant",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "pn_name",
											"type": "String"
										},
										"sink": {
											"name": "pn_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "pn_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "pn_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "pn_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "pn_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_ORGANIZATION_PROVINCE_NAME_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Province_Name_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_Province_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_Province_Name_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_PROVINCE_NAME_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_Province_Name",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_PROVINCE_NAME_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \nLOWER(CONCAT (SUBSTR(HEX(pn_id), 1, 8),'-',SUBSTR(HEX(pn_id), 9, 4),'-',SUBSTR(HEX(pn_id), 13, 4),'-',SUBSTR(HEX(pn_id), 17, 4),'-',SUBSTR(HEX(pn_id), 21))) as pn_id,\n\tctl_id,\n\tprl_id,\n\tpn_language,\n\tpn_region,\n\tpn_variant,\n\tpn_name,\n\tpn_created,\n\tpn_modified\nFROM organization.province_name\nWHERE pn_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND pn_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "pn_id",
											"type": "String"
										},
										"sink": {
											"name": "pn_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ctl_id",
											"type": "String"
										},
										"sink": {
											"name": "ctl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "prl_id",
											"type": "String"
										},
										"sink": {
											"name": "prl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pn_language",
											"type": "String"
										},
										"sink": {
											"name": "pn_language",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pn_region",
											"type": "String"
										},
										"sink": {
											"name": "pn_region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pn_variant",
											"type": "String"
										},
										"sink": {
											"name": "pn_variant",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pn_name",
											"type": "String"
										},
										"sink": {
											"name": "pn_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pn_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "pn_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "pn_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "pn_modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ORGANIZATION_PROVINCE_NAME_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Timezone_Lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_Timezone_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_Timezone_Lookup_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_TIMEZONE_LOOKUP_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_ORGANIZATION_TIMEZONE_LOOKUP_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_Timezone_Lookup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_TIMEZONE_LOOKUP_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n  tzl_id,\n  tzl_created,\n  tzl_modified,\n  tzl_name,\n  tzl_short,\n  tzl_daylight_savings\nFROM organization.timezone_lookup\nWHERE tzl_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND tzl_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tzl_id",
											"type": "String"
										},
										"sink": {
											"name": "tzl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tzl_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "tzl_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "tzl_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "tzl_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "tzl_name",
											"type": "String"
										},
										"sink": {
											"name": "tzl_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tzl_short",
											"type": "String"
										},
										"sink": {
											"name": "tzl_short",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tzl_daylight_savings",
											"type": "Boolean"
										},
										"sink": {
											"name": "tzl_daylight_savings",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_ORGANIZATION_TIMEZONE_LOOKUP_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Timezone_Lookup_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_Timezone_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_Timezone_Lookup_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_TIMEZONE_LOOKUP_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_Timezone_Lookup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_TIMEZONE_LOOKUP_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n  tzl_id,\n  tzl_created,\n  tzl_modified,\n  tzl_name,\n  tzl_short,\n  tzl_daylight_savings\nFROM organization.timezone_lookup\nWHERE tzl_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND tzl_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tzl_id",
											"type": "String"
										},
										"sink": {
											"name": "tzl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tzl_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "tzl_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tzl_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "tzl_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tzl_name",
											"type": "String"
										},
										"sink": {
											"name": "tzl_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tzl_short",
											"type": "String"
										},
										"sink": {
											"name": "tzl_short",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tzl_daylight_savings",
											"type": "Boolean"
										},
										"sink": {
											"name": "tzl_daylight_savings",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ORGANIZATION_TIMEZONE_LOOKUP_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_SOFT_COLLECTION_PAYOR_COMMUNICATION_PREFER_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_SOFTCOLLECTION_LOCATION_COMMUNICATION_PREFERENCE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Soft_Collection_Payor_Communication_Preference_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.SOFT_COLLECTION_PAYOR_COMMUNICATION_PREFERENCE_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_SOFTCOLLECTION_LOCATION_COMMUNICATION_PREFERENCE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "`taxation_tax_location`"
							},
							{
								"name": "Destination",
								"value": "StgRCM.TAXATION_TAX_LOCATION_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\nLOWER(CONCAT (SUBSTR(HEX(pcp_id), 1, 8),'-',SUBSTR(HEX(pcp_id), 9, 4),'-',SUBSTR(HEX(pcp_id), 13, 4),'-',SUBSTR(HEX(pcp_id), 17, 4),'-',SUBSTR(HEX(pcp_id), 21))) AS pcp_id,\npayor_id,\nLOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) AS loc_id ,\npcp_is_sms,\npcp_is_phone,\npcp_is_letter,\npcp_is_email,\npcp_created,\npcp_modified,\nLOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id ,\npcp_is_past_due,\npcp_stop_past_due_communication_reason\nFROM soft_collection.payor_communication_preference\nWHERE pcp_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND pcp_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "pcp_id",
											"type": "String"
										},
										"sink": {
											"name": "pcp_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "payor_id",
											"type": "Byte[]"
										},
										"sink": {
											"name": "payor_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pcp_is_sms",
											"type": "Boolean"
										},
										"sink": {
											"name": "pcp_is_sms",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "pcp_is_phone",
											"type": "Boolean"
										},
										"sink": {
											"name": "pcp_is_phone",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "pcp_is_letter",
											"type": "Boolean"
										},
										"sink": {
											"name": "pcp_is_letter",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "pcp_is_email",
											"type": "Boolean"
										},
										"sink": {
											"name": "pcp_is_email",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "pcp_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "pcp_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "pcp_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "pcp_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pcp_is_past_due",
											"type": "Boolean"
										},
										"sink": {
											"name": "pcp_is_past_due",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "pcp_stop_past_due_communication_reason",
											"type": "String"
										},
										"sink": {
											"name": "pcp_stop_past_due_communication_reason",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_SOFT_COLLECTION_PAYOR_COMMUNICATION_PREFERENCE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-21T13:54:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_SOFT_COLLECT_LOCATION_COMMUNICATION_PREFER_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_SOFTCOLLECTION_LOCATION_COMMUNICATION_PREFERENCE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Soft_Collection_Location_Communication_Preference_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.SOFT_COLLECTION_LOCATION_COMMUNICATION_PREFERENCE_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_SOFTCOLLECTION_LOCATION_COMMUNICATION_PREFERENCE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\nLOWER(CONCAT (SUBSTR(HEX(lcp_id), 1, 8),'-',SUBSTR(HEX(lcp_id), 9, 4),'-',SUBSTR(HEX(lcp_id), 13, 4),'-',SUBSTR(HEX(lcp_id), 17, 4),'-',SUBSTR(HEX(lcp_id), 21))) AS lcp_id,\nLOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) AS loc_id ,\nlcp_is_sms,\nlcp_is_phone,\nlcp_is_letter,\nlcp_is_email,\nlcp_created,\nlcp_modified,\nLOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id ,\nlcp_is_past_due,\nlcp_stop_past_due_communication_reason,\nlcp_is_past_due_phone,\nlcp_start_from_day,\nlcp_no_reply_interval_days,\nlcp_successful_response_interval_days,\nlcp_failed_response_interval_days,\nLOWER(CONCAT (SUBSTR(HEX(cpp_id), 1, 8),'-',SUBSTR(HEX(cpp_id), 9, 4),'-',SUBSTR(HEX(cpp_id), 13, 4),'-',SUBSTR(HEX(cpp_id), 17, 4),'-',SUBSTR(HEX(cpp_id), 21))) AS cpp_id\nFROM soft_collection.location_communication_preference\nWHERE lcp_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND lcp_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "lcp_id",
											"type": "String"
										},
										"sink": {
											"name": "lcp_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "lcp_is_sms",
											"type": "Boolean"
										},
										"sink": {
											"name": "lcp_is_sms",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "lcp_is_phone",
											"type": "Boolean"
										},
										"sink": {
											"name": "lcp_is_phone",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "lcp_is_letter",
											"type": "Boolean"
										},
										"sink": {
											"name": "lcp_is_letter",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "lcp_is_email",
											"type": "Boolean"
										},
										"sink": {
											"name": "lcp_is_email",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "lcp_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "lcp_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "lcp_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "lcp_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "lcp_is_past_due",
											"type": "Boolean"
										},
										"sink": {
											"name": "lcp_is_past_due",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "lcp_stop_past_due_communication_reason",
											"type": "String"
										},
										"sink": {
											"name": "lcp_stop_past_due_communication_reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "lcp_is_past_due_phone",
											"type": "Boolean"
										},
										"sink": {
											"name": "lcp_is_past_due_phone",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "lcp_start_from_day",
											"type": "Int32"
										},
										"sink": {
											"name": "lcp_start_from_day",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "lcp_no_reply_interval_days",
											"type": "Int32"
										},
										"sink": {
											"name": "lcp_no_reply_interval_days",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "lcp_successful_response_interval_days",
											"type": "Int32"
										},
										"sink": {
											"name": "lcp_successful_response_interval_days",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "lcp_failed_response_interval_days",
											"type": "Int32"
										},
										"sink": {
											"name": "lcp_failed_response_interval_days",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "cpp_id",
											"type": "String"
										},
										"sink": {
											"name": "cpp_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_TAXATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_SOFT_COLLECTION_LOCATION_COMMUNICATION_PREFERENCE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-21T13:54:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_TAXATION_Tax_Item_Jurisdiction_Document_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_TAXATION_TAX_ITEM_JURISDICTION_DOCUMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Taxation_Tax_Item_Jurisdiction_Document_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.TAXATION_TAX_ITEM_JURISDICTION_DOCUMENT_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_TAXATION_TAX_ITEM_JURISDICTION_DOCUMENT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n LOWER(CONCAT(SUBSTR(HEX(tijd_id),1,8),'-',SUBSTR(HEX(tijd_id),9,4),'-',SUBSTR(HEX(tijd_id),13,4),'-',SUBSTR(HEX(tijd_id),17,4),'-',SUBSTR(HEX(tijd_id),21))) AS tijd_id,\ntijd_external_line_detail_id,\nLOWER(CONCAT(SUBSTR(HEX(ttid_id),1,8),'-',SUBSTR(HEX(ttid_id),9,4),'-',SUBSTR(HEX(ttid_id),13,4),'-',SUBSTR(HEX(ttid_id),17,4),'-',SUBSTR(HEX(ttid_id),21))) AS ttid_id,\nLOWER(CONCAT(SUBSTR(HEX(org_id),1,8),'-',SUBSTR(HEX(org_id),9,4),'-',SUBSTR(HEX(org_id),13,4),'-',SUBSTR(HEX(org_id),17,4),'-',SUBSTR(HEX(org_id),21))) AS org_id,\nLOWER(CONCAT(SUBSTR(HEX(loc_id),1,8),'-',SUBSTR(HEX(loc_id),9,4),'-',SUBSTR(HEX(loc_id),13,4),'-',SUBSTR(HEX(loc_id),17,4),'-',SUBSTR(HEX(loc_id),21))) AS loc_id,\ntijd_country_code,\ntijd_region,\ntijd_jurisdiction_type,\ntijd_juris_code,\ntijd_juris_name,\ntijd_tax_authority_type_id,\ntijd_tax_type,\ntijd_tax_name,\ntijd_taxable_amount,\ntijd_rate,\ntijd_tax,\ntijd_non_taxable_amount,\ntijd_exempt_amount,\ntijd_created,\ntijd_modified      \nFROM taxation.tax_item_jurisdiction_document\nWHERE tijd_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND tijd_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tijd_id",
											"type": "String"
										},
										"sink": {
											"name": "tijd_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tijd_external_line_detail_id",
											"type": "String"
										},
										"sink": {
											"name": "tijd_external_line_detail_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ttid_id",
											"type": "String"
										},
										"sink": {
											"name": "ttid_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tijd_country_code",
											"type": "String"
										},
										"sink": {
											"name": "tijd_country_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tijd_region",
											"type": "String"
										},
										"sink": {
											"name": "tijd_region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tijd_jurisdiction_type",
											"type": "String"
										},
										"sink": {
											"name": "tijd_jurisdiction_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tijd_juris_code",
											"type": "String"
										},
										"sink": {
											"name": "tijd_juris_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tijd_juris_name",
											"type": "String"
										},
										"sink": {
											"name": "tijd_juris_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tijd_tax_authority_type_id",
											"type": "Int64"
										},
										"sink": {
											"name": "tijd_tax_authority_type_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "tijd_tax_type",
											"type": "String"
										},
										"sink": {
											"name": "tijd_tax_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tijd_tax_name",
											"type": "String"
										},
										"sink": {
											"name": "tijd_tax_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tijd_taxable_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "tijd_taxable_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "tijd_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "tijd_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "tijd_tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "tijd_tax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "tijd_non_taxable_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "tijd_non_taxable_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "tijd_exempt_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "tijd_exempt_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "tijd_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "tijd_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tijd_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "tijd_modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_TAXATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_TAXATION_TAX_ITEM_JURISDICTION_DOCUMENT_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_TAXATION_Tax_Location')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_TAXATION_TAX_LOCATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Taxation_Tax_Location_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.TAXATION_TAX_LOCATION_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_TAXATION_TAX_LOCATION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_TAXATION_TAX_LOCATION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "`taxation_tax_location`"
							},
							{
								"name": "Destination",
								"value": "StgRCM.TAXATION_TAX_LOCATION_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT LOWER(CONCAT(SUBSTR(HEX(talo_id),1,8),'-',SUBSTR(HEX(talo_id),9,4),'-',SUBSTR(HEX(talo_id),13,4),'-',SUBSTR(HEX(talo_id),17,4),'-',SUBSTR(HEX(talo_id),21))) AS talo_id,\n       LOWER(CONCAT(SUBSTR(HEX(org_id),1,8),'-',SUBSTR(HEX(org_id),9,4),'-',SUBSTR(HEX(org_id),13,4),'-',SUBSTR(HEX(org_id),17,4),'-',SUBSTR(HEX(org_id),21))) AS org_id,\n       talo_location_id,\ntalo_location_code,\ntalo_line1,\ntalo_city,\ntalo_region,\ntalo_country,\ntalo_postal_code,\ntalo_created,\ntalo_modified,\ntalo_line2,\nLOWER(CONCAT(SUBSTR(HEX(taco_id),1,8),'-',SUBSTR(HEX(taco_id),9,4),'-',SUBSTR(HEX(taco_id),13,4),'-',SUBSTR(HEX(taco_id),17,4),'-',SUBSTR(HEX(taco_id),21))) AS taco_id,\nLOWER(CONCAT(SUBSTR(HEX(loc_id),1,8),'-',SUBSTR(HEX(loc_id),9,4),'-',SUBSTR(HEX(loc_id),13,4),'-',SUBSTR(HEX(loc_id),17,4),'-',SUBSTR(HEX(loc_id),21))) AS loc_id,\ntalo_address1,\ntalo_address2,\ntalo_province_code,\ntalo_province_name,\ntalo_country_code\nFROM taxation.tax_location\nWHERE talo_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND talo_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "talo_id",
											"type": "String"
										},
										"sink": {
											"name": "talo_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_location_id",
											"type": "Int32"
										},
										"sink": {
											"name": "talo_location_id",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "talo_location_code",
											"type": "String"
										},
										"sink": {
											"name": "talo_location_code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_line1",
											"type": "String"
										},
										"sink": {
											"name": "talo_line1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_city",
											"type": "String"
										},
										"sink": {
											"name": "talo_city",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_region",
											"type": "String"
										},
										"sink": {
											"name": "talo_region",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_country",
											"type": "String"
										},
										"sink": {
											"name": "talo_country",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_postal_code",
											"type": "String"
										},
										"sink": {
											"name": "talo_postal_code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "talo_created",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "talo_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "talo_modified",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "talo_line2",
											"type": "String"
										},
										"sink": {
											"name": "talo_line2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "taco_id",
											"type": "String"
										},
										"sink": {
											"name": "taco_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_address1",
											"type": "String"
										},
										"sink": {
											"name": "talo_address1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_address2",
											"type": "String"
										},
										"sink": {
											"name": "talo_address2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_province_code",
											"type": "String"
										},
										"sink": {
											"name": "talo_province_code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_province_name",
											"type": "String"
										},
										"sink": {
											"name": "talo_province_name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "talo_country_code",
											"type": "String"
										},
										"sink": {
											"name": "talo_country_code",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_TAXATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_TAXATION_TAX_LOCATION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_TAXATION_Tax_Transaction_Document_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_TAXATION_TAX_LOCATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Taxation_Tax_Transaction_Document_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [StgRCM].[TAXATION_TAX_TRANSACTION_DOCUMENT_INCR];\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_TAXATION_TAX_LOCATION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n LOWER(CONCAT(SUBSTR(HEX(ttd_id),1,8),'-',SUBSTR(HEX(ttd_id),9,4),'-',SUBSTR(HEX(ttd_id),13,4),'-',SUBSTR(HEX(ttd_id),17,4),'-',SUBSTR(HEX(ttd_id),21))) AS ttd_id,\n LOWER(CONCAT(SUBSTR(HEX(org_id),1,8),'-',SUBSTR(HEX(org_id),9,4),'-',SUBSTR(HEX(org_id),13,4),'-',SUBSTR(HEX(org_id),17,4),'-',SUBSTR(HEX(org_id),21))) AS org_id, \nLOWER(CONCAT(SUBSTR(HEX(loc_id),1,8),'-',SUBSTR(HEX(loc_id),9,4),'-',SUBSTR(HEX(loc_id),13,4),'-',SUBSTR(HEX(loc_id),17,4),'-',SUBSTR(HEX(loc_id),21))) AS loc_id,\nttd_external_doc_id,\nttd_ref_id,\nttd_payor_identifier,\nttd_document_date,\nttd_currency,\nLOWER(CONCAT(SUBSTR(HEX(inv_id),1,8),'-',SUBSTR(HEX(inv_id),9,4),'-',SUBSTR(HEX(inv_id),13,4),'-',SUBSTR(HEX(inv_id),17,4),'-',SUBSTR(HEX(inv_id),21))) AS inv_id,\nttd_created,\nttd_modified   \nFROM taxation.tax_transaction_document\nWHERE ttd_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND ttd_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ttd_id",
											"type": "String"
										},
										"sink": {
											"name": "ttd_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ttd_external_doc_id",
											"type": "String"
										},
										"sink": {
											"name": "ttd_external_doc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ttd_ref_id",
											"type": "String"
										},
										"sink": {
											"name": "ttd_ref_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ttd_payor_identifier",
											"type": "String"
										},
										"sink": {
											"name": "ttd_payor_identifier",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ttd_document_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "ttd_document_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ttd_currency",
											"type": "String"
										},
										"sink": {
											"name": "ttd_currency",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "inv_id",
											"type": "String"
										},
										"sink": {
											"name": "inv_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ttd_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ttd_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ttd_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ttd_modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_TAXATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_Taxation_Tax_Transaction_Document_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_TAXATION_Tax_Transaction_Item_Document_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_TAXATION_TAX_LOCATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Taxation_Tax_Transaction_Item_Document_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [StgRCM].[TAXATION_TAX_TRANSACTION_Item_DOCUMENT_INCR];\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_TAXATION_TAX_LOCATION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\nLOWER(CONCAT(SUBSTR(HEX(ttid_id),1,8),'-',SUBSTR(HEX(ttid_id),9,4),'-',SUBSTR(HEX(ttid_id),13,4),'-',SUBSTR(HEX(ttid_id),17,4),'-',SUBSTR(HEX(ttid_id),21))) AS ttid_id,\nttid_external_line_id,\nLOWER(CONCAT(SUBSTR(HEX(ttd_id),1,8),'-',SUBSTR(HEX(ttd_id),9,4),'-',SUBSTR(HEX(ttd_id),13,4),'-',SUBSTR(HEX(ttd_id),17,4),'-',SUBSTR(HEX(ttd_id),21))) AS ttd_id, \nLOWER(CONCAT(SUBSTR(HEX(org_id),1,8),'-',SUBSTR(HEX(org_id),9,4),'-',SUBSTR(HEX(org_id),13,4),'-',SUBSTR(HEX(org_id),17,4),'-',SUBSTR(HEX(org_id),21))) AS org_id, \nLOWER(CONCAT(SUBSTR(HEX(loc_id),1,8),'-',SUBSTR(HEX(loc_id),9,4),'-',SUBSTR(HEX(loc_id),13,4),'-',SUBSTR(HEX(loc_id),17,4),'-',SUBSTR(HEX(loc_id),21))) AS loc_id,\nttid_line_number,\nLOWER(CONCAT(SUBSTR(HEX(invi_id),1,8),'-',SUBSTR(HEX(invi_id),9,4),'-',SUBSTR(HEX(invi_id),13,4),'-',SUBSTR(HEX(invi_id),17,4),'-',SUBSTR(HEX(invi_id),21))) AS invi_id,\nttid_quantity,\ntcl_code,\nttid_override_amount,\nttid_is_tax_included,\nttid_tax_rate,\nttid_tax_amount,\nttid_amount,\nttid_original_amount,\nttid_created,\nttid_modified \nFROM taxation.tax_transaction_item_document\nWHERE ttid_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND ttid_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ttid_id",
											"type": "String"
										},
										"sink": {
											"name": "ttid_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ttid_external_line_id",
											"type": "String"
										},
										"sink": {
											"name": "ttid_external_line_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ttd_id",
											"type": "String"
										},
										"sink": {
											"name": "ttd_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ttid_line_number",
											"type": "String"
										},
										"sink": {
											"name": "ttid_line_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "invi_id",
											"type": "String"
										},
										"sink": {
											"name": "invi_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ttid_quantity",
											"type": "Int16"
										},
										"sink": {
											"name": "ttid_quantity",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "tcl_code",
											"type": "String"
										},
										"sink": {
											"name": "tcl_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ttid_override_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ttid_override_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ttid_is_tax_included",
											"type": "Boolean"
										},
										"sink": {
											"name": "ttid_is_tax_included",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ttid_tax_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "ttid_tax_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ttid_tax_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ttid_tax_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ttid_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ttid_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ttid_original_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ttid_original_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ttid_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ttid_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ttid_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ttid_modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_TAXATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_TAXATION_TAX_TRANSACTION_ITEM_DOCUMENT_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_TAXATION_Tax_location_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_TAXATION_TAX_LOCATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Taxation_Tax_Location_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [StgRCM].[TAXATION_TAX_LOCATION_INCR];\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_TAXATION_TAX_LOCATION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT LOWER(CONCAT(SUBSTR(HEX(talo_id),1,8),'-',SUBSTR(HEX(talo_id),9,4),'-',SUBSTR(HEX(talo_id),13,4),'-',SUBSTR(HEX(talo_id),17,4),'-',SUBSTR(HEX(talo_id),21))) AS talo_id,\n       LOWER(CONCAT(SUBSTR(HEX(org_id),1,8),'-',SUBSTR(HEX(org_id),9,4),'-',SUBSTR(HEX(org_id),13,4),'-',SUBSTR(HEX(org_id),17,4),'-',SUBSTR(HEX(org_id),21))) AS org_id,\n       talo_location_id,\ntalo_location_code,\ntalo_line1,\ntalo_city,\ntalo_region,\ntalo_country,\ntalo_postal_code,\ntalo_created,\ntalo_modified,\ntalo_line2,\nLOWER(CONCAT(SUBSTR(HEX(taco_id),1,8),'-',SUBSTR(HEX(taco_id),9,4),'-',SUBSTR(HEX(taco_id),13,4),'-',SUBSTR(HEX(taco_id),17,4),'-',SUBSTR(HEX(taco_id),21))) AS taco_id,\nLOWER(CONCAT(SUBSTR(HEX(loc_id),1,8),'-',SUBSTR(HEX(loc_id),9,4),'-',SUBSTR(HEX(loc_id),13,4),'-',SUBSTR(HEX(loc_id),17,4),'-',SUBSTR(HEX(loc_id),21))) AS loc_id,\ntalo_address1,\ntalo_address2,\ntalo_province_code,\ntalo_province_name,\ntalo_country_code\nFROM taxation.tax_location\nWHERE talo_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND talo_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "talo_id",
											"type": "String"
										},
										"sink": {
											"name": "talo_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_location_id",
											"type": "Int32"
										},
										"sink": {
											"name": "talo_location_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "talo_location_code",
											"type": "String"
										},
										"sink": {
											"name": "talo_location_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_line1",
											"type": "String"
										},
										"sink": {
											"name": "talo_line1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_city",
											"type": "String"
										},
										"sink": {
											"name": "talo_city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_region",
											"type": "String"
										},
										"sink": {
											"name": "talo_region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_country",
											"type": "String"
										},
										"sink": {
											"name": "talo_country",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_postal_code",
											"type": "String"
										},
										"sink": {
											"name": "talo_postal_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "talo_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "talo_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "talo_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "talo_line2",
											"type": "String"
										},
										"sink": {
											"name": "talo_line2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "taco_id",
											"type": "String"
										},
										"sink": {
											"name": "taco_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_address1",
											"type": "String"
										},
										"sink": {
											"name": "talo_address1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_address2",
											"type": "String"
										},
										"sink": {
											"name": "talo_address2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_province_code",
											"type": "String"
										},
										"sink": {
											"name": "talo_province_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_province_name",
											"type": "String"
										},
										"sink": {
											"name": "talo_province_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "talo_country_code",
											"type": "String"
										},
										"sink": {
											"name": "talo_country_code",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_TAXATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_Taxation_Tax_Location_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RecurringservicePlans')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RecurringservicePlans1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "RECURRINGSERVICEPLANS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "betadata.stg_members"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.RECURRINGSERVICEPLANS\nwhere RSP_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND RSP_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"maxConcurrentConnections": 1000,
											"writeBehavior": "insert",
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"parallelCopies": 32,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_ID",
														"type": "String"
													},
													"sink": {
														"name": "RSP_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "RSP_CREATED",
														"type": "DateTime",
														"physicalType": "DateTime"
													}
												},
												{
													"source": {
														"name": "RSP_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "RSP_MODIFIED",
														"type": "DateTime",
														"physicalType": "DateTime"
													}
												},
												{
													"source": {
														"name": "RSP_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "RSP_ACTIVE",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_NAME",
														"type": "String"
													},
													"sink": {
														"name": "RSP_NAME",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_2",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_2",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_3",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_3",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_4",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_4",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_INCS_TYPE",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_INCS_TYPE",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_MONTHS",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_MONTHS",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_AUTO_RENEW",
														"type": "String"
													},
													"sink": {
														"name": "RSP_AUTO_RENEW",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_REORDER_QUANTITY",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_REORDER_QUANTITY",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_LOCKED",
														"type": "String"
													},
													"sink": {
														"name": "RSP_LOCKED",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "CGI_ID",
														"type": "String"
													},
													"sink": {
														"name": "CGI_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "ET_ID",
														"type": "String"
													},
													"sink": {
														"name": "ET_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "ETL_ID",
														"type": "String"
													},
													"sink": {
														"name": "ETL_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "SEM_ID",
														"type": "String"
													},
													"sink": {
														"name": "SEM_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_BILLING_DAY_2",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_BILLING_DAY_2",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "INCSF_ID",
														"type": "String"
													},
													"sink": {
														"name": "INCSF_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_1",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_1",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "DOCT_ID",
														"type": "String"
													},
													"sink": {
														"name": "DOCT_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_OPEN",
														"type": "String"
													},
													"sink": {
														"name": "RSP_OPEN",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_DOWN_PAYMENT",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DOWN_PAYMENT",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "CGI_ID_DOWN_PAYMENT",
														"type": "String"
													},
													"sink": {
														"name": "CGI_ID_DOWN_PAYMENT",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_FIRST_INVOICE_DISCOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_FIRST_INVOICE_DISCOUNT",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_MIN_UNIT_PRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_MIN_UNIT_PRICE",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_MAX_UNIT_PRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_MAX_UNIT_PRICE",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_WEB",
														"type": "String"
													},
													"sink": {
														"name": "RSP_WEB",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_RECURRINGSERVICEPLANS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_STGDATATRAK_STG_RECURRINGSERVICEPLANS_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoadKM]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_STGDATATRAK_STG_SERVICEPROVIDERLOCATIONS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_recurringserviceplans_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_STGDATATRAK_STG_RECURRINGSERVICEPLANS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RecurringservicePlans1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[Stg_RecurringServicePlans_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RecurringservicePlans_ORIG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RecurringservicePlans1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "RECURRINGSERVICEPLANS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "betadata.stg_members"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.RECURRINGSERVICEPLANS\nwhere RSP_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND RSP_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"maxConcurrentConnections": 1000,
											"writeBehavior": "insert",
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"parallelCopies": 32,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_ID",
														"type": "String"
													},
													"sink": {
														"name": "RSP_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "RSP_CREATED",
														"type": "DateTime",
														"physicalType": "DateTime"
													}
												},
												{
													"source": {
														"name": "RSP_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "RSP_MODIFIED",
														"type": "DateTime",
														"physicalType": "DateTime"
													}
												},
												{
													"source": {
														"name": "RSP_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "RSP_ACTIVE",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_NAME",
														"type": "String"
													},
													"sink": {
														"name": "RSP_NAME",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_2",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_2",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_3",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_3",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_4",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_4",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_INCS_TYPE",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_INCS_TYPE",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_MONTHS",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_MONTHS",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_AUTO_RENEW",
														"type": "String"
													},
													"sink": {
														"name": "RSP_AUTO_RENEW",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_REORDER_QUANTITY",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_REORDER_QUANTITY",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_LOCKED",
														"type": "String"
													},
													"sink": {
														"name": "RSP_LOCKED",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "CGI_ID",
														"type": "String"
													},
													"sink": {
														"name": "CGI_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "ET_ID",
														"type": "String"
													},
													"sink": {
														"name": "ET_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "ETL_ID",
														"type": "String"
													},
													"sink": {
														"name": "ETL_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "SEM_ID",
														"type": "String"
													},
													"sink": {
														"name": "SEM_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_BILLING_DAY_2",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_BILLING_DAY_2",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "INCSF_ID",
														"type": "String"
													},
													"sink": {
														"name": "INCSF_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_1",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_1",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "DOCT_ID",
														"type": "String"
													},
													"sink": {
														"name": "DOCT_ID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_OPEN",
														"type": "String"
													},
													"sink": {
														"name": "RSP_OPEN",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_DOWN_PAYMENT",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DOWN_PAYMENT",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "CGI_ID_DOWN_PAYMENT",
														"type": "String"
													},
													"sink": {
														"name": "CGI_ID_DOWN_PAYMENT",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "RSP_FIRST_INVOICE_DISCOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_FIRST_INVOICE_DISCOUNT",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_MIN_UNIT_PRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_MIN_UNIT_PRICE",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_MAX_UNIT_PRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_MAX_UNIT_PRICE",
														"type": "Decimal",
														"physicalType": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_WEB",
														"type": "String"
													},
													"sink": {
														"name": "RSP_WEB",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_RECURRINGSERVICEPLANS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_STGDATATRAK_STG_RECURRINGSERVICEPLANS_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_STGDATATRAK_STG_SERVICEPROVIDERLOCATIONS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_recurringserviceplans_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_STGDATATRAK_STG_RECURRINGSERVICEPLANS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RecurringservicePlans1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[Stg_RecurringServicePlans_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RecurringservicePlans_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RecurringservicePlans1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "RECURRINGSERVICEPLANS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "betadata.stg_members"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.RECURRINGSERVICEPLANS\nwhere RSP_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND RSP_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_ID",
														"type": "String"
													},
													"sink": {
														"name": "RSP_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RSP_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "RSP_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RSP_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "RSP_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "RSP_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "RSP_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RSP_NAME",
														"type": "String"
													},
													"sink": {
														"name": "RSP_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_2",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_2",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_3",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_3",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_4",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_4",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_INCS_TYPE",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_INCS_TYPE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_MONTHS",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_MONTHS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_AUTO_RENEW",
														"type": "String"
													},
													"sink": {
														"name": "RSP_AUTO_RENEW",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RSP_REORDER_QUANTITY",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_REORDER_QUANTITY",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_LOCKED",
														"type": "String"
													},
													"sink": {
														"name": "RSP_LOCKED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CGI_ID",
														"type": "String"
													},
													"sink": {
														"name": "CGI_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ET_ID",
														"type": "String"
													},
													"sink": {
														"name": "ET_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ETL_ID",
														"type": "String"
													},
													"sink": {
														"name": "ETL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SEM_ID",
														"type": "String"
													},
													"sink": {
														"name": "SEM_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RSP_BILLING_DAY_2",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_BILLING_DAY_2",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "INCSF_ID",
														"type": "String"
													},
													"sink": {
														"name": "INCSF_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RSP_DEAD_COLUMN_1",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DEAD_COLUMN_1",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "DOCT_ID",
														"type": "String"
													},
													"sink": {
														"name": "DOCT_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RSP_OPEN",
														"type": "String"
													},
													"sink": {
														"name": "RSP_OPEN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RSP_DOWN_PAYMENT",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_DOWN_PAYMENT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "CGI_ID_DOWN_PAYMENT",
														"type": "String"
													},
													"sink": {
														"name": "CGI_ID_DOWN_PAYMENT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RSP_FIRST_INVOICE_DISCOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_FIRST_INVOICE_DISCOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_MIN_UNIT_PRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_MIN_UNIT_PRICE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_MAX_UNIT_PRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "RSP_MAX_UNIT_PRICE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "RSP_WEB",
														"type": "String"
													},
													"sink": {
														"name": "RSP_WEB",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_RECURRINGSERVICEPLANS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_RECURRINGSERVICEPLANS_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_recurringserviceplans_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RecurringservicePlans1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_RECURRINGSERVICEPLANS_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group4"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Recurringserviceplanclubs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RecurringservicePlanClubs1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "RECURRINGSERVICEPLANCLUBS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "betadata.stg_members"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.RECURRINGSERVICEPLANCLUBS\nwhere  VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"maxConcurrentConnections": 1000,
											"writeBehavior": "insert",
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"parallelCopies": 32,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID"
													},
													"sink": {
														"name": "VPD_ID"
													}
												},
												{
													"source": {
														"name": "SPL_ID"
													},
													"sink": {
														"name": "SPL_ID"
													}
												},
												{
													"source": {
														"name": "RSP_ID"
													},
													"sink": {
														"name": "RSP_ID"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_RECURRINGSERVICEPLANCLUBS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_STGDATATRAK_STG_RECURRINGSERVICEPLANCLUBS_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_STGDATATRAK_STG_SERVICEPROVIDERLOCATIONS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RecurringservicePlanClubs1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[Stg_RecurringServicePlanClubs_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_recurringserviceplanclubs_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_STGDATATRAK_STG_RECURRINGSERVICEPLANCLUBS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Recurringserviceplanclubs_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RecurringservicePlanClubs",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "RECURRINGSERVICEPLANCLUBS_SQLPOOL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "betadata.stg_members"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.RECURRINGSERVICEPLANCLUBS\nwhere  VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "SPL_ID",
														"type": "String"
													},
													"sink": {
														"name": "SPL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RSP_ID",
														"type": "String"
													},
													"sink": {
														"name": "RSP_ID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_RECURRINGSERVICEPLANCLUBS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_RECURRINGSERVICEPLANCLUBS_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RecurringservicePlanClubs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_RECURRINGSERVICEPLANCLUBS_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_recurringserviceplanclubs_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		}
	]
}