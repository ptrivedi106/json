{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PlanetFitnessDF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select m.* from dimfact.dimmember m inner join dimfact.dimclub c on c.club_key=m.club_key where organization_key=3",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MemberKey",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "MemberKey",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "MemberType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MemberType",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "addressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "addressLine1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "barcode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "barcode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "birthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "birthDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "countryCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "countryCode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "createdTimestamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "createdTimestamp",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "firstCheckInTimestamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "firstCheckInTimestamp",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "firstName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "firstName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FitBiDateCreatedUTC",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "FitBiDateCreatedUTC",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "FitBiDateModifiedUTC",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "FitBiDateModifiedUTC",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "Club_Key",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "Club_Key",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "gender",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "group",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "hasPhoto",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "hasPhoto",
											"type": "Boolean",
											"physicalType": "Boolean"
										}
									},
									{
										"source": {
											"name": "homeClub",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "homeClub",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "insert_dt",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "insert_dt",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "isActive",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "isActive",
											"type": "Boolean",
											"physicalType": "Boolean"
										}
									},
									{
										"source": {
											"name": "isConvertedProspect",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "isConvertedProspect",
											"type": "Boolean",
											"physicalType": "Boolean"
										}
									},
									{
										"source": {
											"name": "joinStatus",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "joinStatus",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "lastCheckInTimestamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "lastCheckInTimestamp",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "lastName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "lastName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "StatusDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "StatusDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "StatusReason",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StatusReason",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "personal",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "personal",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "postalCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "postalCode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "state",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "state",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "totalCheckInCount",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "totalCheckInCount",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "agreementEntrySource",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "agreementEntrySource",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "agreementEntrySourceReportName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "agreementEntrySourceReportName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "beginDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "beginDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "campaignkey",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "campaignkey",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "expirationDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "expirationDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "issueDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "issueDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "leadPriority",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "leadPriority",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "locationState",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "locationState",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "middleInitial",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "middleInitial",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "misc1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "misc1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "misc2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "misc2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "primaryPhone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "primaryPhone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "referringMemberKey",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "referringMemberKey",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "salesPersonKey",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "salesPersonKey",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "tourDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "tourDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "visitsAllowed",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "visitsAllowed",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "visitsUsed",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "visitsUsed",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "workPhone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "workPhone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "record_eff_from_dt",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "record_eff_from_dt",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "record_eff_to_dt",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "record_eff_to_dt",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "commissionLevel",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "commissionLevel",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "startDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "startDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "terminationDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "terminationDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "trainingLevel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "trainingLevel",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "wage",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "wage",
											"type": "Single",
											"physicalType": "Single"
										}
									},
									{
										"source": {
											"name": "HomePhone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HomePhone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CellPhone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CellPhone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Prospect_Key",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "Prospect_Key",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "EmergencyAvailability",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmergencyAvailability",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Emergencyext",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Emergencyext",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EmergencyPhone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmergencyPhone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AllCareNum",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AllCareNum",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "WellnessProgramID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "WellnessProgramID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FitBiMemberActive",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FitBiMemberActive",
											"type": "Boolean",
											"physicalType": "Boolean"
										}
									},
									{
										"source": {
											"name": "vpd_id",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 6
										},
										"sink": {
											"name": "vpd_id",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "insertDt",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "insertDt",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "ModifiedDt",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDt",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "memberCd",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "memberCd",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "source_key",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "source_key",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "DeletedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DeletedDate",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "Age_Class",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Age_Class",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable18",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select top 1000 * from dimfact.factcheckin",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeSink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CheckinKey",
											"type": "Int64"
										},
										"sink": {
											"name": "CHECKINKEY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Club_Key",
											"type": "Int64"
										},
										"sink": {
											"name": "CLUB_KEY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "checkInId",
											"type": "String"
										},
										"sink": {
											"name": "CHECKINID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MemberKey",
											"type": "Int64"
										},
										"sink": {
											"name": "MEMBERKEY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "StationKey",
											"type": "Int64"
										},
										"sink": {
											"name": "STATIONKEY",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "checkInStatus",
											"type": "String"
										},
										"sink": {
											"name": "CHECKINSTATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "checkInTimestamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "CHECKINTIMESTAMP",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "homeClub",
											"type": "Int64"
										},
										"sink": {
											"name": "HOMECLUB",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "checkInMessage",
											"type": "String"
										},
										"sink": {
											"name": "CHECKINMESSAGE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FitBiDateModifiedUTC",
											"type": "DateTime"
										},
										"sink": {
											"name": "FITBIDATEMODIFIEDUTC",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "InsertDt",
											"type": "DateTime"
										},
										"sink": {
											"name": "INSERTDT",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "StationName",
											"type": "String"
										},
										"sink": {
											"name": "STATIONNAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "vpd_id",
											"type": "Decimal"
										},
										"sink": {
											"name": "VPD_ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "ISDELETED",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable15",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SnowflakeTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select * from pf.edw_actions_history_prd_tb \nwhere etl_date_key>= 20220101",
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CLUB_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "CLUB_NUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MEMBER_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "MEMBER_NUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ACTION_DATE_TIME",
											"type": "DateTime"
										},
										"sink": {
											"name": "ACTION_DATE_TIME",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "MEMBER_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "MEMBER_TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OLD_MEMBER_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "OLD_MEMBER_NUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OLD_CLUB_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "OLD_CLUB_NUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TYPE_OF_ACTION",
											"type": "String"
										},
										"sink": {
											"name": "TYPE_OF_ACTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "REASON_FOR_ACTION",
											"type": "String"
										},
										"sink": {
											"name": "REASON_FOR_ACTION",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GROWTH_EFT",
											"type": "Double"
										},
										"sink": {
											"name": "GROWTH_EFT",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "CONVERT_TO_MEMBER_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "CONVERT_TO_MEMBER_TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MEMBER_NUMBER_UNIQUE",
											"type": "String"
										},
										"sink": {
											"name": "MEMBER_NUMBER_UNIQUE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GROWTH_EFT_TAX",
											"type": "Double"
										},
										"sink": {
											"name": "GROWTH_EFT_TAX",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "SENT_TO_PF",
											"type": "String"
										},
										"sink": {
											"name": "SENT_TO_PF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DATE_SENT",
											"type": "DateTime"
										},
										"sink": {
											"name": "DATE_SENT",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "MEMBER_PAYMENT_FREQUENCY_CODE",
											"type": "String"
										},
										"sink": {
											"name": "MEMBER_PAYMENT_FREQUENCY_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PREVIOUS_MEMBER_PMT_FREQ_CODE",
											"type": "String"
										},
										"sink": {
											"name": "PREVIOUS_MEMBER_PMT_FREQ_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ONLINE_CANCEL_FLAG",
											"type": "String"
										},
										"sink": {
											"name": "ONLINE_CANCEL_FLAG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "CHANNEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ETL_DATE_KEY",
											"type": "Double"
										},
										"sink": {
											"name": "ETL_DATE_KEY",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "GROUP_NO",
											"type": "Double"
										},
										"sink": {
											"name": "GROUP_NO",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "DEACTIVATION_DATE",
											"type": "String"
										},
										"sink": {
											"name": "DEACTIVATION_DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FREEZE_START_DATE",
											"type": "String"
										},
										"sink": {
											"name": "FREEZE_START_DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FREEZE_END_DATE",
											"type": "String"
										},
										"sink": {
											"name": "FREEZE_END_DATE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "OracleTable8",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTable41",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyDimAgreement_DraftAmt')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DailyUpdate_DraftAmount_SQLPOOL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-06-08T13:00:00",
						"timeZone": "Central Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SNOWFLAKE_DIMMEMBER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move Data from Synapse to Snowflake DIMMEMBER",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select * from INZADBA.DIMMEMBER\nWHERE ETL_UPDATE_DATE >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')\nAND ETL_UPDATE_DATE < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"maxConcurrentConnections": 3
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VPD_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 6
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "M_ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "MEMBER_SID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "MEMBER_SID_OLD",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"name": "MEMBER_NUMBER_UNIQUE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"name": "MEMBER_SNK",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"name": "MEMBER_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"name": "MEMBER_NUMBER_ORGNL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"name": "CLUB_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 9
										}
									},
									{
										"source": {
											"name": "BARCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 10
										}
									},
									{
										"source": {
											"name": "MEMBER_FIRST_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"name": "MEMBER_LAST_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"name": "MEMBER_ADDRESS_1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"name": "MEMBER_ADDRESS_2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"name": "MEMBER_CITY",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"name": "MEMBER_DISTRICT",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"name": "MEMBER_ZIPCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"name": "MEMBER_STATE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"name": "MEMBER_COUNTRY",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"name": "MEMBER_REGION",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 20
										}
									},
									{
										"source": {
											"name": "PRIMARY_PHONE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 21
										}
									},
									{
										"source": {
											"name": "SECONDARY_PHONE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 22
										}
									},
									{
										"source": {
											"name": "MEMBER_TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 23
										}
									},
									{
										"source": {
											"name": "EMAIL_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 24
										}
									},
									{
										"source": {
											"name": "GENDER",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 25
										}
									},
									{
										"source": {
											"name": "SOURCE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 26
										}
									},
									{
										"source": {
											"name": "AGREEMENT_TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 27
										}
									},
									{
										"source": {
											"name": "PAYMENT_STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 28
										}
									},
									{
										"source": {
											"name": "PAYMENT_MODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 29
										}
									},
									{
										"source": {
											"name": "PAYMENT_FREQUENCY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 30
										}
									},
									{
										"source": {
											"name": "ADD_TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 31
										}
									},
									{
										"source": {
											"name": "STATUS_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 32
										}
									},
									{
										"source": {
											"name": "STATUS_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 33
										}
									},
									{
										"source": {
											"name": "JOIN_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 34
										}
									},
									{
										"source": {
											"name": "BIRTH_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 35
										}
									},
									{
										"source": {
											"name": "AGREEMENT_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 36
										}
									},
									{
										"source": {
											"name": "EXPIRATION_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 37
										}
									},
									{
										"source": {
											"name": "FREEZE_START_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 38
										}
									},
									{
										"source": {
											"name": "FREEZE_END_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 39
										}
									},
									{
										"source": {
											"name": "ANNUAL_BILL_MONTH",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 40
										}
									},
									{
										"source": {
											"name": "ANNUAL_DUES_AMOUNT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 41
										}
									},
									{
										"source": {
											"name": "MONTHLY_DUES_AMOUNT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 42
										}
									},
									{
										"source": {
											"name": "ANNUAL_DUES_AMOUNT_TAX",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 43
										}
									},
									{
										"source": {
											"name": "MONTHLY_DUES_AMOUNT_TAX",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 44
										}
									},
									{
										"source": {
											"name": "ADD_TYPE_SID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 45
										}
									},
									{
										"source": {
											"name": "MEMBER_TYPE_SID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 46
										}
									},
									{
										"source": {
											"name": "JOIN_DATE_SID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 47
										}
									},
									{
										"source": {
											"name": "CANCEL_DATE_SID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 48
										}
									},
									{
										"source": {
											"name": "EXPIRATION_DATE_SID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 49
										}
									},
									{
										"source": {
											"name": "AGREEMENT_DATE_SID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 50
										}
									},
									{
										"source": {
											"name": "STATUS_CODE_SID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 51
										}
									},
									{
										"source": {
											"name": "IS_ACTIVE",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 52
										}
									},
									{
										"source": {
											"name": "IS_BILLING",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 53
										}
									},
									{
										"source": {
											"name": "CANCEL_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 54
										}
									},
									{
										"source": {
											"name": "SRC_SYS_ID",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 55
										}
									},
									{
										"source": {
											"name": "EFFECTIVE_START_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 56
										}
									},
									{
										"source": {
											"name": "EFFECTIVE_END_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 57
										}
									},
									{
										"source": {
											"name": "CURRENT_FLAG",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 58
										}
									},
									{
										"source": {
											"name": "ETL_LOAD_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 59
										}
									},
									{
										"source": {
											"name": "ETL_UPDATE_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 60
										}
									},
									{
										"source": {
											"name": "ETL_USER_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 61
										}
									},
									{
										"source": {
											"name": "SECONDARY_PAYMENT_MODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 62
										}
									},
									{
										"source": {
											"name": "HAS_SECONDARY_BILLING",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 63
										}
									},
									{
										"source": {
											"name": "HAS_PAST_DUE_BALANCE",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 64
										}
									},
									{
										"source": {
											"name": "WELLNESS_PROGRAM_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 65
										}
									},
									{
										"source": {
											"name": "WELLNESS_PROGRAM_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 66
										}
									},
									{
										"source": {
											"name": "PF_JOIN_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 67
										}
									},
									{
										"source": {
											"name": "PF_JOIN_DATE_SID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 68
										}
									},
									{
										"source": {
											"name": "ACQUISITION_MEMBER_SINCE_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 69
										}
									},
									{
										"source": {
											"name": "ACQUISITION_CLUB_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 70
										}
									},
									{
										"source": {
											"name": "EMAIL_OPT_IN",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 71
										}
									},
									{
										"source": {
											"name": "WAS_PREVIOUS_GYM_MEMBER",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 72
										}
									},
									{
										"source": {
											"name": "FIRST_DUE_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 73
										}
									},
									{
										"source": {
											"name": "BEGIN_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 74
										}
									},
									{
										"source": {
											"name": "PRIOR_MEMBER_FLAG",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 75
										}
									},
									{
										"source": {
											"name": "PLAN_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 76
										}
									},
									{
										"source": {
											"name": "PLAN_CLUB_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 77
										}
									},
									{
										"source": {
											"name": "VOUCHER_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 78
										}
									},
									{
										"source": {
											"name": "UPGRADE_REASON",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 79
										}
									},
									{
										"source": {
											"name": "CORPORATE_SPONSOR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 80
										}
									},
									{
										"source": {
											"name": "CORPORATE_SPONSOR_FLAG",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 81
										}
									},
									{
										"source": {
											"name": "SEGMENT_NUMBER",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 82
										}
									},
									{
										"source": {
											"name": "PROMOTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 83
										}
									},
									{
										"source": {
											"name": "PG_CURRENT_MEMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 84
										}
									},
									{
										"source": {
											"name": "PG_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 85
										}
									},
									{
										"source": {
											"name": "PG_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 86
										}
									},
									{
										"source": {
											"name": "PG_MOBILE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 87
										}
									},
									{
										"source": {
											"name": "PG_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 88
										}
									},
									{
										"source": {
											"name": "PG_CITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 89
										}
									},
									{
										"source": {
											"name": "PG_STATE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 90
										}
									},
									{
										"source": {
											"name": "PG_ZIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 91
										}
									},
									{
										"source": {
											"name": "TEEN_EMAIL_OPT_IN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 92
										}
									},
									{
										"source": {
											"name": "GROUP_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 93
										}
									},
									{
										"source": {
											"name": "AMPERITY_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 94
										}
									},
									{
										"source": {
											"name": "SPLIT_PAYER_FLAG",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 95
										}
									},
									{
										"source": {
											"name": "EFFECTIVE_START_DATE_SID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 96
										}
									},
									{
										"source": {
											"name": "EFFECTIVE_END_DATE_SID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 97
										}
									},
									{
										"source": {
											"name": "OFFER_SNK",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 98
										}
									},
									{
										"source": {
											"name": "OPT_IN_CCPA",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 99
										}
									},
									{
										"source": {
											"name": "OPT_IN_GDPR",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 100
										}
									},
									{
										"source": {
											"name": "OPT_IN_OTHER",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 101
										}
									},
									{
										"source": {
											"name": "DELETE_CCPA",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 102
										}
									},
									{
										"source": {
											"name": "DELETE_GDPR",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 103
										}
									},
									{
										"source": {
											"name": "DELETE_OTHER",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 104
										}
									},
									{
										"source": {
											"name": "MARKETING_OPT_IN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 105
										}
									},
									{
										"source": {
											"name": "SURVEY_HOW_HEARD_ABOUT_PF",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 106
										}
									},
									{
										"source": {
											"name": "SURVEY_JOIN_DECISION_FACTOR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 107
										}
									},
									{
										"source": {
											"name": "SURVEY_PREVIOUS_GYM_MEMBERSHIPS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 108
										}
									},
									{
										"source": {
											"name": "RECEIPT_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 109
										}
									},
									{
										"source": {
											"name": "HS_STATE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 110
										}
									},
									{
										"source": {
											"name": "HS_CITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 111
										}
									},
									{
										"source": {
											"name": "HS_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 112
										}
									},
									{
										"source": {
											"name": "PG_NAME_LAST",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 113
										}
									},
									{
										"source": {
											"name": "PG_BIRTH_DATE",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 114
										}
									},
									{
										"source": {
											"name": "PG_GENDER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 115
										}
									},
									{
										"source": {
											"name": "PG_ADDRESS_2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 116
										}
									},
									{
										"source": {
											"name": "PG_COUNTRY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 117
										}
									},
									{
										"source": {
											"name": "TEEN_SMS_OPT_IN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 118
										}
									},
									{
										"source": {
											"name": "PG_EMAIL_OPT_IN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 119
										}
									},
									{
										"source": {
											"name": "PG_SMS_OPT_IN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 120
										}
									},
									{
										"source": {
											"name": "PG_AMPERITY_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 121
										}
									},
									{
										"source": {
											"name": "MODIFIEDDT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 122
										}
									},
									{
										"source": {
											"name": "Club_Key",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 123
										}
									},
									{
										"source": {
											"name": "A_LAST_REWRITE_DATE",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 124
										}
									},
									{
										"source": {
											"name": "A_LAST_RENEWAL_DATE",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 125
										}
									},
									{
										"source": {
											"name": "M_ABC_STATUS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 126
										}
									},
									{
										"source": {
											"name": "M_STATUS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 127
										}
									},
									{
										"source": {
											"name": "M_ID_DERIVED",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 128
										}
									},
									{
										"source": {
											"name": "HASHKEY",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 129
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SNOW_FLATFILE_DIMMEMBER",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SNOWFLAKE_EXTRACT_POOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T20:22:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_SNOWFLAKE_Group_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SNOWFLAKE_DIMCATALOGUEITEM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMCATALOGUEITEM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate1').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate1').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SNOWFLAKE_DIMCHECKINALERT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMCHECKINALERT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate2').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate2').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SNOWFLAKE_DIMMEMBERPAYMENTFREQUENCYCODELKUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMMEMBERPAYMENTFREQUENCYCODELKUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate3').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate3').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SNOWFLAKE_DIMMEMBERTYPETOLKUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMMEMBERTYPETOLKUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate4').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate4').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SNOWFLAKE_DIMPROFITCENTER",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMPROFITCENTER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate5').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate5').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_CATALOG_ITEM"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_CHECKIN_ALERT"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_MEMBER_PAYMENT_FREQUENCY_CODE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_MEMBER_TYPE_TO_LKUP"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_PROFIT_CENTER"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update ETLByTable1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMCATALOGUEITEM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate1').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_CATALOG_ITEM",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update ETLByTable2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMCHECKINALERT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate2').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_CHECKIN_ALERT",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update ETLByTable3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMMEMBERPAYMENTFREQUENCYCODELKUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate3').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_MEMBER_PAYMENT_FREQUENCY_CODE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update ETLByTable4",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMMEMBERTYPETOLKUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate4').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_MEMBER_TYPE_TO_LKUP",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update ETLByTable5",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMPROFITCENTER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate5').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_PROFIT_CENTER",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SNOWFLAKE_DIMADDTYPE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMADDTYPE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate6').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate6').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_ADD_TYPE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update ETLByTable6",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMADDTYPE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate6').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_ADD_TYPE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetRangeDate7",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_AMENITY"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SNOWFLAKE_DIMAMENITY",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate7",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMAMENITY",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate7').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate7').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Update ETLByTable7",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMAMENITY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate7').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_AMENITY",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SNOWFLAKE_DIMPAYMENTCODE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMPAYMENTCODE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate8').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate8').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate8",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_PAYMENT_CODE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update ETLByTable8",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMPAYMENTCODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate8').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_PAYMENT_CODE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetRangeDate9",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_STATUS_CODE_ACTION_TYPE_LKUP"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SNOWFLAKE_DIMSTATUSCODEACTIONTYPELKUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMSTATUSCODEACTIONTYPELKUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate9').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate9').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Update ETLByTable9",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMSTATUSCODEACTIONTYPELKUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate9').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_STATUS_CODE_ACTION_TYPE_LKUP",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SNOWFLAKE_DIMCLUB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate10",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMCLUB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate10').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate10').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate10",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIMCLUB"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update ETLByTable10",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMCLUB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate10').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIMCLUB",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetRangeDate11",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_STATUS_CODE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update ETLByTable11",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMSTATUSCODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate11').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_STATUS_CODE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SNOWFLAKE_DIMSTATUSCODE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate11",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMSTATUSCODE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate11').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate11').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SNOWFLAKE_EXTRACT_POOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T20:22:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_SNOWFLAKE_Group_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetRangeDate12",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_SALES_PERSON"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SNOWFLAKE_DIMSALESPERSON",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate12",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMSALESPERSON",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate12').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate12').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Update ETLByTable12",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMSALESPERSON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate12').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_SALES_PERSON",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetRangeDate13",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "Dim_Status_Code_To_LKUP"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SNOWFLAKE_DimStatusCodeToLKUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate13",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DimStatusCodeToLKUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate13').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate13').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Update ETLByTable13",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DimStatusCodeToLKUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate13').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "Dim_Status_Code_To_LKUP",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SNOWFLAKE_DIMMEMBERTYPE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate14",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMMEMBERTYPE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate14').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate14').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate14",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_MEMBER_TYPE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update ETLByTable14",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMMEMBERTYPE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate14').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_MEMBER_TYPE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SNOWFLAKE_DIMOFFER",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate15",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMOFFER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate15').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate15').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate15",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_OFFER"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update ETLByTable15",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMOFFER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate15').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_OFFER",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					},
					{
						"name": "SNOWFLAKE_DIMMEMBER",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate16",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SNOWFLAKE_DIMMEMBER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate16').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate16').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate16",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Wait1_copy1",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_Snowflake]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "SNOWFLAKE"
									},
									"StgTable": {
										"type": "String",
										"value": "DIM_MEMBER"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update ETLByTable16",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SNOWFLAKE_DIMMEMBER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[abcpi].[ETLByTable_Snowflake_Merge]",
							"storedProcedureParameters": {
								"datefield": {
									"value": {
										"value": "@activity('GetRangeDate16').output.firstRow.EndDt",
										"type": "Expression"
									},
									"type": "String"
								},
								"StgSchema": {
									"value": "SNOWFLAKE",
									"type": "String"
								},
								"StgTable": {
									"value": "DIM_MEMBER",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Wait1_copy1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SNOWFLAKE_EXTRACT_POOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T20:22:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SNOWFLAKE_DIMMEMBER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Accounting_Group')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetRangeDate1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "CHARGEBACK_TRANSACTION"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_CHARGEBACK_TRANSACTION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Chargeback_Transaction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate1').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate1').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "PAYMENT_TRANSACTION"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_PAYMENT_TRANSACTION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Payment_Transaction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate2').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate2').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "RETURN_TRANSACTION"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_Return_Transaction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Return_Transaction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate3').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate3').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "CLIENT_TRANSACTION_FEE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_CLIENT_TRANSACTION_FEE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Client_Transaction_Fee",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate4').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate4').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "CLIENT_SCHEDULED_FEE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_CLIENT_SCHEDULED_FEE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Client_Scheduled_Fee",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate5').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate5').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "MEMBER_TRANSACTION_FEE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_MEMBER_TRANSACTION_FEE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Member_Transaction_Fee",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate6').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate6').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ACCOUNTING_TRANSACTION_TYPE_MAPPING",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACCOUNTING_CHARGEBACK_TRANSACTION",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_Return_Transaction",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_MEMBER_TRANSACTION_FEE",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_PAYMENT_TRANSACTION",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_UNMANAGED_PAYMENT_REFUND",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_CLIENT_TRANSACTION_FEE",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_CLIENT_SCHEDULED_FEE",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_UNMANAGED_ACH_RETURN_TRANSACTIONS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_UNMANAGED_CHARGEBACKS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Transaction_Type_Mapping",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "GetRangeDate7",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "UNMANAGED_PAYMENT_REFUND"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_UNMANAGED_PAYMENT_REFUND",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate7",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Unmanaged_Payment_Refund",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate7').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate7').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate8",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "UNMANAGED_ACH_RETURN_TRANSACTION"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_UNMANAGED_ACH_RETURN_TRANSACTIONS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Unmanaged ACH_Return_Transaction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate8').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate8').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate9",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "UNMANAGED_CHARGEBACKS"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_UNMANAGED_CHARGEBACKS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Unmanaged_ChargeBacks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate9').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate9').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Accounting_Group_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACCOUNTING_CHARGEBACK_TRANSACTION_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Chargeback_Transaction_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate1').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate1').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "CHARGEBACK_TRANSACTION"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "PAYMENT_TRANSACTION"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_PAYMENT_TRANSACTION_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Payment_Transaction_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate2').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate2').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "RETURN_TRANSACTION"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_RETURN_TRANSACTION_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_Return_Transaction_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate3').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate3').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "CLIENT_TRANSACTION_FEE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_CLIENT_TRANSACTION_FEE_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_CLIENT_TRANSACTION_FEE_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate4').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate4').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "CLIENT_SCHEDULED_FEE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_CLIENT_SCHEDULED_FEE_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_CLIENT_TRANSACTION_FEE_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate5').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate5').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "MEMBER_TRANSACTION_FEE"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_MEMBER_TRANSACTION_FEE_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_CLIENT_TRANSACTION_FEE_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate6').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate6').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate7",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "UNMANAGED_PAYMENT_REFUND"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_UNMANAGED_PAYMENT_REFUND_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate7",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_UNMANAGED_PAYMENT_REFUND_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate7').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate7').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate8",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "UNMANAGED_ACH_RETURN_TRANSACTION"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_UNMANAGED_ACH_RETURN_TRANSACTIONS_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_UNMANAGED_ACH_RETURN_TRANSACTIONS_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate8').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate8').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate9",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "UNMANAGED_CHARGEBACKS"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_UNMANAGED_CHARGEBACKS_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_UNMANAGED_CHARGEBACKS_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate9').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate9').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate10",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "BUNDLED_PAYMENT"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_BUNDLED_PAYMENT_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate10",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_BUNDLED_PAYMENT_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate10').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate10').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate11",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "BUNDLED_ACH_RETURN"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_BUNDLED_ACH_RETURN_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate11",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_BUNDLED_ACH_RETURN_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate11').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate11').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate12",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "Accounting"
									},
									"StgTable": {
										"type": "String",
										"value": "BUNDLED_CHARGEBACK"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ACCOUNTING_BUNDLED_CHARGEBACK",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate12",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ACCOUNTING_BUNDLED_CHARGEBACK_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate12').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate12').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Transaction_Type_Mappings_Update_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACCOUNTING_CHARGEBACK_TRANSACTION_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_PAYMENT_TRANSACTION_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_RETURN_TRANSACTION_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_CLIENT_TRANSACTION_FEE_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_CLIENT_SCHEDULED_FEE_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_MEMBER_TRANSACTION_FEE_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_UNMANAGED_PAYMENT_REFUND_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_UNMANAGED_ACH_RETURN_TRANSACTIONS_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_UNMANAGED_CHARGEBACKS_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_BUNDLED_PAYMENT_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_BUNDLED_ACH_RETURN_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACCOUNTING_BUNDLED_CHARGEBACK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Transaction_Type_Mappings_Update_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-27T13:42:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Accounting_Pull')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Accounting Pull Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[Accounting].[GetAccountingLoadSchedule]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Accounting_Pull",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Accounting Pull Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Accounting_Pull",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"begindate": {
									"value": "@activity('Get Accounting Pull Date').output.firstRow.BeginDate",
									"type": "Expression"
								},
								"enddate": {
									"value": "@activity('Get Accounting Pull Date').output.firstRow.EndDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Update Last Run Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Accounting_Pull",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Accounting].[GetAccountingLoadSchedule]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_EDW_VW_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DW_TEST_DW_EFT_RECONCILIATION_SMRY_VW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_TEST_DW_EFT_RECONCILIATION_SMRY_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DW_TEST_DW_PF_ACTIVE_MEMBERS_SMRY_VW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Start Date_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_TEST_DW_PF_ACTIVE_MEMBERS_SMRY_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('Get Start Date_1').output.firstRow.windowStart",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DW_TEST_DW_PF_DT_CHECKIN_SERVICE_SMRY_VW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Start Date_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_TEST_DW_PF_DT_CHECKIN_SERVICE_SMRY_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('Get Start Date_2').output.firstRow.windowStart",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DW_TEST_DW_PF_GENDER_SMRY_VW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Start Date_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_TEST_DW_PF_GENDER_SMRY_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('Get Start Date_3').output.firstRow.windowStart",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DW_TEST_DW_PF_MEMERSHIP_TYPE_SMRY_VW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Start Date_4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_TEST_DW_PF_MEMERSHIP_TYPE_SMRY_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('Get Start Date_4').output.firstRow.windowStart",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DW_TEST_DW_PF_PAYMODE_SMRY_VW1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Start Date_5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_TEST_DW_PF_PAYMODE_SMRY_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('Get Start Date_5').output.firstRow.windowStart",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DW_TEST_PF_MSS_DD_SMRY_VW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_TEST_PF_MSS_DD_SMRY_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Get Start Date_1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select ISNULL(max(ETL_DATE_KEY),20230101) as WindowStart\nfrom [DW].[PF_ACTIVE_MEMBERS_SMRY] t1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Start Date_2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select ISNULL(max(ETL_DATE_KEY),20230101) as WindowStart\nfrom [DW].[PF_DT_CHECKIN_SERVICE_SMRY] t1\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Start Date_3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select ISNULL(max(ETL_DATE_KEY),20230101) as WindowStart\nfrom [DW].[PF_GENDER_SMRY] t1\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Start Date_4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select ISNULL(max(ETL_DATE_KEY),20230101) as WindowStart\nfrom [DW].[PF_MEMBERSHIP_TYPE_SMRY] t1\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Start Date_5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select ISNULL(max(ETL_DATE_KEY),20230101) as WindowStart\nfrom [DW].[PF_PAYMODE_SMRY] t1\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "DW_TEST_DW_PF_ANNUAL_PROJECTION_SMRY_VW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Start Date_6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_TEST_DW_PF_ANNUAL_PROJECTION_SMRY_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('Get Start Date_6').output.firstRow.windowStart",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get Start Date_6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select ISNULL(max(ETL_DATE_KEY),20230101) as WindowStart\nfrom [DW].[PF_ANNUAL_PROJECTION_SMRY] t1\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DW_SQL_POOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_RCM_To_EDW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dw_drdr_rcm_billing_ded_reimb_vw",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_drdr_rcm_billing_ded_reimb_vw_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_RCM_To_Oracle_EDW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dw_dim_adjustment_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_adjustment_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_chargeback_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_chargeback_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_deposit_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_deposit_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_fee_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_fee_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_invoice_number_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_invoice_number_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_invoice_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_invoice_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_item_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_item_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_payment_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_payment_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_payor_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_payor_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_refund_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_refund_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_return_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_return_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_settlement_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_settlement_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_source_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_source_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_transaction_type_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_transaction_type_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_variance_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_variance_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_DimAgreement_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_DimAgreement_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dimclub_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dimclub_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dimmember_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dimmember_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dimOrganizations_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dimOrganizations_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_DimProfitCenter_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_DimProfitCenter_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_adjustment_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_adjustment_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_chargeback_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_chargeback_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_client_account_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_client_account_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_deposit_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_deposit_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_expiring_subscription_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_expiring_subscription_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_fee_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_fee_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_invoice_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_invoice_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_payment_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_payment_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_payor_account_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_payor_account_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_projected_invoice_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_projected_invoice_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_refund_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_refund_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_return_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_return_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_settlement_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_settlement_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_statement_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_statement_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_subscription_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_subscription_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_fact_variance_trans_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_fact_variance_trans_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "dw_dim_subscription_to_EDW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dw_dim_subscription_to_EDW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:59Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Source_Iseries_CIFIL_CWFIL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is to get these 2 tables loaded more frequently during the day. They are both used in DimAgreement for the DraftAmt and Isries_Entity_type fields",
				"activities": [
					{
						"name": "Load CWFIL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Stage Club ISeries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CWFIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Stage Club ISeries",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DW].[Stage_Club_Iseries_Load]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetRangeDate5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Load Stage Club ISeries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CIFIL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CIFIL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CIFIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate5').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate5').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate19",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Load Stage Club ISeries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_ENTTXNFIL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_bpdext_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_ENTTXNFIL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate19",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_ENTTXNFIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate19').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate19').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate13",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Load Stage Club ISeries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_COST_CTRS"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_COST_CTRS",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate13",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_COST_CTRS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate13').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate13').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Source_Iseries_CIFIL_CWFIL_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is to get these 2 tables loaded more frequently during the day. They are both used in DimAgreement for the DraftAmt and Isries_Entity_type fields",
				"activities": [
					{
						"name": "Load CWFIL_Hist_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Stage Club ISeries_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CWFIL_Hist_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Stage Club ISeries_SQLPOOL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DW].[Stage_Club_Iseries_Load]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ABC400FIL_CIFIL_Hist_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CIFIL_Hist_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate5').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate5').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate19",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Load Stage Club ISeries_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYYYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_ENTTXNFIL"
									},
									"sourcesystem   ": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_ENTTXNFIL_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate19",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_ENTTXNFIL_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate19').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate19').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ABC400FIL_COST_CTRS_SQLPOOL",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate13",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_COST_CTRS_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate13').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate13').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate13",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Load Stage Club ISeries_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYYYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_COST_CTRS"
									},
									"SourceSystem": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Load Stage Club ISeries_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CIFIL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Iseries_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Source_Iseries_FactColl_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ABC400FIL_BPDPMTDLY_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPDPMTDLY_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate1').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate1').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPDPMTDLY"
									},
									"sourcesystem   ": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "FactCollectionByAgeUpdateADF_SQLPOOL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ABC400FIL_BPDPMTDLY_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dimfact].[FactCollectionByAgeUpdateADF]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetRangeDate2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FactCollectionByAgeUpdateADF_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CTFILCCTR"
									},
									"sourcesystem   ": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CTFILCCTR_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CTFILCCTR_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate2').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate2').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Iseries_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Source_Iseries_Group1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ABC400FIL_CBFIL",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CBFIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "GetRangeDate2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ABC400FIL_CBFIL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CNFIL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CNFIL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CNFIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate2').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate2').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ABC400FIL_CBFIL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPSHDT"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPSHDT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPSHDT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate3').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate3').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ABC400FIL_CBFIL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CIFIL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CIFIL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate5",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CIFIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate5').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate5').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ABC400FIL_CBFIL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPMTDFTF"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPMTDFTF",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate7",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPMTDFTF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate7').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate7').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate8",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ABC400FIL_CBFIL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CWEXT"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_ABCPI_STG_CWEXT_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CWEXT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CWEXT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate8').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate8').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate9",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ABC400FIL_CBFIL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CRFIL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_ABCPI_STG_CWEXT_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CRFIL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CRFIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate9').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate9').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate10",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ABC400FIL_CBFIL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_INVSCDFIL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_invscdfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_INVSCDFIL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate10",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_INVSCDFIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate10').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate10').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate10a",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ABC400FIL_CBFIL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPSMSTDTL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_bpsmstdtl_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPSMSTDTL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate10a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPSMSTDTL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate10a').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate10a').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Source_Iseries_Group1_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is to get these 2 tables loaded more frequently during the day. They are both used in DimAgreement for the DraftAmt and Isries_Entity_type fields",
				"activities": [
					{
						"name": "GetRangeDate1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CTFIL"
									},
									"sourcesystem   ": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYYYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CTFILEXT"
									},
									"SourceSystem": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CTFIL_Hist_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CTFIL_Hist_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate1').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate1').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ABC400FIL_CTFILEXT_Hist_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CTFILEXT_Hist_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate6').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate6').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ABC400FIL_CNFIL_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CNFIL_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate2').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate2').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CNFIL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate8",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYYYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CWEXT"
									},
									"SourceSystem": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CWEXT_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CWEXT_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate8').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate8').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate8a",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYYYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CP012WKF"
									},
									"SourceSystem": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CP012WKF_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate8a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CP012WKF_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate8a').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate8a').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ABC400FIL_CDFIL_Hist_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CDFIL_HIST_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CDFIL"
									},
									"SourceSystem": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPSHDT"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPSHDT_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPSHDT_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate3').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate3').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate7",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPMTDFTF"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPMTDFTF_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate7",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPMTDFTF_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate7').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate7').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate9",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CRFIL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_CRFIL_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CRFIL_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate9').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate9').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate10",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYYYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_INVSCDFIL"
									},
									"SourceSystem": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_INVSCDFIL_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate10",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_INVSCDFIL_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate10').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate10').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate10a",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYYYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPSMSTDTL"
									},
									"SourceSystem": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPSMSTDTL_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate10a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPSMSTDTL_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate10a').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate10a').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ABC400FIL_CLTMTCPF_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate10b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CLTMTCPF_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate10b').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate10b').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate10b",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYYYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CLTMTCPF"
									},
									"SourceSystem": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Iseries_SQLPOOL/Load_Source_Iseries_Group1_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-15T14:53:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Source_Iseries_Group2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetRangeDate11",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPDPMTDLY"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_ABCPI_STG_CWEXT_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPDPMTDLY",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Wait 1 hour",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPDPMTDLY",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate11').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate11').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate12",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPDPMT"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPDPMT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate12",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPDPMT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate12').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate12').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ABC400FIL_CTFILCCTR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate14",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CTFILCCTR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate14').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate14').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate14",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_CTFILCCTR"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_TFRATBL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate15",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_TFRATBL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate15').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate15').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate15",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_TFRATBL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_ACFILEXT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate16",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_ACFILEXT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate16').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate16').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate16",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_ACFILEXT"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPSMST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate17",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPSMST",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate17').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate17').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate17",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPSMST"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_cbfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPDEXT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate18",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPDEXT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate18').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate18').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate18",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPDEXT"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_bpdext_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Wait 1 hour",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetRangeDate11",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(equals(utcNow('HH'),'07'),equals(utcNow('HH'),'08'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Wait 1 hour",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 3600
									}
								}
							]
						}
					},
					{
						"name": "GetRangeDate20",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_RFCFILNEW"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_rfcfilnew_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If run 16th and 17th of every month",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetRangeDate20",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(equals(utcNow('DD'),'16'),equals(utcNow('DD'),'17'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ABC400FIL_RFCFILNEW",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ABC400FIL_RFCFILNEW",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@activity('GetRangeDate20').output.firstRow.StartDt",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@activity('GetRangeDate20').output.firstRow.EndDt",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GetRangeDate21",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_PJTFIL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_pjtfil_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_PJTFIL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate21",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_PJTFIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate21').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate21').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate23A",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select 1\nfrom dbo.dim_Date t1\nwhere CalendarDate = cast (getdate() as date)\nand (DayOfMonth in  (15,16,1) or DateMonthEnd =FORMAT (getdate(), 'yyyy-MM-dd'))\nunion\nselect 0\nfrom dbo.dim_Date t1\nwhere CalendarDate = cast (getdate() as date)\nand (DayOfMonth not in  (15,16,1) and DateMonthEnd <>FORMAT (getdate(), 'yyyy-MM-dd'))\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_bpdprj_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If run 1st and 15th and END of Month",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetRangeDate23A",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetRangeDate23A').output, 1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "GetRangeDate23",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
											"storedProcedureParameters": {
												"StgSchema": {
													"type": "String",
													"value": "StgIseries"
												},
												"StgTable": {
													"type": "String",
													"value": "ABC400FIL_BPDPRJ"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SNK_StgIseries_ABC400FIL_bpdprj_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "ABC400FIL_BPDPRJ",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "GetRangeDate23",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ABC400FIL_BPDPRJ",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@activity('GetRangeDate23').output.firstRow.StartDt",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@activity('GetRangeDate23').output.firstRow.EndDt",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GetRangeDate24A",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select 1\nfrom dbo.dim_Date t1\nwhere CalendarDate = cast (getdate() as date)\nand (DayOfMonth = 1 or DateMonthEnd =FORMAT (getdate(), 'yyyy-MM-dd'))\nunion\nselect 0\nfrom dbo.dim_Date t1\nwhere CalendarDate = cast (getdate() as date)\nand (DayOfMonth <> 1 and DateMonthEnd <>FORMAT (getdate(), 'yyyy-MM-dd'))",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_bpdprj_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If run 1st and END of Month",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetRangeDate24A",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetRangeDate24A').output, 1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "GetRangeDate24",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
											"storedProcedureParameters": {
												"StgSchema": {
													"type": "String",
													"value": "StgIseries"
												},
												"StgTable": {
													"type": "String",
													"value": "ABC400FIL_BPDAV2CLDF"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SNK_StgIseries_ABC400FIL_BPDAV2CLDF_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "ABC400FIL_BPDAV2CLDF",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "GetRangeDate24",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ABC400FIL_BPDAV2CLDF",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@activity('GetRangeDate24').output.firstRow.StartDt",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@activity('GetRangeDate24').output.firstRow.EndDt",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GetRangeDate25",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "CRS_JE_REPORT_PREFS_TB"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_CRS_JE_REPORT_PREFS_TB_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CRS_JE_REPORT_PREFS_TB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate25",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CRS_JE_REPORT_PREFS_TB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate25').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate25').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate26",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "CRS_JE_GLCODE_PREFS_TB"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_CRS_JE_GLCODE_PREFS_TB_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CRS_JE_GLCODE_PREFS_TB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate26",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CRS_JE_GLCODE_PREFS_TB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate26').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate26').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ABC400FIL_CTFILCCTR_ANYTIME",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ABC400FIL_CTFILCCTR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CTFILCCTR_ANYTIME",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate14').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate14').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate22",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPSMSTDTLX"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgIseries_ABC400FIL_bpsmstdtlx_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ABC400FIL_BPSMSTDTLX",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate22",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPSMSTDTLX",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate22').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate22').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Source_Iseries_Group2_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ABC400FIL_TFRATBL_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate15",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_TFRATBL_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate15').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate15').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ABC400FIL_ACFILEXT_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate16",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_ACFILEXT_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate16').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate16').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ABC400FIL_BPSMST_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate17",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_BPSMST_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate17').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate17').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "If run 16th and 17th of every month",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetRangeDate20",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(equals(utcNow('DD'),'16'),equals(utcNow('DD'),'17'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ABC400FIL_RFCFILNEW_SQLPOOL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ABC400FIL_RFCFILNEW_SQLPOOL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@activity('GetRangeDate20').output.firstRow.StartDt",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@activity('GetRangeDate20').output.firstRow.EndDt",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ABC400FIL_PJTFIL_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate21",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_PJTFIL_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate21').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate21').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "If run 1st and 15th and END of Month",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "isMidOfMonth",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('isMidOfMonth').output, 1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ABC400FIL_BPDPRJ_SQLPOOL",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "GetRangeDate_BPDPRJ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ABC400FIL_BPDPRJ_SQLPOOL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@activity('GetRangeDate_BPDPRJ').output.firstRow.StartDt",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@activity('GetRangeDate_BPDPRJ').output.firstRow.EndDt",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "GetRangeDate_BPDPRJ",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYMMDD]",
											"storedProcedureParameters": {
												"StgSchema": {
													"type": "String",
													"value": "StgIseries"
												},
												"StgTable": {
													"type": "String",
													"value": "ABC400FIL_BPDPRJ"
												},
												"SourceSystem": {
													"type": "String",
													"value": null
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSynapseAnalyticsDB",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "ABC400FIL_BPDPMT_SQLPOOL",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "GetRangeDate_BPDPMT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ABC400FIL_BPDPMT_SQLPOOL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@activity('GetRangeDate_BPDPMT').output.firstRow.StartDt",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@activity('GetRangeDate_BPDPMT').output.firstRow.EndDt",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "GetRangeDate_BPDPMT",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYMMDD]",
											"storedProcedureParameters": {
												"StgSchema": {
													"type": "String",
													"value": "StgIseries"
												},
												"StgTable": {
													"type": "String",
													"value": "ABC400FIL_BPDPMT"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSynapseAnalyticsDB",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "ABC400FIL_BPDEXT_SQLPOOL",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "GetRangeDate_BPDEXT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ABC400FIL_BPDEXT_SQLPOOL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@activity('GetRangeDate_BPDEXT').output.firstRow.StartDt",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@activity('GetRangeDate_BPDEXT').output.firstRow.EndDt",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "GetRangeDate_BPDEXT",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYMMDD]",
											"storedProcedureParameters": {
												"StgSchema": {
													"type": "String",
													"value": "StgIseries"
												},
												"StgTable": {
													"type": "String",
													"value": "ABC400FIL_BPDEXT"
												},
												"SourceSystem": {
													"type": "String",
													"value": null
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSynapseAnalyticsDB",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "ABC400FIL_BPDTAX_SQLPOOL",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "GetRangeDate_BPDTAX",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ABC400FIL_BPDTAX_SQLPOOL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@activity('GetRangeDate_BPDTAX').output.firstRow.StartDt",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@activity('GetRangeDate_BPDTAX').output.firstRow.EndDt",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "GetRangeDate_BPDTAX",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYMMDD]",
											"storedProcedureParameters": {
												"StgSchema": {
													"type": "String",
													"value": "StgIseries"
												},
												"StgTable": {
													"type": "String",
													"value": "ABC400FIL_BPDEXT"
												},
												"SourceSystem": {
													"type": "String",
													"value": null
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSynapseAnalyticsDB",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "CRS_JE_REPORT_PREFS_TB_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate25",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CRS_JE_REPORT_PREFS_TB_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate25').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate25').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CRS_JE_GLCODE_PREFS_TB_SQLPOOL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetRangeDate26",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ABC400FIL_CRS_JE_GLCODE_PREFS_TB_SQLPOOL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@activity('GetRangeDate26').output.firstRow.StartDt",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@activity('GetRangeDate26').output.firstRow.EndDt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetRangeDate17",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_BPSMST"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate15",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_TFRATBL"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate25",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "CRS_JE_REPORT_PREFS_TB"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate26",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "CRS_JE_GLCODE_PREFS_TB"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate16",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_ACFILEXT"
									},
									"SourceSystem": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate21",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_PJTFIL"
									},
									"SourceSystem": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetRangeDate20",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetRangeDate_YYMMDD]",
								"storedProcedureParameters": {
									"StgSchema": {
										"type": "String",
										"value": "StgIseries"
									},
									"StgTable": {
										"type": "String",
										"value": "ABC400FIL_RFCFILNEW"
									},
									"SourceSystem": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "isMidOfMonth",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select 1 \n\t\tfrom dbo.dim_Date t1\n\t\twhere CalendarDate = cast (getdate() as date)\n\t\tand (DayOfMonth in  (15,16,17))\n\t\tUNION \n\t\tselect 0 \n\t\tfrom dbo.dim_Date t1\n\t\twhere CalendarDate = cast (getdate() as date)\n\t\tand (DayOfMonth not in  (15,16,17) )",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Iseries_SQLPOOL/Load_Source_Iseries_Group2_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T15:45:48Z"
			},
			"dependsOn": []
		}
	]
}