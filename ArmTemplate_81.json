{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PlanetFitnessDF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RCM_CATALOG_Item_Category')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_CATALOG_ITEM_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Catalog_Item_Category_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.CATALOG_ITEM_CATEGORY_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_CATALOG_ITEM_CATEGORY_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_CATALOG_ITEM_CATEGORY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "`item_category`"
							},
							{
								"name": "Destination",
								"value": "StgRCM.CATALOG_ITEM_CATEGORY_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \t\n\tLOWER(CONCAT (\n\t\t\tSUBSTR(HEX(org_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 21)\n\t\t\t)) AS org_id\n\t,LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(loc_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 21)\n\t\t\t)) AS loc_id\n\t\n\t,LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(itca_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 21)\n\t\t\t)) AS itca_id\n\t,itca_created\n\t,itca_modified\n\t,itca_name\n\t,itca_description\n\t,itca_is_active\n\t,itca_type\n\t,itca_icon\nFROM catalog.item_category\nWHERE itca_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND itca_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "itca_id",
											"type": "String"
										},
										"sink": {
											"name": "itca_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "itca_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "itca_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "itca_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "itca_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "itca_name",
											"type": "String"
										},
										"sink": {
											"name": "itca_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "itca_description",
											"type": "String"
										},
										"sink": {
											"name": "itca_description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "itca_is_active",
											"type": "Boolean"
										},
										"sink": {
											"name": "itca_is_active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "itca_type",
											"type": "String"
										},
										"sink": {
											"name": "itca_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "itca_icon",
											"type": "String"
										},
										"sink": {
											"name": "itca_icon",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_CATALOG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_CATALOG_ITEM_CATEGORY_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_CATALOG_Item_Category_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_CATALOG_ITEM_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Catalog_Item_Category_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [StgRCM].[CATALOG_ITEM_CATEGORY_INCR]\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_CATALOG_ITEM_CATEGORY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \t\n\tLOWER(CONCAT (\n\t\t\tSUBSTR(HEX(org_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 21)\n\t\t\t)) AS org_id\n\t,LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(loc_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 21)\n\t\t\t)) AS loc_id\n\t\n\t,LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(itca_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 21)\n\t\t\t)) AS itca_id\n\t,itca_created\n\t,itca_modified\n\t,itca_name\n\t,itca_description\n\t,itca_is_active\n\t,itca_type\n\t,itca_icon\n\t,itca_origin\nFROM catalog.item_category\nWHERE itca_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND itca_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_id",
											"type": "String"
										},
										"sink": {
											"name": "itca_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "itca_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "itca_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "itca_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "itca_name",
											"type": "String"
										},
										"sink": {
											"name": "itca_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_description",
											"type": "String"
										},
										"sink": {
											"name": "itca_description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_is_active",
											"type": "Boolean"
										},
										"sink": {
											"name": "itca_is_active",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "itca_type",
											"type": "String"
										},
										"sink": {
											"name": "itca_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_icon",
											"type": "String"
										},
										"sink": {
											"name": "itca_icon",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_origin",
											"type": "String"
										},
										"sink": {
											"name": "itca_origin",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_CATALOG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_Catalog_Item_Category_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_CATALOG_Item_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_CATALOG_ITEM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Catalog_Item_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.CATALOG_ITEM_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_CATALOG_ITEM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\t\n    LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(org_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 21)\n\t\t\t)) AS org_id,\n\t\t\t\n    LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(loc_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 21)\n\t\t\t)) AS loc_id,\t\t\n\t\t\t\n    LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(it_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(it_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(it_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(it_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(it_id), 21)\n\t\t\t)) AS it_id,\nit_version,\nit_active,\nit_created,\nit_modified,\nit_name,\nit_type,\nit_quantity,\nit_unlimited,\nit_expiration_start_type,\nit_expiration_time,\nit_expiration_unit_type,\ncur_id,\n     LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(itca_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 21)\n\t\t\t)) AS itca_id,\n\nit_description,\nit_is_actual,\nit_default_due_date,\nit_is_lock,\nit_price,\nis_tax_included,\nit_frequency,\nit_image_path,\nit_barcode,\nit_origin,\nit_sku,\nit_upc\nFROM catalog.item\nWHERE it_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND it_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_id",
											"type": "String"
										},
										"sink": {
											"name": "it_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_version",
											"type": "Int64"
										},
										"sink": {
											"name": "it_version",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "it_active",
											"type": "Boolean"
										},
										"sink": {
											"name": "it_active",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "it_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "it_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "it_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "it_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "it_name",
											"type": "String"
										},
										"sink": {
											"name": "it_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_type",
											"type": "String"
										},
										"sink": {
											"name": "it_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_quantity",
											"type": "Int32"
										},
										"sink": {
											"name": "it_quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "it_unlimited",
											"type": "Boolean"
										},
										"sink": {
											"name": "it_unlimited",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "it_expiration_start_type",
											"type": "String"
										},
										"sink": {
											"name": "it_expiration_start_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_expiration_time",
											"type": "Int32"
										},
										"sink": {
											"name": "it_expiration_time",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "it_expiration_unit_type",
											"type": "String"
										},
										"sink": {
											"name": "it_expiration_unit_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cur_id",
											"type": "String"
										},
										"sink": {
											"name": "cur_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_id",
											"type": "String"
										},
										"sink": {
											"name": "itca_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_description",
											"type": "String"
										},
										"sink": {
											"name": "it_description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_is_actual",
											"type": "Boolean"
										},
										"sink": {
											"name": "it_is_actual",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "it_default_due_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "it_default_due_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "it_is_lock",
											"type": "Boolean"
										},
										"sink": {
											"name": "it_is_lock",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "it_price",
											"type": "Decimal"
										},
										"sink": {
											"name": "it_price",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "is_tax_included",
											"type": "Boolean"
										},
										"sink": {
											"name": "is_tax_included",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "it_frequency",
											"type": "String"
										},
										"sink": {
											"name": "it_frequency",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_image_path",
											"type": "String"
										},
										"sink": {
											"name": "it_image_path",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_barcode",
											"type": "String"
										},
										"sink": {
											"name": "it_barcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_origin",
											"type": "String"
										},
										"sink": {
											"name": "it_origin",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_sku",
											"type": "String"
										},
										"sink": {
											"name": "it_sku",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_upc",
											"type": "String"
										},
										"sink": {
											"name": "it_upc",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_CATALOG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_Catalog_Item_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_COLLECTION_Agency')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_COLLECTION_AGENCY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Agency_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_AGENCY_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_HARD_COLLECTION_AGENCY_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_COLLECTION_AGENCY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.HARD_COLLECTION_AGENCY_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n\t\tLOWER(CONCAT (SUBSTR(HEX(ag_id), 1, 8),'-',SUBSTR(HEX(ag_id), 9, 4),'-',SUBSTR(HEX(ag_id), 13, 4),'-',SUBSTR(HEX(ag_id), 17, 4),'-',SUBSTR(HEX(ag_id), 21))) as ag_id\n\t\t,ag_address2\n\t\t,ag_agency_name\n\t\t,ag_city\n\t\t,ag_contact_email\n\t\t,ag_contact_name\n\t\t,ag_contact_phone\n\t\t,ag_contact_phone_extension\n\t\t,ag_created\n\t\t,ag_modified\n\t\t,ag_postal_code\n\t\t,ag_send_method\n\t\t,ag_csv_delimiter\n\t\t,ag_address1\n\t\t,ag_province_code\n\t\t,ag_province_name\n\t\t,ag_country_code\n\t\t,ag_contact_phone_country_code\n\t\t,tzl_id\nFROM hard_collection.agency\nWHERE ag_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND ag_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ag_id",
											"type": "String"
										},
										"sink": {
											"name": "ag_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_address2",
											"type": "String"
										},
										"sink": {
											"name": "ag_address2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_agency_name",
											"type": "String"
										},
										"sink": {
											"name": "ag_agency_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_city",
											"type": "String"
										},
										"sink": {
											"name": "ag_city",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_contact_email",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_contact_name",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_contact_phone",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_contact_phone_extension",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_phone_extension",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ag_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ag_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ag_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ag_postal_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_postal_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_send_method",
											"type": "String"
										},
										"sink": {
											"name": "ag_send_method",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_csv_delimiter",
											"type": "String"
										},
										"sink": {
											"name": "ag_csv_delimiter",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_address1",
											"type": "String"
										},
										"sink": {
											"name": "ag_address1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_province_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_province_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_province_name",
											"type": "String"
										},
										"sink": {
											"name": "ag_province_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_country_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_country_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ag_contact_phone_country_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_phone_country_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tzl_id",
											"type": "String"
										},
										"sink": {
											"name": "tzl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_HARD_COLLECTION_AGENCY_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_COLLECTION_Billing_Account')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_COLLECTION_BILLING_ACCOUNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Billing_Account_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_BILLING_ACCOUNT_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_HARD_COLLECTION_BILLING_ACCOUNT_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_COLLECTION_BILLING_ACCOUNT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.HARD_COLLECTION_BILLING_ACCOUNT_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT LOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id ,\n       LOWER(CONCAT (SUBSTR(HEX(agrm_id), 1, 8),'-',SUBSTR(HEX(agrm_id), 9, 4),'-',SUBSTR(HEX(agrm_id), 13, 4),'-',SUBSTR(HEX(agrm_id), 17, 4),'-',SUBSTR(HEX(agrm_id), 21))) AS agrm_id,\n\t   LOWER(CONCAT (SUBSTR(HEX(m_id), 1, 8),'-',SUBSTR(HEX(m_id), 9, 4),'-',SUBSTR(HEX(m_id), 13, 4),'-',SUBSTR(HEX(m_id), 17, 4),'-',SUBSTR(HEX(m_id), 21))) AS m_id, \n\t   agrm_number,\n\t   LOWER(CONCAT (SUBSTR(HEX(pcp_id), 1, 8),'-',SUBSTR(HEX(pcp_id), 9, 4),'-',SUBSTR(HEX(pcp_id), 13, 4),'-',SUBSTR(HEX(pcp_id), 17, 4),'-',SUBSTR(HEX(pcp_id), 21))) AS pcp_id,\n\t   ba_payload,\nba_created,\nba_modified,\nagrm_amount_due,\nagrm_future_value,\nba_sending_status,\nba_late_fees_amount,\nba_service_fees_amount,\nba_last_transaction_amount,\nba_last_transaction_posted_date\n\t   \t\nFROM hard_collection.billing_account\nWHERE  ba_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND    ba_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\n\n\n\n\n\n\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "agrm_id",
											"type": "String"
										},
										"sink": {
											"name": "agrm_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "m_id",
											"type": "String"
										},
										"sink": {
											"name": "m_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "agrm_number",
											"type": "String"
										},
										"sink": {
											"name": "agrm_number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "pcp_id",
											"type": "String"
										},
										"sink": {
											"name": "pcp_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ba_payload",
											"type": "String"
										},
										"sink": {
											"name": "ba_payload",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ba_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ba_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ba_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ba_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "agrm_amount_due",
											"type": "Decimal"
										},
										"sink": {
											"name": "agrm_amount_due",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "agrm_future_value",
											"type": "Decimal"
										},
										"sink": {
											"name": "agrm_future_value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ba_sending_status",
											"type": "String"
										},
										"sink": {
											"name": "ba_sending_status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ba_late_fees_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ba_late_fees_amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ba_service_fees_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ba_service_fees_amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ba_last_transaction_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ba_last_transaction_amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ba_last_transaction_posted_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "ba_last_transaction_posted_date",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_HARD_COLLECTION_BILLING_ACCOUNT_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_COLLECTION_Collection_State')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_COLLECTION_COLLECTION_STATE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Collection_State_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_COLLECTION_STATE_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_HARD_COLLECTION_COLLECTION_STATE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_COLLECTION_COLLECTION_STATE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "`collection_state`"
							},
							{
								"name": "Destination",
								"value": "StgRCM.HARD_COLLECTION_COLLECTION_STATE_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT LOWER(CONCAT (SUBSTR(HEX(cost_id), 1, 8),'-',SUBSTR(HEX(cost_id), 9, 4),'-',SUBSTR(HEX(cost_id), 13, 4),'-',SUBSTR(HEX(cost_id), 17, 4),'-',SUBSTR(HEX(cost_id), 21))) AS cost_id,\n\t   LOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id,\n       LOWER(CONCAT (SUBSTR(HEX(pcp_id), 1, 8),'-',SUBSTR(HEX(pcp_id), 9, 4),'-',SUBSTR(HEX(pcp_id), 13, 4),'-',SUBSTR(HEX(pcp_id), 17, 4),'-',SUBSTR(HEX(pcp_id), 21))) AS pcp_id, \n\t\tcost_status,\n\t\tcost_rfc_date,\n\t\tcost_past_due_since,\n\t\tcost_total_amount_due,\n\t\tcost_event_date_time,\n\t\tLOWER(CONCAT (SUBSTR(HEX(cost_reference_id), 1, 8),'-',SUBSTR(HEX(cost_reference_id), 9, 4),'-',SUBSTR(HEX(cost_reference_id), 13, 4),'-',SUBSTR(HEX(cost_reference_id), 17, 4),'-',SUBSTR(HEX(cost_reference_id), 21))) AS cost_reference_id, \n\t\tcost_sent_to_agency,\n\t\tcost_created,\n\t\tcost_modified,\n\t\tcost_payload,\n\t\tLOWER(CONCAT (SUBSTR(HEX(of_id), 1, 8),'-',SUBSTR(HEX(of_id), 9, 4),'-',SUBSTR(HEX(of_id), 13, 4),'-',SUBSTR(HEX(of_id), 17, 4),'-',SUBSTR(HEX(of_id), 21))) AS of_id,\n\t\tLOWER(CONCAT (SUBSTR(HEX(agrm_id), 1, 8),'-',SUBSTR(HEX(agrm_id), 9, 4),'-',SUBSTR(HEX(agrm_id), 13, 4),'-',SUBSTR(HEX(agrm_id), 17, 4),'-',SUBSTR(HEX(agrm_id), 21))) AS agrm_id\nFROM hard_collection.collection_state\nWHERE cost_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND cost_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "cost_id",
											"type": "String"
										},
										"sink": {
											"name": "cost_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "pcp_id",
											"type": "String"
										},
										"sink": {
											"name": "pcp_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "cost_status",
											"type": "String"
										},
										"sink": {
											"name": "cost_status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "cost_rfc_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_rfc_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "cost_past_due_since",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_past_due_since",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "cost_total_amount_due",
											"type": "Decimal"
										},
										"sink": {
											"name": "cost_total_amount_due",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "cost_event_date_time",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_event_date_time",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "cost_reference_id",
											"type": "String"
										},
										"sink": {
											"name": "cost_reference_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "cost_sent_to_agency",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_sent_to_agency",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "cost_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "cost_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "cost_payload",
											"type": "String"
										},
										"sink": {
											"name": "cost_payload",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "of_id",
											"type": "String"
										},
										"sink": {
											"name": "of_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "agrm_id",
											"type": "String"
										},
										"sink": {
											"name": "agrm_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_HARD_COLLECTION_COLLECTION_STATE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_COLLECTION_Location')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_COLLECTION_location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Location_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_LOCATION_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_HARD_COLLECTION_LOCATION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_COLLECTION_location",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.HARD_COLLECTION_LOCATION_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n   LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(loc_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 21)\n\t\t\t)) AS loc_id,\t\n    LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(org_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 21)\n\t\t\t)) AS org_id,\n\t\t\t\nloc_contact_name,\nloc_created,\nloc_email,\nloc_email_2,\nloc_modified,\nloc_phone,\nloc_send_to_collections,\nloc_delay_days,\nloc_phone_extension,\nloc_phone_country_code,\ntzl_id\nFROM hard_collection.location\nWHERE loc_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND loc_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "loc_contact_name",
											"type": "String"
										},
										"sink": {
											"name": "loc_contact_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "loc_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "loc_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "loc_email",
											"type": "String"
										},
										"sink": {
											"name": "loc_email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "loc_email_2",
											"type": "String"
										},
										"sink": {
											"name": "loc_email_2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "loc_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "loc_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "loc_phone",
											"type": "String"
										},
										"sink": {
											"name": "loc_phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "loc_send_to_collections",
											"type": "Boolean"
										},
										"sink": {
											"name": "loc_send_to_collections",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "loc_delay_days",
											"type": "Int16"
										},
										"sink": {
											"name": "loc_delay_days",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "loc_phone_extension",
											"type": "String"
										},
										"sink": {
											"name": "loc_phone_extension",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "loc_phone_country_code",
											"type": "String"
										},
										"sink": {
											"name": "loc_phone_country_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tzl_id",
											"type": "String"
										},
										"sink": {
											"name": "tzl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_HARD_COLLECTION_LOCATION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_COLLECTION_Location_Agency')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_COLLECTION_LOCATION_AGENCY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Location_Agency_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_LOCATION_AGENCY_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_HARD_COLLECTION_LOCATION_AGENCY_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_COLLECTION_LOCATION_AGENCY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.HARD_COLLECTION_LOCATION_AGENCY_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n\tLOWER(CONCAT (SUBSTR(HEX(ag_id), 1, 8),'-',SUBSTR(HEX(ag_id), 9, 4),'-',SUBSTR(HEX(ag_id), 13, 4),'-',SUBSTR(HEX(ag_id), 17, 4),'-',SUBSTR(HEX(ag_id), 21))) as ag_id,\n\tLOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) as loc_id,\n\tla_end_date,\n\tla_start_date\t\nFROM hard_collection.location_agency",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ag_id",
											"type": "String"
										},
										"sink": {
											"name": "ag_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "la_end_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "la_end_date",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "la_start_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "la_start_date",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_HARD_COLLECTION_LOCATION_AGENCY_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_Collection_Agency_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_COLLECTION_AGENCY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Agency_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_AGENCY_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_COLLECTION_AGENCY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n\t\tLOWER(CONCAT (SUBSTR(HEX(ag_id), 1, 8),'-',SUBSTR(HEX(ag_id), 9, 4),'-',SUBSTR(HEX(ag_id), 13, 4),'-',SUBSTR(HEX(ag_id), 17, 4),'-',SUBSTR(HEX(ag_id), 21))) as ag_id\n\t\t,ag_address2\n\t\t,ag_agency_name\n\t\t,ag_city\n\t\t,ag_contact_email\n\t\t,ag_contact_name\n\t\t,ag_contact_phone\n\t\t,ag_contact_phone_extension\n\t\t,ag_created\n\t\t,ag_modified\n\t\t,ag_postal_code\n\t\t,ag_send_method\n\t\t,ag_csv_delimiter\n\t\t,ag_address1\n\t\t,ag_province_code\n\t\t,ag_province_name\n\t\t,ag_country_code\n\t\t,ag_contact_phone_country_code\n\t\t,tzl_id\nFROM hard_collection.agency\nWHERE ag_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND ag_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ag_id",
											"type": "String"
										},
										"sink": {
											"name": "ag_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_address2",
											"type": "String"
										},
										"sink": {
											"name": "ag_address2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_agency_name",
											"type": "String"
										},
										"sink": {
											"name": "ag_agency_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_city",
											"type": "String"
										},
										"sink": {
											"name": "ag_city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_contact_email",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_contact_name",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_contact_phone",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_contact_phone_extension",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_phone_extension",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ag_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ag_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ag_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ag_postal_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_postal_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_send_method",
											"type": "String"
										},
										"sink": {
											"name": "ag_send_method",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_csv_delimiter",
											"type": "String"
										},
										"sink": {
											"name": "ag_csv_delimiter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_address1",
											"type": "String"
										},
										"sink": {
											"name": "ag_address1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_province_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_province_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_province_name",
											"type": "String"
										},
										"sink": {
											"name": "ag_province_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_country_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_country_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_contact_phone_country_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_phone_country_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tzl_id",
											"type": "String"
										},
										"sink": {
											"name": "tzl_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_HARD_COLLECTION_AGENCY_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_Collection_Billing_Account_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_Collection_Billing_Account",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Billing_Account_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [StgRCM].[HARD_COLLECTION_BILLING_ACCOUNT_INCR];\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_Collection_Billing_Account",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT LOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id ,\n       LOWER(CONCAT (SUBSTR(HEX(agrm_id), 1, 8),'-',SUBSTR(HEX(agrm_id), 9, 4),'-',SUBSTR(HEX(agrm_id), 13, 4),'-',SUBSTR(HEX(agrm_id), 17, 4),'-',SUBSTR(HEX(agrm_id), 21))) AS agrm_id,\n\t   LOWER(CONCAT (SUBSTR(HEX(m_id), 1, 8),'-',SUBSTR(HEX(m_id), 9, 4),'-',SUBSTR(HEX(m_id), 13, 4),'-',SUBSTR(HEX(m_id), 17, 4),'-',SUBSTR(HEX(m_id), 21))) AS m_id, \n\t   agrm_number,\n\t   LOWER(CONCAT (SUBSTR(HEX(pcp_id), 1, 8),'-',SUBSTR(HEX(pcp_id), 9, 4),'-',SUBSTR(HEX(pcp_id), 13, 4),'-',SUBSTR(HEX(pcp_id), 17, 4),'-',SUBSTR(HEX(pcp_id), 21))) AS pcp_id,\n\t   ba_payload,\nba_created,\nba_modified,\nagrm_amount_due,\nagrm_future_value,\nba_sending_status,\nba_late_fees_amount,\nba_service_fees_amount,\nba_last_transaction_amount,\nba_last_transaction_posted_date\n\t   \t\nFROM hard_collection.billing_account\nWHERE  ba_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND    ba_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\n\n\n\n\n\n\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "agrm_id",
											"type": "String"
										},
										"sink": {
											"name": "agrm_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "m_id",
											"type": "String"
										},
										"sink": {
											"name": "m_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "agrm_number",
											"type": "String"
										},
										"sink": {
											"name": "agrm_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pcp_id",
											"type": "String"
										},
										"sink": {
											"name": "pcp_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ba_payload",
											"type": "String"
										},
										"sink": {
											"name": "ba_payload",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ba_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ba_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ba_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ba_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "agrm_amount_due",
											"type": "Decimal"
										},
										"sink": {
											"name": "agrm_amount_due",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "agrm_future_value",
											"type": "Decimal"
										},
										"sink": {
											"name": "agrm_future_value",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ba_sending_status",
											"type": "String"
										},
										"sink": {
											"name": "ba_sending_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ba_late_fees_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ba_late_fees_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ba_service_fees_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ba_service_fees_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ba_last_transaction_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ba_last_transaction_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ba_last_transaction_posted_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "ba_last_transaction_posted_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_HARD_COLLECTION_BILLING_ACCOUNT_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_Collection_Collection_State_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_COLLECTION_COLLECTION_STATE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Collection_State_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_COLLECTION_STATE_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_COLLECTION_COLLECTION_STATE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT LOWER(CONCAT (SUBSTR(HEX(cost_id), 1, 8),'-',SUBSTR(HEX(cost_id), 9, 4),'-',SUBSTR(HEX(cost_id), 13, 4),'-',SUBSTR(HEX(cost_id), 17, 4),'-',SUBSTR(HEX(cost_id), 21))) AS cost_id,\n\t   LOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id,\n       LOWER(CONCAT (SUBSTR(HEX(pcp_id), 1, 8),'-',SUBSTR(HEX(pcp_id), 9, 4),'-',SUBSTR(HEX(pcp_id), 13, 4),'-',SUBSTR(HEX(pcp_id), 17, 4),'-',SUBSTR(HEX(pcp_id), 21))) AS pcp_id, \n\t\tcost_status,\n\t\tcost_rfc_date,\n\t\tcost_past_due_since,\n\t\tcost_total_amount_due,\n\t\tcost_event_date_time,\n\t\tLOWER(CONCAT (SUBSTR(HEX(cost_reference_id), 1, 8),'-',SUBSTR(HEX(cost_reference_id), 9, 4),'-',SUBSTR(HEX(cost_reference_id), 13, 4),'-',SUBSTR(HEX(cost_reference_id), 17, 4),'-',SUBSTR(HEX(cost_reference_id), 21))) AS cost_reference_id, \n\t\tcost_sent_to_agency,\n\t\tcost_created,\n\t\tcost_modified,\n\t\tcost_payload,\n\t\tLOWER(CONCAT (SUBSTR(HEX(of_id), 1, 8),'-',SUBSTR(HEX(of_id), 9, 4),'-',SUBSTR(HEX(of_id), 13, 4),'-',SUBSTR(HEX(of_id), 17, 4),'-',SUBSTR(HEX(of_id), 21))) AS of_id,\n\t\tLOWER(CONCAT (SUBSTR(HEX(agrm_id), 1, 8),'-',SUBSTR(HEX(agrm_id), 9, 4),'-',SUBSTR(HEX(agrm_id), 13, 4),'-',SUBSTR(HEX(agrm_id), 17, 4),'-',SUBSTR(HEX(agrm_id), 21))) AS agrm_id\nFROM hard_collection.collection_state\nWHERE cost_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND cost_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "cost_id",
											"type": "String"
										},
										"sink": {
											"name": "cost_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pcp_id",
											"type": "String"
										},
										"sink": {
											"name": "pcp_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cost_status",
											"type": "String"
										},
										"sink": {
											"name": "cost_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cost_rfc_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_rfc_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_past_due_since",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_past_due_since",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_total_amount_due",
											"type": "Decimal"
										},
										"sink": {
											"name": "cost_total_amount_due",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "cost_event_date_time",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_event_date_time",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_reference_id",
											"type": "String"
										},
										"sink": {
											"name": "cost_reference_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cost_sent_to_agency",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_sent_to_agency",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_payload",
											"type": "String"
										},
										"sink": {
											"name": "cost_payload",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "of_id",
											"type": "String"
										},
										"sink": {
											"name": "of_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "agrm_id",
											"type": "String"
										},
										"sink": {
											"name": "agrm_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_HARD_COLLECTION_COLLECTION_STATE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_Collection_Location_Agency_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_COLLECTION_LOCATION_AGENCY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Location_Agency_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_LOCATION_AGENCY_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_COLLECTION_LOCATION_AGENCY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n\tLOWER(CONCAT (SUBSTR(HEX(ag_id), 1, 8),'-',SUBSTR(HEX(ag_id), 9, 4),'-',SUBSTR(HEX(ag_id), 13, 4),'-',SUBSTR(HEX(ag_id), 17, 4),'-',SUBSTR(HEX(ag_id), 21))) as ag_id,\n\tLOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) as loc_id,\n\tla_end_date,\n\tla_start_date\t\nFROM hard_collection.location_agency",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ag_id",
											"type": "String"
										},
										"sink": {
											"name": "ag_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "la_end_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "la_end_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "la_start_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "la_start_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_HARD_COLLECTION_LOCATION_AGENCY_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_Collection_Location_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_Hard_Collection_Location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[HARD_COLLECTION_LOCATION_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_LOCATION_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_Hard_Collection_Location",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n   LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(loc_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 21)\n\t\t\t)) AS loc_id,\t\n    LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(org_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 21)\n\t\t\t)) AS org_id,\n\t\t\t\nloc_contact_name,\nloc_created,\nloc_email,\nloc_email_2,\nloc_modified,\nloc_phone,\nloc_send_to_collections,\nloc_delay_days,\nloc_phone_extension,\nloc_phone_country_code,\ntzl_id\nFROM hard_collection.location\nWHERE loc_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND loc_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_contact_name",
											"type": "String"
										},
										"sink": {
											"name": "loc_contact_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "loc_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "loc_email",
											"type": "String"
										},
										"sink": {
											"name": "loc_email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_email_2",
											"type": "String"
										},
										"sink": {
											"name": "loc_email_2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "loc_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "loc_phone",
											"type": "String"
										},
										"sink": {
											"name": "loc_phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_send_to_collections",
											"type": "Boolean"
										},
										"sink": {
											"name": "loc_send_to_collections",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "loc_delay_days",
											"type": "Int16"
										},
										"sink": {
											"name": "loc_delay_days",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "loc_phone_extension",
											"type": "String"
										},
										"sink": {
											"name": "loc_phone_extension",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_phone_country_code",
											"type": "String"
										},
										"sink": {
											"name": "loc_phone_country_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tzl_id",
											"type": "String"
										},
										"sink": {
											"name": "tzl_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_HARD_COLLECTION_LOCATION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_MEMBER_TRANSFER_MEMBER_TRANSFER_RECORD_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_MEMBER_TRANSFER_MEMBER_TRANSFER_RECORD_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Member_Transfer_Member_Transfer_Record_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.MEMBER_TRANSFER_MEMBER_TRANSFER_RECORD_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_MEMBER_TRANSFER_MEMBER_TRANSFER_RECORD_SQLPOOL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \n\tLOWER(CONCAT (SUBSTR(HEX(mtre_id), 1, 8),'-',SUBSTR(HEX(mtre_id), 9, 4),'-',SUBSTR(HEX(mtre_id), 13, 4),'-',SUBSTR(HEX(mtre_id), 17, 4),'-',SUBSTR(HEX(mtre_id), 21))) AS mtre_id \n\t,LOWER(CONCAT (SUBSTR(HEX(mtre_from_loc_id), 1, 8),'-',SUBSTR(HEX(mtre_from_loc_id), 9, 4),'-',SUBSTR(HEX(mtre_from_loc_id), 13, 4),'-',SUBSTR(HEX(mtre_from_loc_id), 17, 4),'-',SUBSTR(HEX(mtre_from_loc_id), 21))) AS mtre_from_loc_id\n\t,LOWER(CONCAT (SUBSTR(HEX(mtre_to_loc_id), 1, 8),'-',SUBSTR(HEX(mtre_to_loc_id), 9, 4),'-',SUBSTR(HEX(mtre_to_loc_id), 13, 4),'-',SUBSTR(HEX(mtre_to_loc_id), 17, 4),'-',SUBSTR(HEX(mtre_to_loc_id), 21))) AS mtre_to_loc_id\n\t,mtre_from_client_number\n\t,mtre_to_client_number\n\t,LOWER(CONCAT (SUBSTR(HEX(mtre_from_agrm_id), 1, 8),'-',SUBSTR(HEX(mtre_from_agrm_id), 9, 4),'-',SUBSTR(HEX(mtre_from_agrm_id), 13, 4),'-',SUBSTR(HEX(mtre_from_agrm_id), 17, 4),'-',SUBSTR(HEX(mtre_from_agrm_id), 21))) AS mtre_from_agrm_id\n\t,LOWER(CONCAT (SUBSTR(HEX(mtre_to_agrm_id), 1, 8),'-',SUBSTR(HEX(mtre_to_agrm_id), 9, 4),'-',SUBSTR(HEX(mtre_to_agrm_id), 13, 4),'-',SUBSTR(HEX(mtre_to_agrm_id), 17, 4),'-',SUBSTR(HEX(mtre_to_agrm_id), 21))) AS mtre_to_agrm_id\n\t,mtre_from_agrm_number\n\t,mtre_to_agrm_number\n\t,mtre_from_transfer_location_type\n\t,mtre_to_transfer_location_type\n\t,mtre_transfer_status\n\t,mtre_transfer_type\n\t,mtre_request_source\n\t,mtre_created\n\t,mtre_modified\n\t,mtre_modified\nFROM member_transfer.member_transfer_record\nWHERE  mtre_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND    mtre_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "mtre_id",
											"type": "String"
										},
										"sink": {
											"name": "mtre_id",
											"type": "Byte[]"
										}
									},
									{
										"source": {
											"name": "mtre_from_loc_id",
											"type": "String"
										},
										"sink": {
											"name": "mtre_from_loc_id",
											"type": "Byte[]"
										}
									},
									{
										"source": {
											"name": "mtre_to_loc_id",
											"type": "String"
										},
										"sink": {
											"name": "mtre_to_loc_id",
											"type": "Byte[]"
										}
									},
									{
										"source": {
											"name": "mtre_from_client_number",
											"type": "String"
										},
										"sink": {
											"name": "mtre_from_client_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mtre_to_client_number",
											"type": "String"
										},
										"sink": {
											"name": "mtre_to_client_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mtre_from_agrm_id",
											"type": "String"
										},
										"sink": {
											"name": "mtre_from_agrm_id",
											"type": "Byte[]"
										}
									},
									{
										"source": {
											"name": "mtre_to_agrm_id",
											"type": "String"
										},
										"sink": {
											"name": "mtre_to_agrm_id",
											"type": "Byte[]"
										}
									},
									{
										"source": {
											"name": "mtre_from_agrm_number",
											"type": "String"
										},
										"sink": {
											"name": "mtre_from_agrm_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mtre_to_agrm_number",
											"type": "String"
										},
										"sink": {
											"name": "mtre_to_agrm_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mtre_from_transfer_location_type",
											"type": "String"
										},
										"sink": {
											"name": "mtre_from_transfer_location_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mtre_to_transfer_location_type",
											"type": "String"
										},
										"sink": {
											"name": "mtre_to_transfer_location_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mtre_transfer_status",
											"type": "String"
										},
										"sink": {
											"name": "mtre_transfer_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mtre_transfer_type",
											"type": "String"
										},
										"sink": {
											"name": "mtre_transfer_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mtre_request_source",
											"type": "String"
										},
										"sink": {
											"name": "mtre_request_source",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mtre_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "mtre_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "mtre_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "mtre_modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_MEMBER_TRANSFER",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_MEMBER_TRANSFER_MEMBER_TRANSFER_RECORD_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-23T13:58:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Address')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_Address_copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_Address_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_ADDRESS_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_ORGANIZATION_ADDRESS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_Address_copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "`address`"
							},
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_ADDRESS_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(adr_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 21)\n\t\t\t)) as adr_id,\n       adr_created,\n       adr_modified,\n       adr_address1,\n       adr_address2,\n       adr_city,\n       ctl_id,\n       adr_region,\nadr_postal_code,\n\t   adr_province_name,\n       adr_province_code,\n       adr_country_code,\n prl_id\n\nFROM organization.address\nWHERE adr_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND adr_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "adr_id",
											"type": "String"
										},
										"sink": {
											"name": "adr_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "adr_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "adr_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "adr_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "adr_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "adr_address1",
											"type": "String"
										},
										"sink": {
											"name": "adr_address1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "adr_address2",
											"type": "String"
										},
										"sink": {
											"name": "adr_address2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "adr_city",
											"type": "String"
										},
										"sink": {
											"name": "adr_city",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ctl_id",
											"type": "String"
										},
										"sink": {
											"name": "ctl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "adr_region",
											"type": "String"
										},
										"sink": {
											"name": "adr_region",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "adr_postal_code",
											"type": "String"
										},
										"sink": {
											"name": "adr_postal_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "adr_province_name",
											"type": "String"
										},
										"sink": {
											"name": "adr_province_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "adr_province_code",
											"type": "String"
										},
										"sink": {
											"name": "adr_province_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "adr_country_code",
											"type": "String"
										},
										"sink": {
											"name": "adr_country_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "prl_id",
											"type": "String"
										},
										"sink": {
											"name": "prl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_ORGANIZATION_ADDRESS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Address_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_Address",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_Address_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_ADDRESS_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_Address",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_ADDRESS_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(adr_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(adr_id), 21)\n\t\t\t)) as adr_id,\n       adr_created,\n       adr_modified,\n       adr_address1,\n       adr_address2,\n       adr_city,\n       ctl_id,\n       adr_region,\nadr_postal_code,\n\t   adr_province_name,\n       adr_province_code,\n       adr_country_code,\n prl_id\n\nFROM organization.address\nWHERE adr_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND adr_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "adr_id",
											"type": "String"
										},
										"sink": {
											"name": "adr_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "adr_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "adr_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "adr_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "adr_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "adr_address1",
											"type": "String"
										},
										"sink": {
											"name": "adr_address1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "adr_address2",
											"type": "String"
										},
										"sink": {
											"name": "adr_address2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "adr_city",
											"type": "String"
										},
										"sink": {
											"name": "adr_city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ctl_id",
											"type": "String"
										},
										"sink": {
											"name": "ctl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "adr_region",
											"type": "String"
										},
										"sink": {
											"name": "adr_region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "adr_postal_code",
											"type": "String"
										},
										"sink": {
											"name": "adr_postal_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "adr_province_name",
											"type": "String"
										},
										"sink": {
											"name": "adr_province_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "adr_province_code",
											"type": "String"
										},
										"sink": {
											"name": "adr_province_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "adr_country_code",
											"type": "String"
										},
										"sink": {
											"name": "adr_country_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "prl_id",
											"type": "String"
										},
										"sink": {
											"name": "prl_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ORGANIZATION_ADDRESS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Country_Lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_COUNTRY_LOOKUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_country_lookup_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_COUNTRY_LOOKUP_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_ORGANIZATION_COUNTRY_LOOKUP_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_COUNTRY_LOOKUP",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "`country_lookup`"
							},
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_COUNTRY_LOOKUP_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\t\n*\nFROM organization.country_lookup\nWHERE ctl_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND ctl_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ctl_id",
											"type": "String"
										},
										"sink": {
											"name": "ctl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ctl_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ctl_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ctl_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ctl_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ctl_abbreviation",
											"type": "String"
										},
										"sink": {
											"name": "ctl_abbreviation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ctl_code",
											"type": "Int32"
										},
										"sink": {
											"name": "ctl_code",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_ORGANIZATION_COUNTRY_LOOKUP_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Country_Lookup_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_COUNTRY_LOOKUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_country_lookup_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_COUNTRY_LOOKUP_INCR;\nselect 0;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_COUNTRY_LOOKUP",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "`country_lookup`"
							},
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_COUNTRY_LOOKUP_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\t\n*\nFROM organization.country_lookup\nWHERE ctl_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND ctl_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ctl_id",
											"type": "String"
										},
										"sink": {
											"name": "ctl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ctl_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ctl_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ctl_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ctl_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ctl_abbreviation",
											"type": "String"
										},
										"sink": {
											"name": "ctl_abbreviation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ctl_code",
											"type": "Int32"
										},
										"sink": {
											"name": "ctl_code",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ORGANIZATION_COUNTRY_LOOKUP_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Country_Name')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_COUNTRY_NAME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_country_name_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_COUNTRY_NAME_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SNK_StgRCM_ORGANIZATION_COUNTRY_NAME_INCR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_COUNTRY_NAME",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "`country_name`"
							},
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_COUNTRY_NAME_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\t LOWER(CONCAT(SUBSTR(HEX(ctn_id),1,8),'-',SUBSTR(HEX(ctn_id),9,4),'-',SUBSTR(HEX(ctn_id),13,4),'-',SUBSTR(HEX(ctn_id),17,4),'-',SUBSTR(HEX(ctn_id),21))) AS ctn_id,\nctl_id,\nctn_language,\nctn_region,\nctn_variant,\nctn_name,\nctn_created,\nctn_modified\nFROM organization.country_name\nWHERE ctn_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND ctn_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 32,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ctn_id",
											"type": "String"
										},
										"sink": {
											"name": "ctn_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ctl_id",
											"type": "String"
										},
										"sink": {
											"name": "ctl_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ctn_language",
											"type": "String"
										},
										"sink": {
											"name": "ctn_language",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ctn_region",
											"type": "String"
										},
										"sink": {
											"name": "ctn_region",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ctn_variant",
											"type": "String"
										},
										"sink": {
											"name": "ctn_variant",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ctn_name",
											"type": "String"
										},
										"sink": {
											"name": "ctn_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ctn_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ctn_created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ctn_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ctn_modified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_StgRCM_ORGANIZATION_COUNTRY_NAME_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PF_Backup"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ORGANIZATION_Country_Name_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ORGANIZATION_COUNTRY_NAME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Organization_country_name_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ORGANIZATION_COUNTRY_NAME_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ORGANIZATION_COUNTRY_NAME",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "StgRCM.ORGANIZATION_COUNTRY_NAME_INCR"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\t LOWER(CONCAT(SUBSTR(HEX(ctn_id),1,8),'-',SUBSTR(HEX(ctn_id),9,4),'-',SUBSTR(HEX(ctn_id),13,4),'-',SUBSTR(HEX(ctn_id),17,4),'-',SUBSTR(HEX(ctn_id),21))) AS ctn_id,\nctl_id,\nctn_language,\nctn_region,\nctn_variant,\nctn_name,\nctn_created,\nctn_modified\nFROM organization.country_name\nWHERE ctn_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND ctn_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ctn_id",
											"type": "String"
										},
										"sink": {
											"name": "ctn_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ctl_id",
											"type": "String"
										},
										"sink": {
											"name": "ctl_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ctn_language",
											"type": "String"
										},
										"sink": {
											"name": "ctn_language",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ctn_region",
											"type": "String"
										},
										"sink": {
											"name": "ctn_region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ctn_variant",
											"type": "String"
										},
										"sink": {
											"name": "ctn_variant",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ctn_name",
											"type": "String"
										},
										"sink": {
											"name": "ctn_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ctn_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ctn_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ctn_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ctn_modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ORGANIZATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ORGANIZATION_COUNTRY_NAME_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		}
	]
}