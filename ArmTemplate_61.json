{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PlanetFitnessDF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ACCOUNTING_Chargeback_Transaction_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACCOUNTING_CHARGEBACK_TRANSACTION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Accounting].[Chargeback_Transaction_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table ACCOUNTING.CHARGEBACK_TRANSACTION_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACCOUNTING_CHARGEBACK_TRANSACTION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select \n\tac.tran_unique_transaction_number,\n\tac.cb_id as id,\n\tacae.cae_posting_date,\n\tabae.bae_posting_date,\n\taset.stlm_posting_date 'client_settlement_date',\n\tol.loc_number,ol.loc_name,om.m_number 'member_number',\n\tapp.pp_account_number 'payor_account_number',\n\tom.m_name_first,\n\tom.m_name_last,\n\tabae.bae_transaction_type,\n\tabae.bae_type,\n\tabae.bae_amount,\n\tapm.pame_subtype,\n\tCASE when apm.pame_brand IS NULL then 'BANK' else  apm.pame_brand end as  'pame_brand',--IF(apm.pame_brand IS NULL, 'BANK', apm.pame_brand) 'pame_brand',\n\tapm.pame_last_four,\n\tac.cb_number,\n\tap.pay_status,convert(date,ac.cb_transaction_date) as  'cb_transaction_date',\n\tap.pay_number,\n\t--'Chargebacks' AS 'transaction_key',\n\tabae.bae_transaction_type AS 'transaction_key',\n\tac.cb_modified AS 'transaction_modified_date',\n\t'WORLDPAY' AS Processor\n\tFROM stgrcm.abcbilling_billing_account_entry abae\n\tINNER JOIN stgrcm.organization_location ol on abae.loc_id = ol.loc_id\n\tINNER JOIN stgrcm.abcbilling_chargeback ac on abae.bae_transaction_id = ac.cb_id\n\tINNER JOIN stgrcm.abcbilling_client_account_entry acae on ac.cb_id = acae.cae_transaction_id\n\tLEFT JOIN stgrcm.abcbilling_settlement aset on acae.stlm_id = aset.stlm_id\n\tleft JOIN stgrcm.abcbilling_payment ap on ac.pay_id = ap.pay_id\n\tleft JOIN stgrcm.abcbilling_payment_method apm on ap.pame_id = apm.pame_id\n\tleft JOIN stgrcm.abcbilling_payor_profile app on apm.payor_id = app.payor_id\n\tleft JOIN stgrcm.organization_member om on app.m_id = om.m_id\nWHERE ac.cb_modified >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')\nAND ac.cb_modified < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										},
										"sink": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "String"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cae_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "cae_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "bae_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "bae_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "client_settlement_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "client_settlement_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "loc_number",
											"type": "String"
										},
										"sink": {
											"name": "loc_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_name",
											"type": "String"
										},
										"sink": {
											"name": "loc_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "member_number",
											"type": "String"
										},
										"sink": {
											"name": "member_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "payor_account_number",
											"type": "String"
										},
										"sink": {
											"name": "payor_account_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "m_name_first",
											"type": "String"
										},
										"sink": {
											"name": "m_name_first",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "m_name_last",
											"type": "String"
										},
										"sink": {
											"name": "m_name_last",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bae_transaction_type",
											"type": "String"
										},
										"sink": {
											"name": "bae_transaction_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bae_type",
											"type": "String"
										},
										"sink": {
											"name": "bae_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bae_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "bae_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "pame_subtype",
											"type": "String"
										},
										"sink": {
											"name": "pame_subtype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pame_brand",
											"type": "String"
										},
										"sink": {
											"name": "pame_brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pame_last_four",
											"type": "String"
										},
										"sink": {
											"name": "pame_last_four",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cb_number",
											"type": "String"
										},
										"sink": {
											"name": "cb_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pay_status",
											"type": "String"
										},
										"sink": {
											"name": "pay_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cb_transaction_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "cb_transaction_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "pay_number",
											"type": "String"
										},
										"sink": {
											"name": "pay_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_key",
											"type": "String"
										},
										"sink": {
											"name": "transaction_key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Processor",
											"type": "String"
										},
										"sink": {
											"name": "Processor",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_ACCOUNTING_CHARGEBACK_TRANSACTION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-22T14:15:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACCOUNTING_MEMBER_TRANSACTION_FEE_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACCOUNTING_MEMBER_TRANSACTION_FEE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Accounting].[Member_Transaction_Fee_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table ACCOUNTING.MEMBER_TRANSACTION_FEE_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACCOUNTING_MEMBER_TRANSACTION_FEE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "\n\nSELECT DISTINCT    \nCAST(t.postingDate as DATE) 'pay_posting_date',    \nCAST(t.mtf_created as DATE) 'fee_created',    \nt.settlementDate 'client_settlement_date',    \nt.clientNumber 'loc_number',   \nt.clientName 'loc_name',   \nt.memberNumber 'member_number',   \nt.accountType,   \nt.transactionType,   \nt.cae_type,    \nt.bae_type,    \nt.transactionAmount 'cae_amount',   \nt.mtf_config_type 'fee_type',    \nt.status 'fee_status',   \nt.transactionAmount 'fee_amount',   \nt.mtf_number 'fee_number',\nCONCAT(t.transactionType,'.', t.mtf_config_type,'.', ISNULL(t.cae_type, CONCAT('BAE_', t.bae_type)),'.',t.accountType) AS 'transaction_key',\nt.mtf_modified as transaction_modified_date,\nt.mtf_id as mtf_id --\nFROM    \n  (SELECT  cp.cp_name AS clientName,\n           ol.loc_number AS clientNumber,            \n\t\t   m.m_number AS memberNumber,            \n\t\t   bae.bae_posting_date AS 'postingDate',            \n\t\t   NULL AS 'settlementDate',            \n\t\t   cae.cae_type AS 'cae_type',            \n\t\t   bae.bae_type AS 'bae_type',            \n\t\t   bae.bae_transaction_type AS 'transactionType',            \n\t\t   mtf.mtf_created,            \n\t\t   mtf.mtf_status AS 'status',            \n\t\t   mtf.mtf_config_type AS mtf_config_type,            \n\t\t   mtf.mtf_number AS mtf_number,            \n\t\t   'PAYOR' AS accountType,            \n\t\t   bae.bae_amount AS transactionAmount,\n\t\t   mtf.mtf_modified as mtf_modified,\n\t\t   mtf.mtf_id as mtf_id\n   FROM  stgrcm.abcbilling_billing_account_entry bae    \n   INNER JOIN stgrcm.abcbilling_member_transaction_fee mtf ON bae.bae_transaction_id = mtf.mtf_id    \n   LEFT JOIN stgrcm.abcbilling_client_account_entry cae ON mtf.mtf_id = cae.cae_transaction_id    \n   INNER JOIN stgrcm.abcbilling_client_profile cp ON bae.loc_id = cp.loc_id    \n   INNER JOIN stgrcm.organization_location ol ON cp.loc_id = ol.loc_id    \n   INNER JOIN stgrcm.abcbilling_agreement_payor_profile agrmpp ON agrmpp.agrm_id = bae.agrm_id    \n   INNER JOIN stgrcm.abcbilling_payor_profile pp ON agrmpp.payor_id = pp.payor_id    \n   INNER JOIN stgrcm.ORGANIZATION_MEMBER m ON pp.m_id = m.m_id    \n   WHERE  bae.bae_transaction_type = 'MEMBER_TRANSACTION_FEE'            \n      AND bae.bae_type = 'DEBIT'            \n\t  AND mtf.mtf_modified >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')            \n\t  AND mtf.mtf_modified < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}')             \n\t  AND cae.cae_id IS NULL           \nUNION ALL \n    SELECT  cp.cp_name AS clientName,            \n\t        ol.loc_number AS clientNumber,            \n\t\t\tNULL AS memberNumber,            \n\t\t\tcae.cae_posting_date AS 'postingDate',            \n\t\t\taset.stlm_posting_date AS 'settlementDate',            \n\t\t\tcae.cae_type AS 'cae_type',            \n\t\t\tNULL AS 'bae_type',            \n\t\t\tcae.cae_transaction_type AS 'transactionType',            \n\t\t\tmtf.mtf_created,            \n\t\t\tmtf.mtf_status AS 'status',            \n\t\t\tmtf.mtf_config_type AS mtf_config_type,            \n\t\t\tmtf.mtf_number AS mtf_number,            \n\t\t\t'CLIENT' AS accountType,            \n\t\t\tcae.cae_amount AS transactionAmount    ,\n\t\t    mtf.mtf_modified as mtf_modified,\n            mtf.mtf_id as mtf_id\n\tFROM   stgrcm.abcbilling_client_account_entry cae    \n\tINNER JOIN stgrcm.abcbilling_member_transaction_fee mtf ON cae.cae_transaction_id = mtf.mtf_id    \n\tINNER JOIN stgrcm.abcbilling_client_profile cp ON cae.client_id = cp.client_id    \n\tINNER JOIN stgrcm.organization_location ol ON cp.loc_id = ol.loc_id    \n\tLEFT JOIN stgrcm.abcbilling_settlement aset ON cae.stlm_id = aset.stlm_id    \n\tWHERE     cae.cae_transaction_type = 'MEMBER_TRANSACTION_FEE'           \n\t      AND cae.cae_type = 'DEBIT'           \n\t\t  AND cae.cae_posting_date IS NOT NULL           \n\t\t  AND mtf.mtf_modified >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')           \n\t\t  AND mtf.mtf_modified < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}') \nUNION ALL \n    SELECT cp.cp_name AS clientName,            \n\t       ol.loc_number AS clientNumber,            \n\t\t   NULL AS memberNumber,            \n\t\t   cae.cae_posting_date AS 'postingDate',           \n\t\t   aset.stlm_posting_date AS 'settlementDate',            \n\t\t   cae.cae_type AS 'cae_type',            \n\t\t   NULL AS 'bae_type',            \n\t\t   cae.cae_transaction_type AS 'transactionType',            \n\t\t   mtf.mtf_created,            \n\t\t   mtf.mtf_status AS 'status',           \n\t\t   mtf.mtf_config_type AS mtf_config_type,            \n\t\t   mtf.mtf_number AS mtf_number,            \n\t\t   'CLIENT' AS accountType,            \n\t\t   cae.cae_amount AS transactionAmount    ,\n\t\t   mtf.mtf_modified as mtf_modified,\n           mtf.mtf_id as mtf_id\n     FROM  stgrcm.abcbilling_client_account_entry cae    \n\t INNER JOIN stgrcm.abcbilling_member_transaction_fee mtf ON cae.cae_transaction_id = mtf.mtf_id    \n\t INNER JOIN stgrcm.abcbilling_client_profile cp ON cae.client_id = cp.client_id    \n\t INNER JOIN stgrcm.organization_location ol ON cp.loc_id = ol.loc_id    \n\t LEFT JOIN stgrcm.abcbilling_settlement aset ON cae.stlm_id = aset.stlm_id    \n\t WHERE   cae.cae_transaction_type = 'MEMBER_TRANSACTION_FEE'            \n\t     AND cae.cae_type = 'NONE'            \n\t\t AND cae.cae_posting_date IS NOT NULL            \n\t\t AND mtf.mtf_modified >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')            \n\t\t AND mtf.mtf_modified < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}') \nUNION ALL \n    SELECT cp.cp_name AS clientName,            \n\t       ol.loc_number AS clientNumber,            \n\t\t   NULL AS memberNumber,            \n\t\t   cae.cae_posting_date AS 'postingDate',            \n\t\t   aset.stlm_posting_date AS 'settlementDate',            \n\t\t   cae.cae_type AS 'cae_type',            \n\t\t   NULL AS 'bae_type',           \n\t\t   cae.cae_transaction_type AS 'transactionType',            \n\t\t   mtf.mtf_created,           \n\t\t   mtf.mtf_status AS 'status',            \n\t\t   mtf.mtf_config_type AS mtf_config_type,            \n\t\t   mtf.mtf_number AS mtf_number,            \n\t\t   'CLIENT' AS accountType,            \n\t\t   cae.cae_amount AS transactionAmount    ,\n\t\t   mtf.mtf_modified as mtf_modified,\n\t\t   mtf.mtf_id as mtf_id\n    FROM  stgrcm.abcbilling_client_account_entry cae   \n\tINNER JOIN stgrcm.abcbilling_member_transaction_fee mtf ON cae.cae_transaction_id = mtf.mtf_id    \n\tINNER JOIN stgrcm.abcbilling_client_profile cp ON cae.client_id = cp.client_id    \n\tINNER JOIN stgrcm.organization_location ol ON cp.loc_id = ol.loc_id    \n\tLEFT JOIN stgrcm.abcbilling_settlement aset ON cae.stlm_id = aset.stlm_id    \n\tWHERE     cae.cae_transaction_type = 'RETURNED_MEMBER_TRANSACTION_FEE'            \n\t      AND cae.cae_type = 'CREDIT'            \n\t\t  AND cae.cae_posting_date IS NOT NULL            \n\t\t  AND mtf.mtf_modified >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')           \n\t\t  AND mtf.mtf_modified < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}') \nUNION ALL \n    SELECT cp.cp_name AS clientName,            \n\t       ol.loc_number AS clientNumber,           \n\t\t   NULL AS memberNumber,           \n\t\t   cae.cae_posting_date AS 'postingDate',            \n\t\t   aset.stlm_posting_date AS 'settlementDate',           \n\t\t   cae.cae_type AS 'cae_type',            \n\t\t   NULL AS 'bae_type',            \n\t\t   cae.cae_transaction_type AS 'transactionType',           \n\t\t   mtf.mtf_created,            \n\t\t   mtf.mtf_status AS 'status',           \n\t\t   mtf.mtf_config_type AS mtf_config_type,           \n\t\t   mtf.mtf_number AS mtf_number,            \n\t\t   'CLIENT' AS accountType,            \n\t\t   cae.cae_amount AS transactionAmount    ,\n\t\t   mtf.mtf_modified as mtf_modified,\n\t\t   mtf.mtf_id as mtf_id\n    FROM   stgrcm.abcbilling_client_account_entry cae    \n\tINNER JOIN stgrcm.abcbilling_member_transaction_fee mtf ON cae.cae_transaction_id = mtf.mtf_id    \n\tINNER JOIN stgrcm.abcbilling_client_profile cp ON cae.client_id = cp.client_id   \n\tINNER JOIN stgrcm.organization_location ol ON cp.loc_id = ol.loc_id    \n\tLEFT JOIN stgrcm.abcbilling_settlement aset ON cae.stlm_id = aset.stlm_id   \n\tWHERE  cae.cae_transaction_type = 'RETURNED_MEMBER_TRANSACTION_FEE'            \n\t   AND cae.cae_type = 'NONE'            \n\t   AND cae.cae_posting_date IS NOT NULL\n\t   AND mtf.mtf_modified >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')        \n\t   AND mtf.mtf_modified < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}')             \nUNION ALL \n    SELECT cp.cp_name AS clientName,            \n\t       ol.loc_number AS clientNumber,            \n\t\t   NULL AS memberNumber,            \n\t\t   cae.cae_posting_date AS 'postingDate',            \n\t\t   aset.stlm_posting_date AS 'settlementDate',            \n\t\t   cae.cae_type AS 'cae_type',            \n\t\t   NULL AS 'bae_type',            \n\t\t   cae.cae_transaction_type AS 'transactionType',            \n\t\t   mtf.mtf_created,           \n\t\t   mtf.mtf_status AS 'status',           \n\t\t   mtf.mtf_config_type AS mtf_config_type,         \n\t\t   mtf.mtf_number AS mtf_number,           \n\t\t   'CLIENT' AS accountType,           \n\t\t   cae.cae_amount AS transactionAmount    ,\n\t\t   mtf.mtf_modified as mtf_modified,\n\t\t   mtf.mtf_id as mtf_id\n\tFROM  stgrcm.abcbilling_client_account_entry cae    \n\tINNER JOIN stgrcm.abcbilling_member_transaction_fee mtf ON cae.cae_transaction_id = mtf.mtf_id   \n\tINNER JOIN stgrcm.abcbilling_client_profile cp ON cae.client_id = cp.client_id   \n\tINNER JOIN stgrcm.organization_location ol ON cp.loc_id = ol.loc_id   \n\tLEFT JOIN stgrcm.abcbilling_settlement aset ON cae.stlm_id = aset.stlm_id   \n\tWHERE      cae.cae_transaction_type = 'REFUNDED_MEMBER_TRANSACTION_FEE'            \n\t       AND cae.cae_type = 'CREDIT'        \n\t\t   AND cae.cae_posting_date IS NOT NULL     \n\t\t   AND mtf.mtf_modified >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')      \n\t\t   AND mtf.mtf_modified < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}') \nUNION ALL \n    SELECT cp.cp_name AS clientName,            \n\t       ol.loc_number AS clientNumber,        \n\t\t   NULL AS memberNumber,        \n\t\t   cae.cae_posting_date AS 'postingDate',        \n\t\t   aset.stlm_posting_date AS 'settlementDate',       \n\t\t   cae.cae_type AS 'cae_type',        \n\t\t   NULL AS 'bae_type',      \n\t\t   cae.cae_transaction_type AS 'transactionType',       \n\t\t   mtf.mtf_created,       \n\t\t   mtf.mtf_status AS 'status',    \n\t\t   mtf.mtf_config_type AS mtf_config_type,      \n\t\t   mtf.mtf_number AS mtf_number,          \n\t\t   'CLIENT' AS accountType,        \n\t\t   cae.cae_amount AS transactionAmount  ,\n\t\t   mtf.mtf_modified as mtf_modified,\n\t\t   mtf.mtf_id as mtf_id\n\tFROM   stgrcm.abcbilling_client_account_entry cae    \n\t\t   INNER JOIN stgrcm.abcbilling_member_transaction_fee mtf ON cae.cae_transaction_id = mtf.mtf_id    \n\t\t   INNER JOIN stgrcm.abcbilling_client_profile cp ON cae.client_id = cp.client_id  \n\t\t   INNER JOIN stgrcm.organization_location ol ON cp.loc_id = ol.loc_id   \n\t\t   LEFT JOIN stgrcm.abcbilling_settlement aset ON cae.stlm_id = aset.stlm_id    \n\tWHERE   cae.cae_transaction_type = 'REFUNDED_MEMBER_TRANSACTION_FEE'       \n\t    AND cae.cae_type = 'NONE'     \n\t    AND cae.cae_posting_date IS NOT NULL     \n\t\tAND mtf.mtf_modified >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')    \n\t\tAND mtf.mtf_modified < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}')      \n) AS t\nWHERE CAST(t.postingDate as DATE) is not null -- AP : Added on 20220520 To avoid failure of the job",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "pay_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "pay_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "fee_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "fee_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "client_settlement_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "client_settlement_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "loc_number",
											"type": "String"
										},
										"sink": {
											"name": "loc_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_name",
											"type": "String"
										},
										"sink": {
											"name": "loc_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "member_number",
											"type": "String"
										},
										"sink": {
											"name": "member_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "accountType",
											"type": "String"
										},
										"sink": {
											"name": "account_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transactionType",
											"type": "String"
										},
										"sink": {
											"name": "transaction_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cae_type",
											"type": "String"
										},
										"sink": {
											"name": "cae_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bae_type",
											"type": "String"
										},
										"sink": {
											"name": "bae_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cae_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "cae_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "fee_type",
											"type": "String"
										},
										"sink": {
											"name": "fee_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "fee_status",
											"type": "String"
										},
										"sink": {
											"name": "fee_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "fee_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "fee_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "fee_number",
											"type": "String"
										},
										"sink": {
											"name": "fee_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_key",
											"type": "String"
										},
										"sink": {
											"name": "transaction_key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "mtf_id",
											"type": "String"
										},
										"sink": {
											"name": "mtf_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_ACCOUNTING_MEMBER_TRANSACTION_FEE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-23T18:06:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACCOUNTING_Payment_Transaction_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACCOUNTING_PAYMENT_TRANSACTION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Accounting].[Payment_Transaction_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table ACCOUNTING.PAYMENT_TRANSACTION_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACCOUNTING_PAYMENT_TRANSACTION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "\nselect\nt.tran_unique_transaction_number\n,Id\n,t.loc_name 'loc_name'\n,t.loc_number 'loc_number'\n,t.member_number\n,t.transaction_type 'transaction_type'\n,t.transaction_payment_action AS 'transaction_action'\n,t.transaction_status\n,t.posting_date\n,t.bae_posting_date\n,t.cae_posting_date\n,t.stlm_posting_date 'client_settlement_date'\n,t.transaction_amount 'transaction_amount'\n,t.payment_method\n,t.payment_method_type\n,t.transaction_key AS 'transaction_key'\n,isnull(t.wire_transfer,0) AS wire_transfer\n,t.transaction_modified_date\n,t.Processor\nFROM (SELECT\ncase when ad.tran_unique_transaction_number is null then abd.tran_unique_transaction_number Else ad.tran_unique_transaction_number end as 'tran_unique_transaction_number'\n,dep_id as id\t\n,acae.cae_posting_date 'posting_date'\n,NULL 'bae_posting_date'\n,acae.cae_posting_date 'cae_posting_date'\n,ad.dep_modified 'transaction_modified_date'\n,ol.loc_number 'loc_number'\n,ol.loc_name 'loc_name'\n,NULL 'member_number'\n,acae.cae_transaction_type 'transaction_type'\n,acae.cae_type 'transaction_payment_action'\n,acae.cae_amount 'transaction_amount'\n,ad.dep_status 'transaction_status'\n,ad.dep_number 'transaction_number'\n,apm.pame_type 'payment_method'\n,CASE WHEN apm.pame_brand IS NULL then apm.pame_subtype else  apm.pame_brand end as  'payment_method_type'\n,aset.stlm_posting_date\n--,'Deposits.ACH' AS 'transaction_key'\n--,CONCAT(acae.cae_transaction_type,'.',acae.cae_type,'.',apm.pame_type)  AS 'transaction_key'\n,CONCAT(acae.cae_transaction_type,'.',acae.cae_type,'.',apm.pame_type,case when ISNULL(apm.pame_is_wire_transfer_type,0) = 1 then '.WIRE' else '' end )  AS 'transaction_key'\n,ISNULL(apm.pame_is_wire_transfer_type,0) as 'wire_transfer'\n,CASE apm.pame_type\n   WHEN 'CREDIT_CARD' THEN 'WORLDPAY'\n   WHEN 'BANK_ACCOUNT' THEN 'REGIONS'\n   ELSE 'Other'\nEND AS 'Processor'\nFROM stgrcm.abcbilling_client_account_entry acae\nINNER JOIN stgrcm.abcbilling_client_profile acp ON acae.client_id = acp.client_id\nINNER JOIN stgrcm.organization_location ol on acp.loc_id = ol.loc_id\nINNER JOIN stgrcm.abcbilling_deposit ad on acae.cae_transaction_id = ad.dep_id\nLEFT JOIN stgrcm.abcbilling_bundled_deposit abd on ad.bd_id = abd.bd_id\nLEFT JOIN stgrcm.abcbilling_settlement aset on ad.stlm_id = aset.stlm_id\n--INNER JOIN stgrcm.abcbilling_payment_method apm on acp.client_id = apm.client_id\nINNER JOIN stgrcm.abcbilling_payment_method apm on ad.pame_id = apm.pame_id\nWHERE ad.dep_status = 'SUCCESS'\n\nUNION ALL\nselect\nap.tran_unique_transaction_number\n,pay_id as id\t\n,abae.bae_posting_date 'posting_date'\n--,ap.pay_effective_date 'posting_date'\n,abae.bae_posting_date 'bae_posting_date'\n,acae.cae_posting_date 'cae_posting_date'\n,ap.pay_modified 'transaction_modified_date'\n,ol.loc_number 'loc_number'\n,ol.loc_name 'loc_name'\n,om.m_number 'member_number'\n,abae.bae_transaction_type 'transaction_type'\n,abae.bae_type 'transaction_payment_action'\n,abae.bae_amount 'transaction_amount'\n,ap.pay_status 'transaction_status'\n,ap.pay_number 'transaction_number'\n,apm.pame_type 'payment_method'\n,CASE WHEN apm.pame_brand IS NULL then apm.pame_subtype else  apm.pame_brand end as  'payment_method_type'\n,aset.stlm_posting_date\n--,CASE apm.pame_type\n--WHEN 'CREDIT_CARD' THEN 'Dues.Cards'\n--WHEN 'BANK_ACCOUNT' THEN 'Dues.ACH'\n--ELSE 'Dues.Other'\n--END AS 'transaction_key'\n,CONCAT(abae.bae_transaction_type,'.',abae.bae_type,'.',apm.pame_type) 'transaction_key'\n,ISNULL(apm.pame_is_wire_transfer_type,0) as 'wire_transfer'\n,CASE apm.pame_type\nWHEN 'CREDIT_CARD' THEN 'WORLDPAY'\nWHEN 'BANK_ACCOUNT' THEN 'REGIONS'\nELSE 'Other'\nEND AS 'Processor'\nFROM stgrcm.abcbilling_billing_account_entry abae\nINNER JOIN stgrcm.organization_location ol on abae.loc_id = ol.loc_id\nINNER JOIN stgrcm.abcbilling_payment ap on abae.bae_transaction_id = ap.pay_id\nLEFT JOIN stgrcm.abcbilling_client_account_entry acae on ap.pay_id = acae.cae_transaction_id\nLEFT JOIN stgrcm.abcbilling_settlement aset on acae.stlm_id = aset.stlm_id\nINNER JOIN stgrcm.abcbilling_payment_method apm on ap.pame_id = apm.pame_id\nINNER JOIN stgrcm.abcbilling_payor_profile app on apm.payor_id = app.payor_id\nINNER JOIN stgrcm.organization_member om on app.m_id = om.m_id\nWHERE apm.pame_type = 'BANK_ACCOUNT' and ap.pay_status IN ('SUCCESS','SOFT_DECLINED', 'HARD_DECLINED', 'IN_DISPUTE','MAX_REATTEMPTS_REACHED') \nUNION ALL\nselect\nap.tran_unique_transaction_number\n,pay_id as id\t\n,abae.bae_posting_date 'posting_date'\n--,ap.pay_effective_date 'posting_date'\n,abae.bae_posting_date 'bae_posting_date'\n,acae.cae_posting_date 'cae_posting_date'\n,ap.pay_modified 'transaction_modified_date'\n,ol.loc_number 'loc_number'\n,ol.loc_name 'loc_name'\n,om.m_number 'member_number'\n,abae.bae_transaction_type 'transaction_type'\n,abae.bae_type 'transaction_payment_action'\n,abae.bae_amount 'transaction_amount'\n,ap.pay_status 'transaction_status'\n,ap.pay_number 'transaction_number'\n,apm.pame_type 'payment_method'\n,CASE WHEN apm.pame_brand IS NULL then apm.pame_subtype else  apm.pame_brand end as  'payment_method_type'\n,aset.stlm_posting_date\n--,CASE apm.pame_type\n--WHEN 'CREDIT_CARD' THEN 'Dues.Cards'\n--WHEN 'BANK_ACCOUNT' THEN 'Dues.ACH'\n--ELSE 'Dues.Other'\n--END AS 'transaction_key'\n,CONCAT(abae.bae_transaction_type,'.',abae.bae_type,'.',apm.pame_type) 'transaction_key'\n,ISNULL(apm.pame_is_wire_transfer_type,0) as 'wire_transfer'\n,CASE apm.pame_type\nWHEN 'CREDIT_CARD' THEN 'WORLDPAY'\nWHEN 'BANK_ACCOUNT' THEN 'REGIONS'\nELSE 'Other'\nEND AS 'Processor'\nFROM stgrcm.abcbilling_billing_account_entry abae\nINNER JOIN stgrcm.organization_location ol on abae.loc_id = ol.loc_id\nINNER JOIN stgrcm.abcbilling_payment ap on abae.bae_transaction_id = ap.pay_id\nLEFT JOIN stgrcm.abcbilling_client_account_entry acae on ap.pay_id = acae.cae_transaction_id\nLEFT JOIN stgrcm.abcbilling_settlement aset on acae.stlm_id = aset.stlm_id\nINNER JOIN stgrcm.abcbilling_payment_method apm on ap.pame_id = apm.pame_id\nINNER JOIN stgrcm.abcbilling_payor_profile app on apm.payor_id = app.payor_id\nINNER JOIN stgrcm.organization_member om on app.m_id = om.m_id\nWHERE apm.pame_type <> 'BANK_ACCOUNT' and ap.pay_status IN ('SUCCESS','IN_DISPUTE') \n\nUNION ALL\nselect\nar.tran_unique_transaction_number\n,ref_id as id\n,abae.bae_posting_date 'posting_date'\n,abae.bae_posting_date 'bae_posting_date'\n,acae.cae_posting_date 'cae_posting_date'\n,ar.ref_modified 'transaction_modified_date'\n,ol.loc_number 'loc_number'\n,ol.loc_name 'loc_name'\n,om.m_number 'member_number'\n,abae.bae_transaction_type 'transaction_type'\n,abae.bae_type 'transaction_payment_action'\n,abae.bae_amount 'transaction_amount'\n,ar.ref_status 'transaction_status'\n,ar.ref_number 'transaction_number'\n,apm.pame_type 'payment_method'\n,CASE WHEN apm.pame_brand IS NULL then apm.pame_subtype else  apm.pame_brand end as  'payment_method_type'\n,aset.stlm_posting_date\n--,CASE apm.pame_type\n--WHEN 'CREDIT_CARD' THEN 'Refunds.Cards'\n--WHEN 'BANK_ACCOUNT' THEN 'Refunds.ACH'\n--ELSE 'Refunds.Other'\n--END AS 'transaction_key'\n,CONCAT(abae.bae_transaction_type,'.',abae.bae_type,'.',apm.pame_type) 'transaction_key'\n,ISNULL(apm.pame_is_wire_transfer_type,0) as 'wire_transfer'\n,CASE apm.pame_type\nWHEN 'CREDIT_CARD' THEN 'WORLDPAY'\nWHEN 'BANK_ACCOUNT' THEN 'REGIONS'\nELSE 'Other'\nEND AS 'Processor'\nFROM stgrcm.abcbilling_billing_account_entry abae\nINNER JOIN stgrcm.organization_location ol on abae.loc_id = ol.loc_id\nINNER JOIN stgrcm.abcbilling_refund ar on abae.bae_transaction_id = ar.ref_id\nLEFT JOIN stgrcm.abcbilling_client_account_entry acae on ar.ref_id = acae.cae_transaction_id\nLEFT JOIN stgrcm.abcbilling_settlement aset on acae.stlm_id = aset.stlm_id\nINNER JOIN stgrcm.abcbilling_payment_method apm on ar.pame_id = apm.pame_id\nINNER JOIN stgrcm.abcbilling_payor_profile app on apm.payor_id = app.payor_id\nINNER JOIN stgrcm.organization_member om on app.m_id = om.m_id\nWHERE ar.ref_status = 'SUCCESS' \n) AS t\nWHERE t.transaction_modified_date >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')\n\tAND t.transaction_modified_date  < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}')\n   ORDER BY t.posting_date,t.loc_number,t.transaction_key,t.transaction_payment_action\n\n\t ",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										},
										"sink": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_name",
											"type": "String"
										},
										"sink": {
											"name": "loc_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_number",
											"type": "String"
										},
										"sink": {
											"name": "loc_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "member_number",
											"type": "String"
										},
										"sink": {
											"name": "member_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_type",
											"type": "String"
										},
										"sink": {
											"name": "transaction_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_action",
											"type": "String"
										},
										"sink": {
											"name": "transaction_action",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_status",
											"type": "String"
										},
										"sink": {
											"name": "transaction_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "bae_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "bae_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cae_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "cae_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "client_settlement_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "client_settlement_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "transaction_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "transaction_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "payment_method",
											"type": "String"
										},
										"sink": {
											"name": "payment_method",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "payment_method_type",
											"type": "String"
										},
										"sink": {
											"name": "payment_method_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_key",
											"type": "String"
										},
										"sink": {
											"name": "transaction_key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Processor",
											"type": "String"
										},
										"sink": {
											"name": "Processor",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "wire_transfer",
											"type": "Boolean"
										},
										"sink": {
											"name": "wire_transfer",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_ACCOUNTING_PAYMENT_TRANSACTION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-22T14:15:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACCOUNTING_Return_Transaction_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACCOUNTING_RETURN_TRANSACTION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Accounting].[Return_Transaction_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table ACCOUNTING.RETURN_TRANSACTION_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACCOUNTING_RETURN_TRANSACTION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select\naar.tran_unique_transaction_number\n,aar.ar_id as id\n,acae.cae_posting_date\n,abae.bae_posting_date\n,aset.stlm_posting_date 'client_settlement_date'\n,ol.loc_number\n,ol.loc_name\n,om.m_number 'member_number'\n,app.pp_account_number 'payor_account_number'\n,om.m_name_first\n,om.m_name_last\n,abae.bae_transaction_type 'return_type'\n,abae.bae_type 'return_payment_action'\n,abae.bae_amount 'return_amount'\n,apm.pame_subtype\n,CASE when apm.pame_brand IS NULL then 'BANK' else  apm.pame_brand end as  'pame_brand'\n,aar.ar_number\n,apm.pame_routing\n,ap.pay_status  'transaction_status'\n,convert(DATE,aar.ar_transaction_date) 'ar_transaction_date'\n,ap.pay_number 'transaction_number'\n--,'Returns.ACH' AS 'transaction_key'\n,abae.bae_transaction_type AS 'transaction_key'\n,aar.ar_modified AS 'transaction_modified_date'\n,'REGIONS' AS 'Processor'\nFROM stgrcm.abcbilling_billing_account_entry abae\nINNER JOIN stgrcm.organization_location ol on abae.loc_id = ol.loc_id\nINNER JOIN stgrcm.abcbilling_ach_return aar on abae.bae_transaction_id = aar.ar_id\nINNER JOIN stgrcm.abcbilling_client_account_entry acae on aar.ar_id = acae.cae_transaction_id\nLEFT JOIN stgrcm.abcbilling_settlement aset on acae.stlm_id = aset.stlm_id\nINNER JOIN stgrcm.abcbilling_payment ap on aar.pay_id = ap.pay_id\nINNER JOIN stgrcm.abcbilling_payment_method apm on ap.pame_id = apm.pame_id\nINNER JOIN stgrcm.abcbilling_payor_profile app on apm.payor_id = app.payor_id\nINNER JOIN stgrcm.organization_member om on app.m_id = om.m_id\nWHERE aar.ar_modified >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')\n\tAND aar.ar_modified < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}')\nUNION ALL\nselect \n     aar.tran_unique_transaction_number\n    ,ad.dep_id as id\n\t,acae.cae_posting_date\n    ,abae.bae_posting_date\n    ,aset.stlm_posting_date 'client_settlement_date'\n    ,ol.loc_number\n\t,ol.loc_name\n    ,om.m_number 'member_number'\n    ,app.pp_account_number 'payor_account_number'\n    ,om.m_name_first\n    ,om.m_name_last\n    ,acae.cae_transaction_type 'return_type'\n    ,acae.cae_type 'return_payment_action'\n    ,acae.cae_amount 'return_amount'\n    ,apm.pame_subtype\n\t,CASE when apm.pame_brand IS NULL then 'BANK' else  apm.pame_brand end as  'pame_brand'\n    ,aar.ar_number\n    ,apm.pame_routing\n\t,ad.dep_status 'transaction_status'\n    ,convert(DATE,aar.ar_transaction_date)  'ar_transaction_date'\n    ,ad.dep_number 'transaction_number'\n    ,acae.cae_transaction_type AS 'transaction_key'\n\t,ad.dep_modified AS 'transaction_modified_date'\n    ,'REGIONS' AS 'Processor'\nFROM StgRCM.abcbilling_client_account_entry acae\nINNER JOIN StgRCM.abcbilling_client_account aca on acae.client_id = aca.client_id\nINNER JOIN StgRCM.organization_location ol on aca.loc_id = ol.loc_id\nINNER JOIN StgRCM.abcbilling_ach_return aar on acae.cae_transaction_id = aar.ar_id\nLEFT JOIN StgRCM.abcbilling_billing_account_entry abae on aar.ar_id = abae.bae_transaction_id\nINNER JOIN StgRCM.abcbilling_deposit ad on aar.dep_id = ad.dep_id\nLEFT JOIN StgRCM.abcbilling_settlement aset on acae.stlm_id = aset.stlm_id\nLEFT JOIN StgRCM.abcbilling_payment_method apm on ad.pame_id = apm.pame_id\nLEFT JOIN StgRCM.abcbilling_payor_profile app on apm.payor_id = app.payor_id\nLEFT JOIN StgRCM.organization_member om on app.m_id = om.m_id\nWHERE ad.dep_modified >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')\n\tAND ad.dep_modified < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}')\n\t",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										},
										"sink": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "String"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cae_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "cae_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "bae_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "bae_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "client_settlement_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "client_settlement_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "loc_number",
											"type": "String"
										},
										"sink": {
											"name": "loc_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_name",
											"type": "String"
										},
										"sink": {
											"name": "loc_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "member_number",
											"type": "String"
										},
										"sink": {
											"name": "member_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "payor_account_number",
											"type": "String"
										},
										"sink": {
											"name": "payor_account_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "m_name_first",
											"type": "String"
										},
										"sink": {
											"name": "m_name_first",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "m_name_last",
											"type": "String"
										},
										"sink": {
											"name": "m_name_last",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "return_type",
											"type": "String"
										},
										"sink": {
											"name": "return_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "return_payment_action",
											"type": "String"
										},
										"sink": {
											"name": "return_payment_action",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "return_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "return_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "pame_subtype",
											"type": "String"
										},
										"sink": {
											"name": "pame_subtype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pame_brand",
											"type": "String"
										},
										"sink": {
											"name": "pame_brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ar_number",
											"type": "String"
										},
										"sink": {
											"name": "ar_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pame_routing",
											"type": "String"
										},
										"sink": {
											"name": "pame_routing",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_status",
											"type": "String"
										},
										"sink": {
											"name": "transaction_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ar_transaction_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "ar_transaction_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "transaction_number",
											"type": "String"
										},
										"sink": {
											"name": "transaction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_key",
											"type": "String"
										},
										"sink": {
											"name": "transaction_key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Processor",
											"type": "String"
										},
										"sink": {
											"name": "Processor",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_ACCOUNTING_RETURN_TRANSACTION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-22T14:15:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACCOUNTING_UNMANAGED_ACH_RETURN_TRANSACTIONS_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACCOUNTING_UNMANAGED_ACH_RETURN_TRANSACTION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Accounting].[Unmanaged_Ach_Return_Transaction_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table ACCOUNTING.UNMANAGED_ACH_RETURN_TRANSACTION_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACCOUNTING_UNMANAGED_ACH_RETURN_TRANSACTION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "\tselect\n     auar.uar_id as 'Id'\n\t,acae.cae_posting_date\n    ,NULL as 'bae_posting_date'\n    ,aset.stlm_posting_date as 'client_settlement_date'\n    ,ol.loc_number\n\t,ol.loc_name\n    ,om.m_number as 'member_number'\n    ,app.pp_account_number as 'payor_account_number'\n    ,om.m_name_first\n    ,om.m_name_last\n    ,acae.cae_transaction_type as 'transaction_type'\n    ,acae.cae_type as 'type'\n    ,acae.cae_amount as 'amount'\n    ,aup.upay_pame_type as 'pame_subtype'\n    ,case when aup.upay_pame_type IS NULL then  'OTHER' else aup.upay_pame_type end as 'pame_brand'\n    ,auar.uar_number as 'ar_number'\n    ,NULL AS 'pame_routing'\n\t,aup.upay_status as 'pay_status'\n    ,CAST(aup.upay_posting_date AS DATE) 'ar_transaction_date'\n    ,aup.upay_number as 'pay_number'\n    ,auar.tran_unique_transaction_number\n    ,acae.cae_transaction_type AS 'transaction_key'\n    ,aup.upay_id\n    ,aup.upay_amount\n    ,aup.upay_due_date\n    ,aup.upay_effective_date\n    ,aup.upay_metadata   \n    ,aup.upay_retry_count   \n    ,aup.upay_created\n    ,aup.upay_modified    \n    ,auar.uar_amount\n    ,auar.uar_type\n    ,auar.uar_posting_date\n    ,auar.uar_created\n    ,auar.uar_account_holder_name\n    ,auar.uar_modified AS 'transaction_modified_date'\nFROM stgrcm.abcbilling_client_account_entry acae\nINNER JOIN stgrcm.abcbilling_client_account aca on acae.client_id = aca.client_id\nINNER JOIN stgrcm.organization_location ol on aca.loc_id = ol.loc_id\nINNER JOIN stgrcm.abcbilling_unmanaged_ach_return auar on acae.cae_transaction_id = auar.uar_id\nLEFT JOIN stgrcm.abcbilling_settlement aset on acae.stlm_id = aset.stlm_id\n/*INNER JOIN stgrcm.abcbilling_unmanaged_payment aup on auar.upay_id = aup.upay_id */\nLEFT JOIN stgrcm.abcbilling_unmanaged_payment aup on auar.upay_id = aup.upay_id\nLEFT JOIN stgrcm.abcbilling_payment_method apm on aup.tok_id = apm.tok_id\nLEFT JOIN stgrcm.abcbilling_payor_profile app on apm.payor_id = app.payor_id\nLEFT JOIN stgrcm.organization_member om on app.m_id = om.m_id\nWHERE auar.uar_modified >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')\n\tAND auar.uar_modified < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cae_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "cae_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "bae_posting_date",
											"type": "Int32"
										},
										"sink": {
											"name": "bae_posting_date",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "client_settlement_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "client_settlement_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "loc_number",
											"type": "String"
										},
										"sink": {
											"name": "loc_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_name",
											"type": "String"
										},
										"sink": {
											"name": "loc_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "member_number",
											"type": "String"
										},
										"sink": {
											"name": "member_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "payor_account_number",
											"type": "String"
										},
										"sink": {
											"name": "payor_account_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "m_name_first",
											"type": "String"
										},
										"sink": {
											"name": "m_name_first",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "m_name_last",
											"type": "String"
										},
										"sink": {
											"name": "m_name_last",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_type",
											"type": "String"
										},
										"sink": {
											"name": "transaction_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "pame_subtype",
											"type": "String"
										},
										"sink": {
											"name": "pame_subtype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pame_brand",
											"type": "String"
										},
										"sink": {
											"name": "pame_brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ar_number",
											"type": "String"
										},
										"sink": {
											"name": "ar_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pame_routing",
											"type": "Int32"
										},
										"sink": {
											"name": "pame_routing",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "pay_status",
											"type": "String"
										},
										"sink": {
											"name": "pay_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ar_transaction_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "ar_transaction_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "pay_number",
											"type": "String"
										},
										"sink": {
											"name": "pay_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										},
										"sink": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_key",
											"type": "String"
										},
										"sink": {
											"name": "transaction_key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "upay_id",
											"type": "String"
										},
										"sink": {
											"name": "upay_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "upay_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "upay_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "upay_due_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "upay_due_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "upay_effective_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "upay_effective_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "upay_metadata",
											"type": "String"
										},
										"sink": {
											"name": "upay_metadata",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "upay_retry_count",
											"type": "Int16"
										},
										"sink": {
											"name": "upay_retry_count",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "upay_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "upay_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "upay_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "upay_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "uar_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "uar_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "uar_type",
											"type": "String"
										},
										"sink": {
											"name": "uar_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uar_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "uar_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "uar_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "uar_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "uar_account_holder_name",
											"type": "String"
										},
										"sink": {
											"name": "uar_account_holder_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_ACCOUNTING_UNMANAGED_ACH_RETURN_TRANSACTION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T15:45:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACCOUNTING_UNMANAGED_CHARGEBACKS_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACCOUNTING_UNMANAGED_CHARGEBACKS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Accounting].[Unmanaged_Chargebacks_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table ACCOUNTING.UNMANAGED_CHARGEBACKS_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACCOUNTING_UNMANAGED_CHARGEBACKS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select \n\tauc.ucb_id AS ID\n\t,acae.cae_posting_date\n    ,NULL as 'bae_posting_date'\n    ,aset.stlm_posting_date 'client_settlement_date'\n    ,ol.loc_number\n\t,ol.loc_name\n    ,om.m_number 'member_number'\n    ,app.pp_account_number 'payor_account_number'\n    ,om.m_name_first\n    ,om.m_name_last\n    ,acae.cae_transaction_type as 'bae_transaction_type'\n    ,acae.cae_type as 'bae_type'\n    ,acae.cae_amount as 'bae_amount'\n    ,apm.pame_subtype\n\t,isnull(aup.upay_pame_type , 'OTHER') as  'pame_brand'\n    ,auc.ucb_number as 'cb_number'\n\t,aup.upay_status as 'pay_status'\n\t,aup.upay_effective_date as 'cb_transaction_date'\n    ,aup.upay_number as 'pay_number'\n    ,auc.tran_unique_transaction_number\n    ,acae.cae_transaction_type AS 'transaction_key'\n\t,auc.ucb_amount\n\t,auc.ucb_type\n\t,auc.ucb_posting_date\n\t,auc.upay_id\n\t,auc.ucb_created\n\t,auc.ucb_account_holder_name\n\t,auc.ucb_credit_card_bin\n\t,auc.ucb_modified  As transaction_modified_date\nFROM StgRCM.ABCBILLING_CLIENT_ACCOUNT_ENTRY acae\nINNER JOIN StgRCM.ABCBILLING_CLIENT_ACCOUNT aca on acae.client_id = aca.client_id\nINNER JOIN StgRCM.ORGANIZATION_LOCATION ol on aca.loc_id = ol.loc_id\nINNER JOIN StgRCM.ABCBILLING_UNMANAGED_CHARGEBACK auc on acae.cae_transaction_id = auc.ucb_id\nLEFT JOIN StgRCM.ABCBILLING_SETTLEMENT aset on acae.stlm_id = aset.stlm_id\nleft JOIN StgRCM.ABCBILLING_UNMANAGED_PAYMENT aup on auc.upay_id = aup.upay_id\nleft JOIN StgRCM.ABCBILLING_PAYMENT_METHOD apm on aup.tok_id = apm.tok_id\nleft JOIN StgRCM.ABCBILLING_PAYOR_PROFILE app on apm.payor_id = app.payor_id\nleft JOIN StgRCM.ORGANIZATION_MEMBER om on app.m_id = om.m_id\nWHERE auc.ucb_modified  >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')\n\tAND auc.ucb_modified  < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}')\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cae_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "cae_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "bae_posting_date",
											"type": "Int32"
										},
										"sink": {
											"name": "bae_posting_date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "client_settlement_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "client_settlement_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "loc_number",
											"type": "String"
										},
										"sink": {
											"name": "loc_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_name",
											"type": "String"
										},
										"sink": {
											"name": "loc_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "member_number",
											"type": "String"
										},
										"sink": {
											"name": "member_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "payor_account_number",
											"type": "String"
										},
										"sink": {
											"name": "payor_account_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "m_name_first",
											"type": "String"
										},
										"sink": {
											"name": "m_name_first",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "m_name_last",
											"type": "String"
										},
										"sink": {
											"name": "m_name_last",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bae_transaction_type",
											"type": "String"
										},
										"sink": {
											"name": "bae_transaction_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bae_type",
											"type": "String"
										},
										"sink": {
											"name": "bae_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bae_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "bae_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "pame_subtype",
											"type": "String"
										},
										"sink": {
											"name": "pame_subtype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pame_brand",
											"type": "String"
										},
										"sink": {
											"name": "pame_brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cb_number",
											"type": "String"
										},
										"sink": {
											"name": "cb_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pay_status",
											"type": "String"
										},
										"sink": {
											"name": "pay_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cb_transaction_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "cb_transaction_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "pay_number",
											"type": "String"
										},
										"sink": {
											"name": "pay_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										},
										"sink": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_key",
											"type": "String"
										},
										"sink": {
											"name": "transaction_key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ucb_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ucb_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ucb_type",
											"type": "String"
										},
										"sink": {
											"name": "ucb_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ucb_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "ucb_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "upay_id",
											"type": "String"
										},
										"sink": {
											"name": "upay_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ucb_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ucb_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ucb_account_holder_name",
											"type": "String"
										},
										"sink": {
											"name": "ucb_account_holder_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ucb_credit_card_bin",
											"type": "String"
										},
										"sink": {
											"name": "ucb_credit_card_bin",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_ACCOUNTING_UNMANAGED_CHARGEBACKS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-27T13:42:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACCOUNTING_UNMANAGED_PAYMENT_REFUND_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACCOUNTING_UNMANAGED_PAYMENT_REFUND",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Accounting].[Unmanaged_Payment_Refund_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table ACCOUNTING.UNMANAGED_PAYMENT_REFUND_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACCOUNTING_UNMANAGED_PAYMENT_REFUND",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "SELECT\n\tt.tran_unique_transaction_number\n\t,Id\n\t,t.loc_name 'loc_name'\n    ,t.loc_number 'loc_number'\n    ,t.member_number\n\t,t.transaction_type 'transaction_type'\n\t,t.transaction_payment_action AS 'transaction_action'\n\t,t.transaction_status\n\t,t.posting_date\n    ,t.bae_posting_date\n    ,t.cae_posting_date\n    ,t.stlm_posting_date 'client_settlement_date'\n\t,t.transaction_amount 'transaction_amount'\n    ,t.payment_method\n    ,t.payment_method_type\n    ,t.payment_method_last_four\n    ,CONCAT(t.transaction_type,'.',t.transaction_payment_action,'.',t.payment_method_type) 'transaction_key'\n    ,t.transaction_modified_date\nFROM (\nSELECT \n\taup.tran_unique_transaction_number\n\t,upay_id as Id\n\t,aup.upay_effective_date 'posting_date'\n    ,acae.cae_posting_date 'cae_posting_date'\n    ,NULL AS 'bae_posting_date'\n    ,ol.loc_number 'loc_number'\n\t,ol.loc_name 'loc_name'\n    ,om.m_number 'member_number'\n    ,acae.cae_transaction_type 'transaction_type'\n    ,acae.cae_type 'transaction_payment_action'\n    ,acae.cae_amount 'transaction_amount'\n    ,aup.upay_status 'transaction_status'\n\t,aup.upay_number 'transaction_number'\n    ,aup.upay_pame_type 'payment_method'\n    ,CASE aup.upay_pame_type\n\t\tWHEN 'CHECKING' THEN 'BANK'\n        WHEN 'SAVINGS' THEN 'BANK'\n        WHEN 'VISA' THEN 'CREDIT_CARD'\n        WHEN 'MASTERCARD' THEN 'CREDIT_CARD'\n        WHEN 'AMEX' THEN 'CREDIT_CARD'\n        WHEN 'DISCOVER' THEN 'CREDIT_CARD'\n        ELSE 'OTHER'\n    END AS 'payment_method_type'\n    ,NULL AS 'payment_method_last_four'\n    ,aset.stlm_posting_date\n    ,aup.upay_modified 'transaction_modified_date'\nFROM stgrcm.abcbilling_client_account_entry acae\nINNER JOIN stgrcm.abcbilling_client_account aca on acae.client_id = aca.client_id\nINNER JOIN stgrcm.organization_location ol on aca.loc_id = ol.loc_id\nINNER JOIN stgrcm.abcbilling_unmanaged_payment aup on acae.cae_transaction_id = aup.upay_id\nLEFT JOIN stgrcm.abcbilling_settlement aset on acae.stlm_id = aset.stlm_id\nLEFT JOIN stgrcm.abcbilling_payment_method apm on aup.tok_id = apm.tok_id\nLEFT JOIN stgrcm.abcbilling_payor_profile app on apm.payor_id = app.payor_id\nLEFT JOIN stgrcm.organization_member om on app.m_id = om.m_id\nUNION ALL\nselect \n\taur.tran_unique_transaction_number\n\t,uref_id as Id\n\t,acae.cae_posting_date 'posting_date'\n    ,acae.cae_posting_date 'cae_posting_date'\n    ,NULL 'bae_posting_date'\n    ,ol.loc_number 'loc_number'\n\t,ol.loc_name 'loc_name'\n    ,om.m_number 'member_number'\n    ,acae.cae_transaction_type 'transaction_type'\n    ,acae.cae_type 'transaction_payment_action'\n    ,acae.cae_amount 'transaction_amount'\n    ,NULL AS 'transaction_status'\n\t,aur.uref_number 'transaction_number'\n    ,aur.uref_pame_type 'payment_method'\n    ,CASE aur.uref_pame_type\n\t\tWHEN 'CHECKING' THEN 'BANK'\n        WHEN 'SAVINGS' THEN 'BANK'\n        WHEN 'VISA' THEN 'CREDIT_CARD'\n        WHEN 'MASTERCARD' THEN 'CREDIT_CARD'\n        WHEN 'AMEX' THEN 'CREDIT_CARD'\n        WHEN 'DISCOVER' THEN 'CREDIT_CARD'\n        ELSE 'OTHER'\n    END AS 'payment_method_type'\n    ,NULL AS 'payment_method_last_four'\n    ,aset.stlm_posting_date\n    ,aur.uref_modified 'transaction_modified_date'\nFROM stgrcm.abcbilling_client_account_entry acae\nINNER JOIN stgrcm.abcbilling_client_account aca on acae.client_id = aca.client_id\nINNER JOIN stgrcm.organization_location ol on aca.loc_id = ol.loc_id\nINNER JOIN stgrcm.abcbilling_unmanaged_refund aur on acae.cae_transaction_id = aur.uref_id\nLEFT JOIN stgrcm.abcbilling_settlement aset on acae.stlm_id = aset.stlm_id\nLEFT JOIN stgrcm.abcbilling_payment_method apm on aur.tok_id = apm.tok_id\nLEFT JOIN stgrcm.abcbilling_payor_profile app on apm.payor_id = app.payor_id\nLEFT JOIN stgrcm.organization_member om on app.m_id = om.m_id\n\n) AS t\nWHERE t.transaction_modified_date  >= CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}')\n\tAND t.transaction_modified_date   < CONVERT(datetime,'@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}')\nORDER BY t.posting_date,t.loc_number,t.transaction_type,t.transaction_payment_action,t.payment_method_type;",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										},
										"sink": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_name",
											"type": "String"
										},
										"sink": {
											"name": "loc_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_number",
											"type": "String"
										},
										"sink": {
											"name": "loc_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "member_number",
											"type": "String"
										},
										"sink": {
											"name": "member_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_type",
											"type": "String"
										},
										"sink": {
											"name": "transaction_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_action",
											"type": "String"
										},
										"sink": {
											"name": "transaction_action",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_status",
											"type": "String"
										},
										"sink": {
											"name": "transaction_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bae_posting_date",
											"type": "Int32"
										},
										"sink": {
											"name": "bae_posting_date",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "cae_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "cae_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "client_settlement_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "client_settlement_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "transaction_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "transaction_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "payment_method",
											"type": "String"
										},
										"sink": {
											"name": "payment_method",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "payment_method_type",
											"type": "String"
										},
										"sink": {
											"name": "payment_method_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "payment_method_last_four",
											"type": "Int32"
										},
										"sink": {
											"name": "payment_method_last_four",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "transaction_key",
											"type": "String"
										},
										"sink": {
											"name": "transaction_key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "transaction_modified_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_ACCOUNTING_UNMANAGED_PAYMENT_REFUND_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T15:45:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACTIONTYPES_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACTIONTYPES_INCR",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select * from betadata.actiontypes;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table StgDatatrak.STG_ACTIONTYPES_INCR;\nselect 0;",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AT_ID"
										},
										"sink": {
											"name": "AT_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AT_NAME"
										},
										"sink": {
											"name": "AT_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AT_ABC_CODE"
										},
										"sink": {
											"name": "AT_ABC_CODE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SRC_BETADATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_DT_ACTIONTYPES_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACTIONTYPES_INCR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_ACTIONTYPES_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTENTRYQUEUEREF_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AgreementEntryQueueRef",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "BETADATA.AGREEMENTENTRYQUEUEREF"
										},
										{
											"name": "Destination",
											"value": "ABCPI.STG_AGREEMENTENTRYQUEUEREF"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.AGREEMENTENTRYQUEUEREF\nwhere AEQR_QUEUE_DATE >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND AEQR_QUEUE_DATE < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "AEQR_ID",
														"type": "String"
													},
													"sink": {
														"name": "AEQR_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AEQR_QUEUE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "AEQR_QUEUE_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "AEQ_ID",
														"type": "String"
													},
													"sink": {
														"name": "AEQ_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AET_ID",
														"type": "String"
													},
													"sink": {
														"name": "AET_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_ID",
														"type": "String"
													},
													"sink": {
														"name": "APP_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "A_ID",
														"type": "String"
													},
													"sink": {
														"name": "A_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "E_ID",
														"type": "String"
													},
													"sink": {
														"name": "E_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AEEF_ID",
														"type": "String"
													},
													"sink": {
														"name": "AEEF_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DOC_ID",
														"type": "String"
													},
													"sink": {
														"name": "DOC_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AET_ID_ORIGINAL",
														"type": "String"
													},
													"sink": {
														"name": "AET_ID_ORIGINAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AEQR_USE_2010_EAE",
														"type": "String"
													},
													"sink": {
														"name": "AEQR_USE_2010_EAE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AEQR_ALT_PAY_ELIGIBLE",
														"type": "String"
													},
													"sink": {
														"name": "AEQR_ALT_PAY_ELIGIBLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AEQR_EXPIRE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "AEQR_EXPIRE_DATE",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_AGREEMENTENTRYQUEUEREFOLD",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_AGREEMENTENTRYQUEUEREF_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_AGREEMENTENTRYQUEUEREF_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[Stg_AgreementEntryQueueRef_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group1"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTENTRYSOURCE_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AgreementEntrySource_SQLPOOL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select * from BETADATA.AGREEMENTENTRYSOURCE",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table StgDatatrak.stg_agreemententrysource_incr;",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AES_ID",
											"type": "String"
										},
										"sink": {
											"name": "AES_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AES_NAME",
											"type": "String"
										},
										"sink": {
											"name": "AES_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AES_AUTO_POST",
											"type": "String"
										},
										"sink": {
											"name": "AES_AUTO_POST",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AES_REPORT_NAME",
											"type": "String"
										},
										"sink": {
											"name": "AES_REPORT_NAME",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SRC_BETADATA_AGREEMENTENTRYSOURCE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_DT_AGREEMENTENTRYSOURCE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "AgreementEntrySource_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTENTRYSOURCE_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTENTRYTYPES_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AGREEMENTENTRYTYPES_SQLPOOL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select * from betadata.agreemententrytypes;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table StgDatatrak.stg_agreemententrytypes_incr;",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AET_ID",
											"type": "String"
										},
										"sink": {
											"name": "AET_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AET_NAME",
											"type": "String"
										},
										"sink": {
											"name": "AET_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AET_ABC_CODE",
											"type": "String"
										},
										"sink": {
											"name": "AET_ABC_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AET_NEW",
											"type": "String"
										},
										"sink": {
											"name": "AET_NEW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AET_NAME_REPORT",
											"type": "String"
										},
										"sink": {
											"name": "AET_NAME_REPORT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AET_QUEUE",
											"type": "String"
										},
										"sink": {
											"name": "AET_QUEUE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SRC_BETADATA_AGREEMENTENTRYTYPES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_DT_AGREEMENTENTRYTYPES_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "AGREEMENTENTRYTYPES_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTENTRYTYPES_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTPAYMENTMETHODS_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AgreementPaymentMethods_SQLPOOL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select * from betadata.agreementpaymentmethods;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "Truncate table StgDatatrak.stg_agreementpaymentmethods_incr;",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "APM_ID",
											"type": "String"
										},
										"sink": {
											"name": "APM_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "APM_NAME",
											"type": "String"
										},
										"sink": {
											"name": "APM_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "APM_ABC_CODE",
											"type": "String"
										},
										"sink": {
											"name": "APM_ABC_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "APM_ALLOW_NEW",
											"type": "String"
										},
										"sink": {
											"name": "APM_ALLOW_NEW",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "APM_ALLOW_FOR_ALT_PAY",
											"type": "String"
										},
										"sink": {
											"name": "APM_ALLOW_FOR_ALT_PAY",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SRC_BETADATA_AGREEMENTPAYMENTMETHODS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_DT_AGREEMENTPAYMENTMETHODS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "AgreementPaymentMethods_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTPAYMENTMETHODS_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTPAYMENTPLANSCHEDULES_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTPAYMENTPLANSCHEDULES_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_AGREEMENTPAYMENTPLANSCHEDULES_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AGREEMENTPAYMENTPLANSCHEDULES_SQLPOOL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.agreementpaymentplanschedules\nwhere APPS_MODIFIED>= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND APPS_MODIFIED< TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											},
											"disableMetricsCollection": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPS_ID",
														"type": "String"
													},
													"sink": {
														"name": "APPS_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APPS_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "APPS_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "APPS_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "APPS_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "APPS_SCHEDULE_TYPE",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPS_SCHEDULE_TYPE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPS_RECURRING",
														"type": "String"
													},
													"sink": {
														"name": "APPS_RECURRING",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APPS_NUMBER_OF_PAYMENTS",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPS_NUMBER_OF_PAYMENTS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPS_DEFAULT_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPS_DEFAULT_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPS_MIN_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPS_MIN_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPS_MAX_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPS_MAX_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPS_SORT_ORDER",
														"type": "Decimal"
													},
													"sink": {
														"name": "APPS_SORT_ORDER",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APP_ID",
														"type": "String"
													},
													"sink": {
														"name": "APP_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "HPC_ID",
														"type": "String"
													},
													"sink": {
														"name": "HPC_ID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_Agreementpaymentplanschedules_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group5"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTPAYMENTPLANS_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AgreementPaymentPlans",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.AGREEMENTPAYMENTPLANS\nwhere APP_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND APP_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APP_ID",
														"type": "String"
													},
													"sink": {
														"name": "APP_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "APP_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "APP_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "APP_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "APP_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "APP_ACTIVE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_ABC_CODE",
														"type": "String"
													},
													"sink": {
														"name": "APP_ABC_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_NAME",
														"type": "String"
													},
													"sink": {
														"name": "APP_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_ADDITIONAL_MEMBERS_ALLOWED",
														"type": "Decimal"
													},
													"sink": {
														"name": "APP_ADDITIONAL_MEMBERS_ALLOWED",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APP_ALLOW_AMOUNT_EDIT",
														"type": "String"
													},
													"sink": {
														"name": "APP_ALLOW_AMOUNT_EDIT",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_OVERRIDE_REQUIRED",
														"type": "String"
													},
													"sink": {
														"name": "APP_OVERRIDE_REQUIRED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_USE_APPROVAL_QUEUE",
														"type": "String"
													},
													"sink": {
														"name": "APP_USE_APPROVAL_QUEUE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_CASH_TERM_MONTHS",
														"type": "Decimal"
													},
													"sink": {
														"name": "APP_CASH_TERM_MONTHS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APPR_ID",
														"type": "String"
													},
													"sink": {
														"name": "APPR_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "AT_ID",
														"type": "String"
													},
													"sink": {
														"name": "AT_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_ID",
														"type": "String"
													},
													"sink": {
														"name": "ATL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATMP_ID",
														"type": "String"
													},
													"sink": {
														"name": "ATMP_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PSF_ID",
														"type": "String"
													},
													"sink": {
														"name": "PSF_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_DEFAULT_DUE_DAY",
														"type": "Decimal"
													},
													"sink": {
														"name": "APP_DEFAULT_DUE_DAY",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "CAPM_ID",
														"type": "String"
													},
													"sink": {
														"name": "CAPM_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_APPLY_ALL_FEES",
														"type": "String"
													},
													"sink": {
														"name": "APP_APPLY_ALL_FEES",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_DEFAULT_ABC_MANAGED",
														"type": "String"
													},
													"sink": {
														"name": "APP_DEFAULT_ABC_MANAGED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_WEB",
														"type": "String"
													},
													"sink": {
														"name": "APP_WEB",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DOCT_ID_WEB_TERMS",
														"type": "String"
													},
													"sink": {
														"name": "DOCT_ID_WEB_TERMS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_WEB_DESCRIPTION",
														"type": "String"
													},
													"sink": {
														"name": "APP_WEB_DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_WEB_NOTE",
														"type": "String"
													},
													"sink": {
														"name": "APP_WEB_NOTE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_WEB_EMAIL_GREETING",
														"type": "String"
													},
													"sink": {
														"name": "APP_WEB_EMAIL_GREETING",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_WEB_EMAIL_CLOSING",
														"type": "String"
													},
													"sink": {
														"name": "APP_WEB_EMAIL_CLOSING",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APM_ID",
														"type": "String"
													},
													"sink": {
														"name": "APM_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_COPY_CA_ABC_BILLING",
														"type": "String"
													},
													"sink": {
														"name": "APP_COPY_CA_ABC_BILLING",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PRO_ID",
														"type": "String"
													},
													"sink": {
														"name": "PRO_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_DAYS_FROM_BEGIN_DATE",
														"type": "Decimal"
													},
													"sink": {
														"name": "APP_DAYS_FROM_BEGIN_DATE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APP_FREE_MONTHS_DEFAULT",
														"type": "Decimal"
													},
													"sink": {
														"name": "APP_FREE_MONTHS_DEFAULT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APP_FREE_MONTHS_MIN",
														"type": "Decimal"
													},
													"sink": {
														"name": "APP_FREE_MONTHS_MIN",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APP_FREE_MONTHS_MAX",
														"type": "Decimal"
													},
													"sink": {
														"name": "APP_FREE_MONTHS_MAX",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "FMO_ID",
														"type": "String"
													},
													"sink": {
														"name": "FMO_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LPO_ID",
														"type": "String"
													},
													"sink": {
														"name": "LPO_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_SKIP_MONTHS",
														"type": "String"
													},
													"sink": {
														"name": "APP_SKIP_MONTHS",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_LIMITED_AVAILABILITY",
														"type": "String"
													},
													"sink": {
														"name": "APP_LIMITED_AVAILABILITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_FEE_DOM_FROM_PRIMARY",
														"type": "String"
													},
													"sink": {
														"name": "APP_FEE_DOM_FROM_PRIMARY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_PAYMENTS_VISIBLE",
														"type": "String"
													},
													"sink": {
														"name": "APP_PAYMENTS_VISIBLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_FEES_VISIBLE",
														"type": "String"
													},
													"sink": {
														"name": "APP_FEES_VISIBLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CGI_ID_COMM",
														"type": "String"
													},
													"sink": {
														"name": "CGI_ID_COMM",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "CCV_ID",
														"type": "String"
													},
													"sink": {
														"name": "CCV_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_DAY_OF_WEEK_DUE_DAY",
														"type": "Decimal"
													},
													"sink": {
														"name": "APP_DAY_OF_WEEK_DUE_DAY",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APP_PRIMARY_PHOTO_REQUIRED",
														"type": "String"
													},
													"sink": {
														"name": "APP_PRIMARY_PHOTO_REQUIRED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_ACTIVE_PRESALE",
														"type": "String"
													},
													"sink": {
														"name": "APP_ACTIVE_PRESALE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_START_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "APP_START_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "APP_END_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "APP_END_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "PPC_ID",
														"type": "String"
													},
													"sink": {
														"name": "PPC_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_AUTO_PAY_ZERO",
														"type": "String"
													},
													"sink": {
														"name": "APP_AUTO_PAY_ZERO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PSF_ID_RENEWAL",
														"type": "String"
													},
													"sink": {
														"name": "PSF_ID_RENEWAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_DOWN_PAYMENT_MAX_DAYS",
														"type": "Decimal"
													},
													"sink": {
														"name": "APP_DOWN_PAYMENT_MAX_DAYS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APP_DOWN_PAYMENT_SCHEDULE",
														"type": "String"
													},
													"sink": {
														"name": "APP_DOWN_PAYMENT_SCHEDULE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_ALT_PAY_ELIGIBLE",
														"type": "String"
													},
													"sink": {
														"name": "APP_ALT_PAY_ELIGIBLE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_ALT_PAY_TYPE_PREFERRED",
														"type": "String"
													},
													"sink": {
														"name": "APP_ALT_PAY_TYPE_PREFERRED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_ONLINE_SIGNUP_DRAFT_METHOD",
														"type": "String"
													},
													"sink": {
														"name": "APP_ONLINE_SIGNUP_DRAFT_METHOD",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_WEB_DISPLAY_LOCATION",
														"type": "String"
													},
													"sink": {
														"name": "APP_WEB_DISPLAY_LOCATION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_INTRO_OFFER_RESTRICTION",
														"type": "Decimal"
													},
													"sink": {
														"name": "APP_INTRO_OFFER_RESTRICTION",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APP_FORCE_FEE_AFTER_FIRST_DUE",
														"type": "String"
													},
													"sink": {
														"name": "APP_FORCE_FEE_AFTER_FIRST_DUE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_DISPLAY_NAME",
														"type": "String"
													},
													"sink": {
														"name": "APP_DISPLAY_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APP_MEMBER_GROUP",
														"type": "String"
													},
													"sink": {
														"name": "APP_MEMBER_GROUP",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_AGREEMENTPAYMENTPLANS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_AGREEMENTPAYMENTPLANS_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_agreementpaymentplans_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTPAYMENTPLANS_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group1"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTPAYMENTSCHEDULES_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AgreementPaymentSchedules",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "ABCPI.STG_AGREEMENTPAYMENTSCHEDULES"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.AGREEMENTPAYMENTSCHEDULES\nwhere APS_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND APS_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APS_ID",
														"type": "String"
													},
													"sink": {
														"name": "APS_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APS_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "APS_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "APS_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "APS_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "APS_SCHEDULE_TYPE",
														"type": "Decimal"
													},
													"sink": {
														"name": "APS_SCHEDULE_TYPE",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APS_RECURRING",
														"type": "String"
													},
													"sink": {
														"name": "APS_RECURRING",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APS_NUMBER_OF_PAYMENTS",
														"type": "Decimal"
													},
													"sink": {
														"name": "APS_NUMBER_OF_PAYMENTS",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APS_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "APS_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APS_DEFAULT_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "APS_DEFAULT_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APS_MIN_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "APS_MIN_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APS_MAX_AMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "APS_MAX_AMOUNT",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "APS_FIRST_DUE_DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "APS_FIRST_DUE_DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "APS_SORT_ORDER",
														"type": "Decimal"
													},
													"sink": {
														"name": "APS_SORT_ORDER",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "A_ID",
														"type": "String"
													},
													"sink": {
														"name": "A_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "HPC_ID",
														"type": "String"
													},
													"sink": {
														"name": "HPC_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "APS_ACTIVE",
														"type": "String"
													},
													"sink": {
														"name": "APS_ACTIVE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_AGREEMENTPAYMENTSCHEDULES",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_AGREEMENTPAYMENTSCHEDULES_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_agreementpaymentschedules_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTPAYMENTSCHEDULES_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group1"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTPAYPLANRENEWTYPES_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "AGREEMENTPAYPLANRENEWTYPES_SQLPOOL_copy1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTPAYPLANRENEWTYPES_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_AGREEMENTPAYPLANRENEWTYPES_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "AGREEMENTPAYPLANRENEWTYPES_SQLPOOL_copy1_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "betadata.stg_members"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select * from BETADATA.AGREEMENTPAYPLANRENEWTYPES",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "APPRT_ID",
											"type": "String"
										},
										"sink": {
											"name": "APPRT_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "APPRT_NAME",
											"type": "String"
										},
										"sink": {
											"name": "APPRT_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "APPRT_ABC_CODE",
											"type": "String"
										},
										"sink": {
											"name": "APPRT_ABC_CODE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SRC_BETADATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_DT_STG_AGREEMENTPAYPLANRENEWTYPES_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTTERMS_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AgreementTerms_SQLPOOL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select * from betadata.agreementterms;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table StgDatatrak.STG_AGREEMENTTERMS_incr;",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AT_ID",
											"type": "String"
										},
										"sink": {
											"name": "AT_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AT_NAME",
											"type": "String"
										},
										"sink": {
											"name": "AT_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AT_ABC_CODE",
											"type": "String"
										},
										"sink": {
											"name": "AT_ABC_CODE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SRC_BETADATA_AGREEMENTTERMS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_DT_AGREEMENTTERMS_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "AgreementTerms_SQLPOOL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTTERMS_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTTYPECLUBREF_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Agreementtypeclubref",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Agreementtypeclubref_SQLPOOL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.AGREEMENTTYPECLUBREF\nwhere VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "SPL_ID",
														"type": "String"
													},
													"sink": {
														"name": "SPL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_ID",
														"type": "String"
													},
													"sink": {
														"name": "ATL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATCR_REQUIRED",
														"type": "String"
													},
													"sink": {
														"name": "ATCR_REQUIRED",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_AGREEMENTTYPECLUBREF",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_AGREEMENTTYPECLUBREF_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.stg_agreementtypeclubref_incr;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Agreementtypeclubref",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTTYPECLUBREF_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTTYPELOOKUP_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AgreementTypeLookUP",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "ABCPI.STG_AGREEMENTTYPELOOKUP"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.AGREEMENTTYPELOOKUP\nwhere ATL_MODIFIED >= TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI') \nAND ATL_MODIFIED < TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', 'YYYY-MM-DD HH24:MI')\nAND VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "ATL_ID",
														"type": "String"
													},
													"sink": {
														"name": "ATL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_CREATED",
														"type": "DateTime"
													},
													"sink": {
														"name": "ATL_CREATED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ATL_MODIFIED",
														"type": "DateTime"
													},
													"sink": {
														"name": "ATL_MODIFIED",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ATL_DEAD_COLUMN_2",
														"type": "String"
													},
													"sink": {
														"name": "ATL_DEAD_COLUMN_2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_ABC_ID",
														"type": "String"
													},
													"sink": {
														"name": "ATL_ABC_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_NAME",
														"type": "String"
													},
													"sink": {
														"name": "ATL_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_DESCRIPTION",
														"type": "String"
													},
													"sink": {
														"name": "ATL_DESCRIPTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_DEAD_COLUMN_1",
														"type": "String"
													},
													"sink": {
														"name": "ATL_DEAD_COLUMN_1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_REQUIRED",
														"type": "String"
													},
													"sink": {
														"name": "ATL_REQUIRED",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SDT_ID",
														"type": "String"
													},
													"sink": {
														"name": "SDT_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_ALLOW_REMOTE_CHECK_IN",
														"type": "String"
													},
													"sink": {
														"name": "ATL_ALLOW_REMOTE_CHECK_IN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_ACCESS_RESTRICTION",
														"type": "String"
													},
													"sink": {
														"name": "ATL_ACCESS_RESTRICTION",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_ACCESS_SCHEME",
														"type": "String"
													},
													"sink": {
														"name": "ATL_ACCESS_SCHEME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_ACCESS_SCHEME_ONLY",
														"type": "String"
													},
													"sink": {
														"name": "ATL_ACCESS_SCHEME_ONLY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ATL_MODIFIED_DW",
														"type": "DateTime"
													},
													"sink": {
														"name": "ATL_MODIFIED_DW",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "ATL_DEFAULT_CLUB_CREDIT_LIMIT",
														"type": "Decimal"
													},
													"sink": {
														"name": "ATL_DEFAULT_CLUB_CREDIT_LIMIT",
														"type": "Decimal"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_AGREEMENTTYPELOOKUP",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_STG_AGREEMENTTYPELOOKUP_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Truncate incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgDatatrak.[STG_AGREEMENTTYPELOOKUP_INCR];\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTTYPELOOKUP_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_Group1"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AGREEMENTTYPESERVICEITEMREF_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "AGREEMENTTYPESERVICEITEMREF_SQLPOOL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "select * from BETADATA.AGREEMENTTYPESERVICEITEMREF\nwhere VPD_ID in @{item().vpd_list}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "vifiles"
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "VPD_ID",
														"type": "Decimal"
													},
													"sink": {
														"name": "VPD_ID",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"name": "ATL_ID",
														"type": "String"
													},
													"sink": {
														"name": "ATL_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SAI_ID",
														"type": "String"
													},
													"sink": {
														"name": "SAI_ID",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_BETADATA_AGREEMENTTYPESERVICEITEMREF",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SNK_SYN_DT_AGREEMENTTYPESERVICEITEMREF_INCR",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "TRUNCATE INCR TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[abcpi].[GetVPDToLoad]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "TRUNCATE INCR TABLE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "TRUNCATE TABLE StgDatatrak.STG_AGREEMENTTYPESERVICEITEMREF_INCR;\nSELECT 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgDatatrak].[STG_AGREEMENTTYPESERVICEITEMREF_MERGE]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Oracle_SQLPOOL/Oracle_SQL_POOL_GroupNoDate"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		}
	]
}