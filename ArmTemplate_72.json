{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PlanetFitnessDF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ABCBILLING_Sales_Tax_Rate_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ABCBILLING_ABCBILLING_SALES_TAX_RATE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Abcbilling_Sales_Tax_Rate_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.Abcbilling_Sales_Tax_Rate_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ABCBILLING_ABCBILLING_SALES_TAX_RATE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \nLOWER(CONCAT (SUBSTR(HEX(str_id), 1, 8),'-',SUBSTR(HEX(str_id), 9, 4),'-',SUBSTR(HEX(str_id), 13, 4),'-',SUBSTR(HEX(str_id), 17, 4),'-',SUBSTR(HEX(str_id), 21))) AS str_id,\nLOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) AS loc_id,\nLOWER(CONCAT (SUBSTR(HEX(itca_id), 1, 8),'-',SUBSTR(HEX(itca_id), 9, 4),'-',SUBSTR(HEX(itca_id), 13, 4),'-',SUBSTR(HEX(itca_id), 17, 4),'-',SUBSTR(HEX(itca_id), 21))) AS itca_id,\nstr_start_date,\nstr_full_percentage_rate,\nstr_description,\nLOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id,\nstr_created,\nstr_modified,\nstr_federal_percentage_rate,\nstr_state_percentage_rate,\nstr_city_percentage_rate,\nstr_county_percentage_rate,\nstr_district_percentage_rate,\nstr_local_percentage_rate,\nstr_excise_percentage_rate,\nstr_other_percentage_rate,\nstr_legacy_percentage_rate,\nstr_is_taxable\nFROM abcbilling.sales_tax_rate\nWHERE str_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND str_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "str_id",
											"type": "String"
										},
										"sink": {
											"name": "str_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_id",
											"type": "String"
										},
										"sink": {
											"name": "itca_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "str_start_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "str_start_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "str_full_percentage_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "str_full_percentage_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "str_description",
											"type": "String"
										},
										"sink": {
											"name": "str_description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "str_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "str_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "str_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "str_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "str_federal_percentage_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "str_federal_percentage_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "str_state_percentage_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "str_state_percentage_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "str_city_percentage_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "str_city_percentage_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "str_county_percentage_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "str_county_percentage_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "str_district_percentage_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "str_district_percentage_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "str_local_percentage_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "str_local_percentage_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "str_excise_percentage_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "str_excise_percentage_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "str_other_percentage_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "str_other_percentage_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "str_legacy_percentage_rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "str_legacy_percentage_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "str_is_taxable",
											"type": "Boolean"
										},
										"sink": {
											"name": "str_is_taxable",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ABCBILLING_ABCBILLING_SALES_TAX_RATE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T14:09:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ABCBILLING_Settlement_Evaluation_Schedule_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ABCBILLING_SETTLEMENT_EVALUATION_SCHEDULE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Abcbilling_Settlement_Evaluation_Schedule_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ABCBILLING_SETTLEMENT_EVALUATION_SCHEDULE_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ABCBILLING_SETTLEMENT_EVALUATION_SCHEDULE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\nLOWER(CONCAT (SUBSTR(HEX(ses_id), 1, 8),'-',SUBSTR(HEX(ses_id), 9, 4),'-',SUBSTR(HEX(ses_id), 13, 4),'-',SUBSTR(HEX(ses_id), 17, 4),'-',SUBSTR(HEX(ses_id), 21))) AS ses_id\n,ses_frequency\n,LOWER(CONCAT (SUBSTR(HEX(client_id), 1, 8),'-',SUBSTR(HEX(client_id), 9, 4),'-',SUBSTR(HEX(client_id), 13, 4),'-',SUBSTR(HEX(client_id), 17, 4),'-',SUBSTR(HEX(client_id), 21))) AS client_id\n,ses_first_due_date\n,ses_created\n,ses_modified\n,LOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id\n,ses_end_date\n,ses_amount\n,LOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) AS loc_id\n,capm_type\n,ses_is_wire_processing_type\n,ses_next_settlement_date\n,ses_is_extra_deposit_required\nFROM abcbilling.settlement_evaluation_schedule\nWHERE ses_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND ses_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ses_id",
											"type": "String"
										},
										"sink": {
											"name": "ses_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ses_frequency",
											"type": "String"
										},
										"sink": {
											"name": "ses_frequency",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "client_id",
											"type": "String"
										},
										"sink": {
											"name": "client_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ses_first_due_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "ses_first_due_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ses_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ses_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ses_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ses_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ses_end_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "ses_end_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ses_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ses_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "capm_type",
											"type": "String"
										},
										"sink": {
											"name": "capm_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ses_is_wire_processing_type",
											"type": "Boolean"
										},
										"sink": {
											"name": "ses_is_wire_processing_type",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ses_next_settlement_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "ses_next_settlement_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ses_is_extra_deposit_required",
											"type": "Boolean"
										},
										"sink": {
											"name": "ses_is_extra_deposit_required",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ABCBILLING_SETTLEMENT_EVALUATION_SCHEDULE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-17T13:40:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ABCBILLING_Statement_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ABCBILLING_STATEMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Abcbilling_Statement_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ABCBILLING_STATEMENT_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ABCBILLING_STATEMENT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \nLOWER(CONCAT (SUBSTR(HEX(st_id), 1, 8),'-',SUBSTR(HEX(st_id), 9, 4),'-',SUBSTR(HEX(st_id), 13, 4),'-',SUBSTR(HEX(st_id), 17, 4),'-',SUBSTR(HEX(st_id), 21))) AS st_id\n,LOWER(CONCAT (SUBSTR(HEX(st_previous_st_id), 1, 8),'-',SUBSTR(HEX(st_previous_st_id), 9, 4),'-',SUBSTR(HEX(st_previous_st_id), 13, 4),'-',SUBSTR(HEX(st_previous_st_id), 17, 4),'-',SUBSTR(HEX(st_previous_st_id), 21))) AS st_previous_st_id\n,st_posting_date\n,st_balance\n,st_amount_due\n,LOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) AS loc_id\n,LOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id\n,st_created\n,st_modified\n,st_status\n,st_type\n,st_number\n,st_chargeable_amount\n,LOWER(CONCAT (SUBSTR(HEX(agrm_id), 1, 8),'-',SUBSTR(HEX(agrm_id), 9, 4),'-',SUBSTR(HEX(agrm_id), 13, 4),'-',SUBSTR(HEX(agrm_id), 17, 4),'-',SUBSTR(HEX(agrm_id), 21))) AS agrm_id\nFROM abcbilling.statement\nWHERE st_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND st_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "st_id",
											"type": "String"
										},
										"sink": {
											"name": "st_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "st_previous_st_id",
											"type": "String"
										},
										"sink": {
											"name": "st_previous_st_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "st_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "st_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "st_balance",
											"type": "Decimal"
										},
										"sink": {
											"name": "st_balance",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "st_amount_due",
											"type": "Decimal"
										},
										"sink": {
											"name": "st_amount_due",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "st_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "st_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "st_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "st_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "st_status",
											"type": "String"
										},
										"sink": {
											"name": "st_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "st_type",
											"type": "String"
										},
										"sink": {
											"name": "st_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "st_number",
											"type": "String"
										},
										"sink": {
											"name": "st_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "st_chargeable_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "st_chargeable_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "agrm_id",
											"type": "String"
										},
										"sink": {
											"name": "agrm_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ABCBILLING_STATEMENT_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-10T16:31:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ABCBILLING_Subscription_Item_Price_Adjustment_Config_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ABCBILLING_INVOICE_ITEM_PRICE_ADJUSTMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Abcbilling_Subscription_Item_Price_Adjustment_Config_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.Abcbilling_Subscription_Item_Price_Adjustment_Config_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ABCBILLING_INVOICE_ITEM_PRICE_ADJUSTMENT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\nLOWER(CONCAT (SUBSTR(HEX(sipac_id), 1, 8),'-',SUBSTR(HEX(sipac_id), 9, 4),'-',SUBSTR(HEX(sipac_id), 13, 4),'-',SUBSTR(HEX(sipac_id), 17, 4),'-',SUBSTR(HEX(sipac_id), 21))) AS sipac_id,\nsipac_type,\nsipac_amount,\nsipac_amount_type,\nsipac_direction,\nLOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) AS loc_id,\nLOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id,\nsipac_created,\nsipac_modified\nFROM abcbilling.subscription_item_price_adjustment_config\nWHERE sipac_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND sipac_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sipac_id",
											"type": "String"
										},
										"sink": {
											"name": "sipac_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sipac_type",
											"type": "String"
										},
										"sink": {
											"name": "sipac_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sipac_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "sipac_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "sipac_amount_type",
											"type": "String"
										},
										"sink": {
											"name": "sipac_amount_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sipac_direction",
											"type": "String"
										},
										"sink": {
											"name": "sipac_direction",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sipac_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "sipac_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "sipac_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "sipac_modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ABCBILLING_SUBSCRIPTION_ITEM_PRICE_ADJUSTMENT_CONFIG_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T14:09:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ABCBILLING_Subscription_Item_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ABCBILLING_SUBSCRIPTION_ITEM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Abcbilling_Subscription_Item_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"description": "",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ABCBILLING_SUBSCRIPTION_ITEM_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ABCBILLING_SUBSCRIPTION_ITEM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \nLOWER(CONCAT (SUBSTR(HEX(suit_id), 1, 8),'-',SUBSTR(HEX(suit_id), 9, 4),'-',SUBSTR(HEX(suit_id), 13, 4),'-',SUBSTR(HEX(suit_id), 17, 4),'-',SUBSTR(HEX(suit_id), 21))) AS suit_id ,\n suit_name,\n suit_type,\n suit_price,\n cur_id,\nLOWER(CONCAT (SUBSTR(HEX(sub_id), 1, 8),'-',SUBSTR(HEX(sub_id), 9, 4),'-',SUBSTR(HEX(sub_id), 13, 4),'-',SUBSTR(HEX(sub_id), 17, 4),'-',SUBSTR(HEX(sub_id), 21))) AS sub_id ,\nLOWER(CONCAT (SUBSTR(HEX(itca_id), 1, 8),'-',SUBSTR(HEX(itca_id), 9, 4),'-',SUBSTR(HEX(itca_id), 13, 4),'-',SUBSTR(HEX(itca_id), 17, 4),'-',SUBSTR(HEX(itca_id), 21))) AS itca_id ,\nLOWER(CONCAT (SUBSTR(HEX(it_id), 1, 8),'-',SUBSTR(HEX(it_id), 9, 4),'-',SUBSTR(HEX(it_id), 13, 4),'-',SUBSTR(HEX(it_id), 17, 4),'-',SUBSTR(HEX(it_id), 21))) AS it_id,\nit_version,\n suit_created,\n suit_modified,\nLOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id,\nsuit_tax_included,\n suit_est_tax_amount,\n suit_renewal_price,\n renewal_cur_id,\n suit_is_price_updated,\n suit_is_renewal_price_updated,\n suit_shared_revenue_percent,\n suit_shared_revenue_amount\nFROM  abcbilling.subscription_item\nWHERE suit_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND suit_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "suit_id",
											"type": "String"
										},
										"sink": {
											"name": "suit_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "suit_name",
											"type": "String"
										},
										"sink": {
											"name": "suit_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "suit_type",
											"type": "String"
										},
										"sink": {
											"name": "suit_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "suit_price",
											"type": "Decimal"
										},
										"sink": {
											"name": "suit_price",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "cur_id",
											"type": "String"
										},
										"sink": {
											"name": "cur_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sub_id",
											"type": "String"
										},
										"sink": {
											"name": "sub_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_id",
											"type": "String"
										},
										"sink": {
											"name": "itca_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_id",
											"type": "String"
										},
										"sink": {
											"name": "it_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_version",
											"type": "Int64"
										},
										"sink": {
											"name": "it_version",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "suit_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "suit_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "suit_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "suit_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "suit_tax_included",
											"type": "Boolean"
										},
										"sink": {
											"name": "suit_tax_included",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "suit_est_tax_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "suit_est_tax_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "suit_renewal_price",
											"type": "Decimal"
										},
										"sink": {
											"name": "suit_renewal_price",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "renewal_cur_id",
											"type": "String"
										},
										"sink": {
											"name": "renewal_cur_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "suit_is_price_updated",
											"type": "Boolean"
										},
										"sink": {
											"name": "suit_is_price_updated",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "suit_is_renewal_price_updated",
											"type": "Boolean"
										},
										"sink": {
											"name": "suit_is_renewal_price_updated",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "suit_shared_revenue_percent",
											"type": "Decimal"
										},
										"sink": {
											"name": "suit_shared_revenue_percent",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "suit_shared_revenue_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "suit_shared_revenue_amount",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ABCBILLING_SUBSCRIPTION_ITEM_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-11T11:45:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ABCBILLING_Subscription_Member_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ABCBILLING_SUBSCRIPTION_MEMBER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Abcbilling_Subscription_Member_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ABCBILLING_SUBSCRIPTION_MEMBER_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ABCBILLING_SUBSCRIPTION_MEMBER",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \nLOWER(CONCAT (SUBSTR(HEX(sub_id), 1, 8),'-',SUBSTR(HEX(sub_id), 9, 4),'-',SUBSTR(HEX(sub_id), 13, 4),'-',SUBSTR(HEX(sub_id), 17, 4),'-',SUBSTR(HEX(sub_id), 21))) AS sub_id ,\nLOWER(CONCAT (SUBSTR(HEX(m_id), 1, 8),'-',SUBSTR(HEX(m_id), 9, 4),'-',SUBSTR(HEX(m_id), 13, 4),'-',SUBSTR(HEX(m_id), 17, 4),'-',SUBSTR(HEX(m_id), 21))) AS m_id ,\nsume_created,\nLOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id\nFROM  abcbilling.subscription_member",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sub_id",
											"type": "String"
										},
										"sink": {
											"name": "sub_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "m_id",
											"type": "String"
										},
										"sink": {
											"name": "m_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sume_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "sume_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ABCBILLING_SUBSCRIPTION_MEMBER_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-13T20:40:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ABCBILLING_UNMANAGED_ACH_RETURN_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ABCBILLING_UNMANAGED_ACH_RETURN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Abcbilling_Unmanaged_Ach_Return_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.abcbilling_unmanaged_ach_return_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ABCBILLING_UNMANAGED_ACH_RETURN",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\nLOWER(CONCAT (SUBSTR(HEX(uar_id), 1, 8),'-',SUBSTR(HEX(uar_id), 9, 4),'-',SUBSTR(HEX(uar_id), 13, 4),'-',SUBSTR(HEX(uar_id), 17, 4),'-',SUBSTR(HEX(uar_id), 21))) AS uar_id\n,uar_number\n,uar_amount\n,uar_type\n,uar_posting_date\n,LOWER(CONCAT (SUBSTR(HEX(upay_id), 1, 8),'-',SUBSTR(HEX(upay_id), 9, 4),'-',SUBSTR(HEX(upay_id), 13, 4),'-',SUBSTR(HEX(upay_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) AS upay_id\n,tran_id\n,tran_unique_transaction_number\n,LOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) AS loc_id\n,LOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id\n,uar_created\n,uar_modified\n,uar_account_holder_name\nFROM abcbilling.unmanaged_ach_return\nWHERE uar_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND uar_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "uar_id",
											"type": "String"
										},
										"sink": {
											"name": "uar_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uar_number",
											"type": "String"
										},
										"sink": {
											"name": "uar_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uar_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "uar_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "uar_type",
											"type": "String"
										},
										"sink": {
											"name": "uar_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uar_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "uar_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "upay_id",
											"type": "String"
										},
										"sink": {
											"name": "upay_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tran_id",
											"type": "String"
										},
										"sink": {
											"name": "tran_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										},
										"sink": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uar_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "uar_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "uar_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "uar_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "uar_account_holder_name",
											"type": "String"
										},
										"sink": {
											"name": "uar_account_holder_name",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ABCBILLING_UNMANAGED_ACH_RETURN_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-16T16:34:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ABCBILLING_UNMANAGED_CHARGEBACK_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ABCBILLING_UNMANAGED_CHARGEBACK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Abcbilling_Unmanaged_Chargeback_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ABCBILLING_UNMANAGED_CHARGEBACK_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ABCBILLING_UNMANAGED_CHARGEBACK",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \nLOWER(CONCAT (SUBSTR(HEX(ucb_id), 1, 8),'-',SUBSTR(HEX(ucb_id), 9, 4),'-',SUBSTR(HEX(ucb_id), 13, 4),'-',SUBSTR(HEX(ucb_id), 17, 4),'-',SUBSTR(HEX(ucb_id), 21))) AS ucb_id ,\nucb_number,\nucb_amount,\nucb_type,\nucb_posting_date,\nucb_credit_card_last_four,\nucb_credit_card_first_six,\nLOWER(CONCAT (SUBSTR(HEX(upay_id), 1, 8),'-',SUBSTR(HEX(upay_id), 9, 4),'-',SUBSTR(HEX(upay_id), 13, 4),'-',SUBSTR(HEX(upay_id), 17, 4),'-',SUBSTR(HEX(upay_id), 21))) AS upay_id ,\ntran_id,\ntran_unique_transaction_number,\nLOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) AS loc_id ,\nLOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id ,\nucb_created,\nucb_modified,\nucb_account_holder_name,\nucb_credit_card_bin\nFROM abcbilling.unmanaged_chargeback\nWHERE  ucb_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND    ucb_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ucb_id",
											"type": "String"
										},
										"sink": {
											"name": "ucb_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ucb_number",
											"type": "String"
										},
										"sink": {
											"name": "ucb_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ucb_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ucb_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ucb_type",
											"type": "String"
										},
										"sink": {
											"name": "ucb_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ucb_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "ucb_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ucb_credit_card_last_four",
											"type": "String"
										},
										"sink": {
											"name": "ucb_credit_card_last_four",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ucb_credit_card_first_six",
											"type": "String"
										},
										"sink": {
											"name": "ucb_credit_card_first_six",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "upay_id",
											"type": "String"
										},
										"sink": {
											"name": "upay_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tran_id",
											"type": "String"
										},
										"sink": {
											"name": "tran_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										},
										"sink": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ucb_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ucb_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ucb_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ucb_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ucb_account_holder_name",
											"type": "String"
										},
										"sink": {
											"name": "ucb_account_holder_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ucb_credit_card_bin",
											"type": "String"
										},
										"sink": {
											"name": "ucb_credit_card_bin",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ABCBILLING_UNMANAGED_CHARGEBACK_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-16T16:34:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ABCBILLING_UNMANAGED_PAYMENT_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ABCBILLING_UNMANAGED_PAYMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Abcbilling_Unmanaged_Payment_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ABCBILLING_UNMANAGED_PAYMENT_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ABCBILLING_UNMANAGED_PAYMENT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \nLOWER(CONCAT (SUBSTR(HEX(upay_id), 1, 8),'-',SUBSTR(HEX(upay_id), 9, 4),'-',SUBSTR(HEX(upay_id), 13, 4),'-',SUBSTR(HEX(upay_id), 17, 4),'-',SUBSTR(HEX(upay_id), 21))) AS upay_id ,\nupay_amount,\nupay_status,\nupay_due_date,\nupay_effective_date,\nupay_posting_date,\nupay_metadata,\nLOWER(CONCAT (SUBSTR(HEX(tok_id), 1, 8),'-',SUBSTR(HEX(tok_id), 9, 4),'-',SUBSTR(HEX(tok_id), 13, 4),'-',SUBSTR(HEX(tok_id), 17, 4),'-',SUBSTR(HEX(tok_id), 21))) AS tok_id ,\nupay_pame_type,\ntran_id,\ntran_unique_transaction_number,\nupay_retry_count,\nLOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) AS loc_id ,\nLOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id ,\nupay_created,\nupay_modified,\nupay_number,\nupay_response_codes\nFROM abcbilling.unmanaged_payment\nWHERE  upay_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND    upay_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "upay_id",
											"type": "String"
										},
										"sink": {
											"name": "upay_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "upay_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "upay_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "upay_status",
											"type": "String"
										},
										"sink": {
											"name": "upay_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "upay_due_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "upay_due_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "upay_effective_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "upay_effective_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "upay_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "upay_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "upay_metadata",
											"type": "String"
										},
										"sink": {
											"name": "upay_metadata",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tok_id",
											"type": "String"
										},
										"sink": {
											"name": "tok_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "upay_pame_type",
											"type": "String"
										},
										"sink": {
											"name": "upay_pame_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tran_id",
											"type": "String"
										},
										"sink": {
											"name": "tran_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										},
										"sink": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "upay_retry_count",
											"type": "Int16"
										},
										"sink": {
											"name": "upay_retry_count",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "upay_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "upay_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "upay_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "upay_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "upay_number",
											"type": "String"
										},
										"sink": {
											"name": "upay_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "upay_response_codes",
											"type": "String"
										},
										"sink": {
											"name": "upay_response_codes",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ABCBILLING_UNMANAGED_PAYMENT_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T14:34:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ABCBILLING_UNMANAGED_REFUND_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ABCBILLING_UNMANAGED_REFUND",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Abcbilling_Unmanaged_Refund_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"description": "",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ABCBILLING_UNMANAGED_REFUND_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ABCBILLING_UNMANAGED_REFUND",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \nLOWER(CONCAT (SUBSTR(HEX(uref_id), 1, 8),'-',SUBSTR(HEX(uref_id), 9, 4),'-',SUBSTR(HEX(uref_id), 13, 4),'-',SUBSTR(HEX(uref_id), 17, 4),'-',SUBSTR(HEX(uref_id), 21))) AS uref_id ,\nuref_amount,\nuref_posting_date,\nuref_metadata,\nLOWER(CONCAT (SUBSTR(HEX(tok_id), 1, 8),'-',SUBSTR(HEX(tok_id), 9, 4),'-',SUBSTR(HEX(tok_id), 13, 4),'-',SUBSTR(HEX(tok_id), 17, 4),'-',SUBSTR(HEX(tok_id), 21))) AS tok_id ,\nuref_pame_type,\ntran_id,\ntran_unique_transaction_number,\nuref_number,\nLOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) AS loc_id ,\nLOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id ,\nuref_created,\nuref_modified\nFROM abcbilling.unmanaged_refund\nWHERE  uref_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND    uref_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "uref_id",
											"type": "String"
										},
										"sink": {
											"name": "uref_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uref_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "uref_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "uref_posting_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "uref_posting_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "uref_metadata",
											"type": "String"
										},
										"sink": {
											"name": "uref_metadata",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tok_id",
											"type": "String"
										},
										"sink": {
											"name": "tok_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uref_pame_type",
											"type": "String"
										},
										"sink": {
											"name": "uref_pame_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tran_id",
											"type": "String"
										},
										"sink": {
											"name": "tran_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										},
										"sink": {
											"name": "tran_unique_transaction_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uref_number",
											"type": "String"
										},
										"sink": {
											"name": "uref_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uref_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "uref_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "uref_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "uref_modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ABCBILLING_UNMANAGED_REFUND_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-11T11:45:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_ABCBILLING_Unmanaged_Ach_Return_Event_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_ABCBILLING_Unmanaged_Ach_Return_Event",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Abcbilling_Unmanaged_Ach_Return_Event_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.ABCBILLING_Unmanaged_Ach_Return_Event_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_ABCBILLING_Unmanaged_Ach_Return_Event",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\nLOWER(CONCAT (SUBSTR(HEX(uare_id), 1, 8),'-',SUBSTR(HEX(uare_id), 9, 4),'-',SUBSTR(HEX(uare_id), 13, 4),'-',SUBSTR(HEX(uare_id), 17, 4),'-',SUBSTR(HEX(uare_id), 21))) AS uare_id,\nLOWER(CONCAT (SUBSTR(HEX(uar_id), 1, 8),'-',SUBSTR(HEX(uar_id), 9, 4),'-',SUBSTR(HEX(uar_id), 13, 4),'-',SUBSTR(HEX(uar_id), 17, 4),'-',SUBSTR(HEX(uar_id), 21))) AS uar_id,\nuare_type,\nuare_date,\nuare_metadata,\nuare_created,\nuare_modified\nFROM abcbilling.unmanaged_ach_return_event\nWHERE uare_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND uare_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "uare_id",
											"type": "String"
										},
										"sink": {
											"name": "uare_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uar_id",
											"type": "String"
										},
										"sink": {
											"name": "uar_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uare_type",
											"type": "String"
										},
										"sink": {
											"name": "uare_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uare_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "uare_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "uare_metadata",
											"type": "String"
										},
										"sink": {
											"name": "uare_metadata",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "uare_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "uare_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "uare_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "uare_modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_ABCBILLING_Unmanaged_Ach_Return_Event_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-17T13:40:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_AUTHORIZATION_Company_Role_Permission_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_AUTHORIZATION_COMPANY_ROLE_PERMISSION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Authorization_Company_Role_Permission_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.AUTHORIZATION_COMPANY_ROLE_PERMISSION_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_AUTHORIZATION_COMPANY_ROLE_PERMISSION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\tLOWER(CONCAT(SUBSTR(HEX(crol_id),1,8),'-',SUBSTR(HEX(crol_id),9,4),'-',SUBSTR(HEX(crol_id),13,4),'-',SUBSTR(HEX(crol_id),17,4),'-',SUBSTR(HEX(crol_id),21))) AS crol_id\n\t,LOWER(CONCAT(SUBSTR(HEX(pm_id),1,8),'-',SUBSTR(HEX(pm_id),9,4),'-',SUBSTR(HEX(pm_id),13,4),'-',SUBSTR(HEX(pm_id),17,4),'-',SUBSTR(HEX(pm_id),21))) AS pm_id\n\t,crop_created\n\t,crop_modified\nFROM authorization.company_role_permission\nWHERE crop_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND crop_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND STR_TO_DATE(crop_modified, '%d,%m,%Y') IS  NULL",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "crol_id",
											"type": "String"
										},
										"sink": {
											"name": "crol_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pm_id",
											"type": "String"
										},
										"sink": {
											"name": "pm_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "crop_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "crop_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "crop_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "crop_modified",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_AUTHORIZATION_COMPANY_ROLE_PERMISSION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-20T17:34:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_AUTHORIZATION_Company_Role_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_AUTHORIZATION_COMPANY_ROLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Authorization_Company_Role_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.AUTHORIZATION_COMPANY_ROLE_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_AUTHORIZATION_COMPANY_ROLE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\tLOWER(CONCAT(SUBSTR(HEX(crol_id),1,8),'-',SUBSTR(HEX(crol_id),9,4),'-',SUBSTR(HEX(crol_id),13,4),'-',SUBSTR(HEX(crol_id),17,4),'-',SUBSTR(HEX(crol_id),21))) AS crol_id\n\t\t,crol_created\n\t\t,crol_modified\n\t\t,crol_name\n\t\t,crol_description\n\t\t,crol_application_permissions\n\t\t,crol_secured_group\n\t\t,crol_is_active\nFROM authorization.company_role\nWHERE crol_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND crol_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "crol_id",
											"type": "String"
										},
										"sink": {
											"name": "crol_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "crol_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "crol_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "crol_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "crol_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "crol_name",
											"type": "String"
										},
										"sink": {
											"name": "crol_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "crol_description",
											"type": "String"
										},
										"sink": {
											"name": "crol_description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "crol_application_permissions",
											"type": "String"
										},
										"sink": {
											"name": "crol_application_permissions",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "crol_secured_group",
											"type": "String"
										},
										"sink": {
											"name": "crol_secured_group",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "crol_is_active",
											"type": "Boolean"
										},
										"sink": {
											"name": "crol_is_active",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_AUTHORIZATION_COMPANY_ROLE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-20T17:34:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_AUTHORIZATION_PERMISSION_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_AUTHORIZATION_PERMISSION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Authorization_Permission_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.AUTHORIZATION_PERMISSION_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_AUTHORIZATION_PERMISSION",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\tLOWER(CONCAT(SUBSTR(HEX(pm_id),1,8),'-',SUBSTR(HEX(pm_id),9,4),'-',SUBSTR(HEX(pm_id),13,4),'-',SUBSTR(HEX(pm_id),17,4),'-',SUBSTR(HEX(pm_id),21))) AS pm_id\n\t,pm_created\n\t,pm_modified\n\t,pm_name\n\t,pm_description\n\t,pm_key\n\t,pm_is_internal\n\t,pm_is_payor\n\t,pm_is_employee\n\t,pm_is_member\nFROM authorization.permission\nWHERE pm_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND pm_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "pm_id",
											"type": "String"
										},
										"sink": {
											"name": "pm_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pm_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "pm_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "pm_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "pm_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "pm_name",
											"type": "String"
										},
										"sink": {
											"name": "pm_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pm_description",
											"type": "String"
										},
										"sink": {
											"name": "pm_description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pm_key",
											"type": "String"
										},
										"sink": {
											"name": "pm_key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pm_is_internal",
											"type": "Boolean"
										},
										"sink": {
											"name": "pm_is_internal",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "pm_is_payor",
											"type": "Boolean"
										},
										"sink": {
											"name": "pm_is_payor",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "pm_is_employee",
											"type": "Boolean"
										},
										"sink": {
											"name": "pm_is_employee",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "pm_is_member",
											"type": "Boolean"
										},
										"sink": {
											"name": "pm_is_member",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_ABCBILLING",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_AUTHORIZATION_PERMISSION_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-20T17:34:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_CATALOG_Item_Category_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_CATALOG_ITEM_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Catalog_Item_Category_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [StgRCM].[CATALOG_ITEM_CATEGORY_INCR]\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_CATALOG_ITEM_CATEGORY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT \t\n\tLOWER(CONCAT (\n\t\t\tSUBSTR(HEX(org_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 21)\n\t\t\t)) AS org_id\n\t,LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(loc_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 21)\n\t\t\t)) AS loc_id\n\t\n\t,LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(itca_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 21)\n\t\t\t)) AS itca_id\n\t,itca_created\n\t,itca_modified\n\t,itca_name\n\t,itca_description\n\t,itca_is_active\n\t,itca_type\n\t,itca_icon\n\t,itca_origin\nFROM catalog.item_category\nWHERE itca_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND itca_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_id",
											"type": "String"
										},
										"sink": {
											"name": "itca_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "itca_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "itca_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "itca_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "itca_name",
											"type": "String"
										},
										"sink": {
											"name": "itca_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_description",
											"type": "String"
										},
										"sink": {
											"name": "itca_description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_is_active",
											"type": "Boolean"
										},
										"sink": {
											"name": "itca_is_active",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "itca_type",
											"type": "String"
										},
										"sink": {
											"name": "itca_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_icon",
											"type": "String"
										},
										"sink": {
											"name": "itca_icon",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_origin",
											"type": "String"
										},
										"sink": {
											"name": "itca_origin",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_CATALOG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_Catalog_Item_Category_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_CATALOG_Item_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_CATALOG_ITEM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Catalog_Item_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.CATALOG_ITEM_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_CATALOG_ITEM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\t\n    LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(org_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(org_id), 21)\n\t\t\t)) AS org_id,\n\t\t\t\n    LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(loc_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(loc_id), 21)\n\t\t\t)) AS loc_id,\t\t\n\t\t\t\n    LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(it_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(it_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(it_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(it_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(it_id), 21)\n\t\t\t)) AS it_id,\nit_version,\nit_active,\nit_created,\nit_modified,\nit_name,\nit_type,\nit_quantity,\nit_unlimited,\nit_expiration_start_type,\nit_expiration_time,\nit_expiration_unit_type,\ncur_id,\n     LOWER(CONCAT (\n\t\t\tSUBSTR(HEX(itca_id), 1, 8)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 9, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 13, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 17, 4)\n\t\t\t,'-'\n\t\t\t,SUBSTR(HEX(itca_id), 21)\n\t\t\t)) AS itca_id,\n\nit_description,\nit_is_actual,\nit_default_due_date,\nit_is_lock,\nit_price,\nis_tax_included,\nit_frequency,\nit_image_path,\nit_barcode,\nit_origin,\nit_sku,\nit_upc\nFROM catalog.item\nWHERE it_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND it_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_id",
											"type": "String"
										},
										"sink": {
											"name": "it_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_version",
											"type": "Int64"
										},
										"sink": {
											"name": "it_version",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "it_active",
											"type": "Boolean"
										},
										"sink": {
											"name": "it_active",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "it_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "it_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "it_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "it_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "it_name",
											"type": "String"
										},
										"sink": {
											"name": "it_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_type",
											"type": "String"
										},
										"sink": {
											"name": "it_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_quantity",
											"type": "Int32"
										},
										"sink": {
											"name": "it_quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "it_unlimited",
											"type": "Boolean"
										},
										"sink": {
											"name": "it_unlimited",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "it_expiration_start_type",
											"type": "String"
										},
										"sink": {
											"name": "it_expiration_start_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_expiration_time",
											"type": "Int32"
										},
										"sink": {
											"name": "it_expiration_time",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "it_expiration_unit_type",
											"type": "String"
										},
										"sink": {
											"name": "it_expiration_unit_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cur_id",
											"type": "String"
										},
										"sink": {
											"name": "cur_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "itca_id",
											"type": "String"
										},
										"sink": {
											"name": "itca_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_description",
											"type": "String"
										},
										"sink": {
											"name": "it_description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_is_actual",
											"type": "Boolean"
										},
										"sink": {
											"name": "it_is_actual",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "it_default_due_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "it_default_due_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "it_is_lock",
											"type": "Boolean"
										},
										"sink": {
											"name": "it_is_lock",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "it_price",
											"type": "Decimal"
										},
										"sink": {
											"name": "it_price",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "is_tax_included",
											"type": "Boolean"
										},
										"sink": {
											"name": "is_tax_included",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "it_frequency",
											"type": "String"
										},
										"sink": {
											"name": "it_frequency",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_image_path",
											"type": "String"
										},
										"sink": {
											"name": "it_image_path",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_barcode",
											"type": "String"
										},
										"sink": {
											"name": "it_barcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_origin",
											"type": "String"
										},
										"sink": {
											"name": "it_origin",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_sku",
											"type": "String"
										},
										"sink": {
											"name": "it_sku",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "it_upc",
											"type": "String"
										},
										"sink": {
											"name": "it_upc",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_CATALOG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_Catalog_Item_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_Collection_Agency_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_COLLECTION_AGENCY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Agency_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_AGENCY_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_COLLECTION_AGENCY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n\t\tLOWER(CONCAT (SUBSTR(HEX(ag_id), 1, 8),'-',SUBSTR(HEX(ag_id), 9, 4),'-',SUBSTR(HEX(ag_id), 13, 4),'-',SUBSTR(HEX(ag_id), 17, 4),'-',SUBSTR(HEX(ag_id), 21))) as ag_id\n\t\t,ag_address2\n\t\t,ag_agency_name\n\t\t,ag_city\n\t\t,ag_contact_email\n\t\t,ag_contact_name\n\t\t,ag_contact_phone\n\t\t,ag_contact_phone_extension\n\t\t,ag_created\n\t\t,ag_modified\n\t\t,ag_postal_code\n\t\t,ag_send_method\n\t\t,ag_csv_delimiter\n\t\t,ag_address1\n\t\t,ag_province_code\n\t\t,ag_province_name\n\t\t,ag_country_code\n\t\t,ag_contact_phone_country_code\n\t\t,tzl_id\nFROM hard_collection.agency\nWHERE ag_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND ag_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ag_id",
											"type": "String"
										},
										"sink": {
											"name": "ag_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_address2",
											"type": "String"
										},
										"sink": {
											"name": "ag_address2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_agency_name",
											"type": "String"
										},
										"sink": {
											"name": "ag_agency_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_city",
											"type": "String"
										},
										"sink": {
											"name": "ag_city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_contact_email",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_contact_name",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_contact_phone",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_contact_phone_extension",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_phone_extension",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ag_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ag_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ag_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ag_postal_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_postal_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_send_method",
											"type": "String"
										},
										"sink": {
											"name": "ag_send_method",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_csv_delimiter",
											"type": "String"
										},
										"sink": {
											"name": "ag_csv_delimiter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_address1",
											"type": "String"
										},
										"sink": {
											"name": "ag_address1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_province_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_province_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_province_name",
											"type": "String"
										},
										"sink": {
											"name": "ag_province_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_country_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_country_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ag_contact_phone_country_code",
											"type": "String"
										},
										"sink": {
											"name": "ag_contact_phone_country_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tzl_id",
											"type": "String"
										},
										"sink": {
											"name": "tzl_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_HARD_COLLECTION_AGENCY_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_Collection_Billing_Account_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_Collection_Billing_Account",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Billing_Account_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table [StgRCM].[HARD_COLLECTION_BILLING_ACCOUNT_INCR];\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_Collection_Billing_Account",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT LOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id ,\n       LOWER(CONCAT (SUBSTR(HEX(agrm_id), 1, 8),'-',SUBSTR(HEX(agrm_id), 9, 4),'-',SUBSTR(HEX(agrm_id), 13, 4),'-',SUBSTR(HEX(agrm_id), 17, 4),'-',SUBSTR(HEX(agrm_id), 21))) AS agrm_id,\n\t   LOWER(CONCAT (SUBSTR(HEX(m_id), 1, 8),'-',SUBSTR(HEX(m_id), 9, 4),'-',SUBSTR(HEX(m_id), 13, 4),'-',SUBSTR(HEX(m_id), 17, 4),'-',SUBSTR(HEX(m_id), 21))) AS m_id, \n\t   agrm_number,\n\t   LOWER(CONCAT (SUBSTR(HEX(pcp_id), 1, 8),'-',SUBSTR(HEX(pcp_id), 9, 4),'-',SUBSTR(HEX(pcp_id), 13, 4),'-',SUBSTR(HEX(pcp_id), 17, 4),'-',SUBSTR(HEX(pcp_id), 21))) AS pcp_id,\n\t   ba_payload,\nba_created,\nba_modified,\nagrm_amount_due,\nagrm_future_value,\nba_sending_status,\nba_late_fees_amount,\nba_service_fees_amount,\nba_last_transaction_amount,\nba_last_transaction_posted_date\n\t   \t\nFROM hard_collection.billing_account\nWHERE  ba_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\nAND    ba_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i')\n\n\n\n\n\n\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "agrm_id",
											"type": "String"
										},
										"sink": {
											"name": "agrm_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "m_id",
											"type": "String"
										},
										"sink": {
											"name": "m_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "agrm_number",
											"type": "String"
										},
										"sink": {
											"name": "agrm_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pcp_id",
											"type": "String"
										},
										"sink": {
											"name": "pcp_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ba_payload",
											"type": "String"
										},
										"sink": {
											"name": "ba_payload",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ba_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "ba_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ba_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "ba_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "agrm_amount_due",
											"type": "Decimal"
										},
										"sink": {
											"name": "agrm_amount_due",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "agrm_future_value",
											"type": "Decimal"
										},
										"sink": {
											"name": "agrm_future_value",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ba_sending_status",
											"type": "String"
										},
										"sink": {
											"name": "ba_sending_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ba_late_fees_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ba_late_fees_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ba_service_fees_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ba_service_fees_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ba_last_transaction_amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ba_last_transaction_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ba_last_transaction_posted_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "ba_last_transaction_posted_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_HARD_COLLECTION_BILLING_ACCOUNT_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_Collection_Collection_State_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_COLLECTION_COLLECTION_STATE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Collection_State_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_COLLECTION_STATE_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_COLLECTION_COLLECTION_STATE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT LOWER(CONCAT (SUBSTR(HEX(cost_id), 1, 8),'-',SUBSTR(HEX(cost_id), 9, 4),'-',SUBSTR(HEX(cost_id), 13, 4),'-',SUBSTR(HEX(cost_id), 17, 4),'-',SUBSTR(HEX(cost_id), 21))) AS cost_id,\n\t   LOWER(CONCAT (SUBSTR(HEX(org_id), 1, 8),'-',SUBSTR(HEX(org_id), 9, 4),'-',SUBSTR(HEX(org_id), 13, 4),'-',SUBSTR(HEX(org_id), 17, 4),'-',SUBSTR(HEX(org_id), 21))) AS org_id,\n       LOWER(CONCAT (SUBSTR(HEX(pcp_id), 1, 8),'-',SUBSTR(HEX(pcp_id), 9, 4),'-',SUBSTR(HEX(pcp_id), 13, 4),'-',SUBSTR(HEX(pcp_id), 17, 4),'-',SUBSTR(HEX(pcp_id), 21))) AS pcp_id, \n\t\tcost_status,\n\t\tcost_rfc_date,\n\t\tcost_past_due_since,\n\t\tcost_total_amount_due,\n\t\tcost_event_date_time,\n\t\tLOWER(CONCAT (SUBSTR(HEX(cost_reference_id), 1, 8),'-',SUBSTR(HEX(cost_reference_id), 9, 4),'-',SUBSTR(HEX(cost_reference_id), 13, 4),'-',SUBSTR(HEX(cost_reference_id), 17, 4),'-',SUBSTR(HEX(cost_reference_id), 21))) AS cost_reference_id, \n\t\tcost_sent_to_agency,\n\t\tcost_created,\n\t\tcost_modified,\n\t\tcost_payload,\n\t\tLOWER(CONCAT (SUBSTR(HEX(of_id), 1, 8),'-',SUBSTR(HEX(of_id), 9, 4),'-',SUBSTR(HEX(of_id), 13, 4),'-',SUBSTR(HEX(of_id), 17, 4),'-',SUBSTR(HEX(of_id), 21))) AS of_id,\n\t\tLOWER(CONCAT (SUBSTR(HEX(agrm_id), 1, 8),'-',SUBSTR(HEX(agrm_id), 9, 4),'-',SUBSTR(HEX(agrm_id), 13, 4),'-',SUBSTR(HEX(agrm_id), 17, 4),'-',SUBSTR(HEX(agrm_id), 21))) AS agrm_id\nFROM hard_collection.collection_state\nWHERE cost_modified >= STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')\nAND cost_modified < STR_TO_DATE('@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}', '%Y-%m-%d %H:%i ')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "cost_id",
											"type": "String"
										},
										"sink": {
											"name": "cost_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "org_id",
											"type": "String"
										},
										"sink": {
											"name": "org_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pcp_id",
											"type": "String"
										},
										"sink": {
											"name": "pcp_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cost_status",
											"type": "String"
										},
										"sink": {
											"name": "cost_status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cost_rfc_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_rfc_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_past_due_since",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_past_due_since",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_total_amount_due",
											"type": "Decimal"
										},
										"sink": {
											"name": "cost_total_amount_due",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "cost_event_date_time",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_event_date_time",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_reference_id",
											"type": "String"
										},
										"sink": {
											"name": "cost_reference_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cost_sent_to_agency",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_sent_to_agency",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_created",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_modified",
											"type": "DateTime"
										},
										"sink": {
											"name": "cost_modified",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cost_payload",
											"type": "String"
										},
										"sink": {
											"name": "cost_payload",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "of_id",
											"type": "String"
										},
										"sink": {
											"name": "of_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "agrm_id",
											"type": "String"
										},
										"sink": {
											"name": "agrm_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_HARD_COLLECTION_COLLECTION_STATE_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RCM_HARD_Collection_Location_Agency_SQLPOOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge to Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RCM_HARD_COLLECTION_LOCATION_AGENCY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[StgRCM].[Hard_Collection_Location_Agency_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Incr table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "truncate table StgRCM.HARD_COLLECTION_LOCATION_AGENCY_INCR;\nselect 0;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "RCM_HARD_COLLECTION_LOCATION_AGENCY",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate Incr table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n\tLOWER(CONCAT (SUBSTR(HEX(ag_id), 1, 8),'-',SUBSTR(HEX(ag_id), 9, 4),'-',SUBSTR(HEX(ag_id), 13, 4),'-',SUBSTR(HEX(ag_id), 17, 4),'-',SUBSTR(HEX(ag_id), 21))) as ag_id,\n\tLOWER(CONCAT (SUBSTR(HEX(loc_id), 1, 8),'-',SUBSTR(HEX(loc_id), 9, 4),'-',SUBSTR(HEX(loc_id), 13, 4),'-',SUBSTR(HEX(loc_id), 17, 4),'-',SUBSTR(HEX(loc_id), 21))) as loc_id,\n\tla_end_date,\n\tla_start_date\t\nFROM hard_collection.location_agency",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "vifiles"
							},
							"parallelCopies": 32,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ag_id",
											"type": "String"
										},
										"sink": {
											"name": "ag_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_id",
											"type": "String"
										},
										"sink": {
											"name": "loc_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "la_end_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "la_end_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "la_start_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "la_start_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RCM_HARD_COLLECTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SNK_SYN_RCM_HARD_COLLECTION_LOCATION_AGENCY_INCR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RCM_SQLPOOL"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T11:25:30Z"
			},
			"dependsOn": []
		}
	]
}